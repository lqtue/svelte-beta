{
  "version": 3,
  "sources": ["../output/server/chunks/false.js", "../../node_modules/@sveltejs/kit/src/exports/internal/remote-functions.js", "../../node_modules/@sveltejs/kit/src/exports/internal/index.js", "../../node_modules/@sveltejs/kit/src/runtime/server/constants.js", "../../node_modules/@sveltejs/kit/src/exports/internal/event.js", "../../node_modules/@sveltejs/kit/src/exports/internal/server.js", "../output/server/chunks/exports.js", "../output/server/chunks/utils.js", "../../node_modules/clsx/dist/clsx.mjs", "../output/server/chunks/context.js", "../output/server/chunks/index.js", "../output/server/chunks/index2.js", "../../node_modules/cookie/index.js", "../../node_modules/set-cookie-parser/lib/set-cookie.js", "../output/server/entries/pages/_layout.svelte.js", "../output/server/nodes/0.js", "../output/server/chunks/state.svelte.js", "../output/server/entries/fallbacks/error.svelte.js", "../output/server/nodes/1.js", "../output/server/chunks/SidebarNav.js", "../output/server/chunks/breakpoints.js", "../output/server/chunks/mode.js", "../output/server/entries/pages/create/_layout.svelte.js", "../output/server/nodes/2.js", "../output/server/entries/pages/view/_layout.svelte.js", "../output/server/nodes/3.js", "../output/server/entries/pages/_page.svelte.js", "../output/server/nodes/4.js", "../../node_modules/ol/console.js", "../../node_modules/ol/extent/Relationship.js", "../../node_modules/ol/extent.js", "../../node_modules/ol/math.js", "../../node_modules/ol/coordinate.js", "../../node_modules/ol/proj/Units.js", "../../node_modules/ol/proj/Projection.js", "../../node_modules/ol/proj/epsg3857.js", "../../node_modules/ol/proj/epsg4326.js", "../../node_modules/ol/proj/projections.js", "../../node_modules/ol/obj.js", "../../node_modules/ol/proj/transforms.js", "../../node_modules/ol/proj/utm.js", "../../node_modules/ol/sphere.js", "../../node_modules/ol/proj.js", "../../node_modules/ol/ObjectEventType.js", "../../node_modules/ol/events/EventType.js", "../../node_modules/ol/Disposable.js", "../../node_modules/ol/array.js", "../../node_modules/ol/functions.js", "../../node_modules/ol/events/Event.js", "../../node_modules/ol/events/Target.js", "../../node_modules/ol/events.js", "../../node_modules/ol/Observable.js", "../../node_modules/ol/util.js", "../../node_modules/ol/Object.js", "../../node_modules/ol/asserts.js", "../../node_modules/ol/Feature.js", "../../node_modules/ol/transform.js", "../../node_modules/ol/geom/flat/transform.js", "../../node_modules/ol/geom/Geometry.js", "../../node_modules/ol/geom/SimpleGeometry.js", "../../node_modules/ol/geom/flat/deflate.js", "../../node_modules/ol/geom/flat/center.js", "../../node_modules/ol/geom/flat/contains.js", "../../node_modules/ol/geom/flat/interiorpoint.js", "../../node_modules/ol/geom/flat/interpolate.js", "../../node_modules/ol/geom/flat/reverse.js", "../../node_modules/ol/geom/flat/orient.js", "../../node_modules/ol/geom/flat/simplify.js", "../../node_modules/ol/geom/GeometryCollection.js", "../../node_modules/ol/geom/flat/area.js", "../../node_modules/ol/geom/flat/closest.js", "../../node_modules/ol/geom/flat/inflate.js", "../../node_modules/ol/geom/LinearRing.js", "../../node_modules/ol/geom/flat/segments.js", "../../node_modules/ol/geom/flat/intersectsextent.js", "../../node_modules/ol/geom/flat/length.js", "../../node_modules/ol/geom/LineString.js", "../../node_modules/ol/geom/MultiLineString.js", "../../node_modules/ol/geom/Point.js", "../../node_modules/ol/geom/MultiPoint.js", "../../node_modules/ol/geom/Polygon.js", "../../node_modules/ol/geom/MultiPolygon.js", "../../node_modules/ol/geom.js", "../../node_modules/ol/render/Feature.js", "../../node_modules/ol/format/Feature.js", "../../node_modules/ol/format/JSONFeature.js", "../../node_modules/ol/format/GeoJSON.js", "../../node_modules/@allmaps/stdlib/dist/fetch.js", "../../node_modules/@allmaps/stdlib/dist/api.js", "../../node_modules/@allmaps/stdlib/dist/background-color.js", "../../node_modules/monotone-chain-convex-hull/src/index.ts", "../../node_modules/@allmaps/stdlib/dist/geometry.js", "../../node_modules/@allmaps/stdlib/dist/geojson.js", "../../node_modules/@allmaps/stdlib/dist/bbox.js", "../../node_modules/@allmaps/stdlib/dist/cache.js", "../../node_modules/hex-rgb/index.js", "../../node_modules/rgb-hex/index.js", "../../node_modules/@allmaps/stdlib/dist/color.js", "../../node_modules/@allmaps/stdlib/dist/main.js", "../../node_modules/@allmaps/stdlib/dist/masks.js", "../../node_modules/@allmaps/stdlib/dist/matrix.js", "../../node_modules/@allmaps/stdlib/dist/options.js", "../../node_modules/svg-parser/node_modules/locate-character/dist/locate-character.es.js", "../../node_modules/svg-parser/src/index.js", "../../node_modules/@allmaps/stdlib/dist/svg.js", "../../node_modules/@allmaps/stdlib/dist/self-intersect.js", "../../node_modules/@allmaps/stdlib/dist/index.js", "../../node_modules/@allmaps/transform/dist/shared/distortion.js", "../../node_modules/@allmaps/transform/dist/transformation-types/BaseTransformation.js", "../../node_modules/@allmaps/transform/dist/transformation-types/BaseLinearWeightsTransformation.js", "../../node_modules/@allmaps/transform/dist/shared/solve-functions.js", "../../node_modules/@allmaps/transform/dist/transformation-types/Helmert.js", "../../node_modules/@allmaps/transform/dist/transformation-types/Straight.js", "../../node_modules/@allmaps/transform/dist/transformation-types/BaseIndependentLinearWeightsTransformation.js", "../../node_modules/@allmaps/transform/dist/transformation-types/BasePolynomialTransformation.js", "../../node_modules/@allmaps/transform/dist/transformation-types/Polynomial1.js", "../../node_modules/@allmaps/transform/dist/transformation-types/Polynomial2.js", "../../node_modules/@allmaps/transform/dist/transformation-types/Polynomial3.js", "../../node_modules/@allmaps/transform/dist/transformation-types/Projective.js", "../../node_modules/@allmaps/transform/dist/transformation-types/RBF.js", "../../node_modules/@allmaps/transform/dist/shared/kernel-functions.js", "../../node_modules/@allmaps/transform/dist/shared/norm-functions.js", "../../node_modules/@allmaps/transform/dist/shared/refinement-functions.js", "../../node_modules/@allmaps/transform/dist/shared/transform-functions.js", "../../node_modules/@allmaps/transform/dist/shared/conversion-functions.js", "../../node_modules/@allmaps/transform/dist/transformers/BaseGcpTransformer.js", "../../node_modules/@allmaps/transform/dist/transformers/GcpTransformer.js", "../../node_modules/@allmaps/transform/dist/transformers/GeneralGcpTransformer.js", "../../node_modules/@allmaps/transform/dist/shared/types.js", "../../node_modules/@allmaps/transform/dist/index.js", "../../node_modules/@allmaps/tailwind/dist/colors.js", "../../node_modules/@allmaps/tailwind/dist/theme-colors.js", "../../node_modules/@allmaps/tailwind/dist/theme.js", "../../node_modules/@allmaps/tailwind/dist/index.js", "../../node_modules/@allmaps/render/src/shared/events.ts", "../../node_modules/@allmaps/id/dist/checksum.js", "../../node_modules/@allmaps/id/dist/index.js", "../../node_modules/zod/v3/helpers/util.js", "../../node_modules/zod/v3/ZodError.js", "../../node_modules/zod/v3/locales/en.js", "../../node_modules/zod/v3/errors.js", "../../node_modules/zod/v3/helpers/parseUtil.js", "../../node_modules/zod/v3/helpers/typeAliases.js", "../../node_modules/zod/v3/helpers/errorUtil.js", "../../node_modules/zod/v3/types.js", "../../node_modules/zod/v3/external.js", "../../node_modules/zod/index.js", "../../node_modules/@allmaps/annotation/dist/schemas/shared.js", "../../node_modules/@allmaps/annotation/dist/schemas/annotation/annotation.0.js", "../../node_modules/@allmaps/annotation/dist/schemas/annotation/annotation.1.js", "../../node_modules/@allmaps/annotation/dist/schemas/annotation.js", "../../node_modules/@allmaps/annotation/dist/before-parse.js", "../../node_modules/@allmaps/annotation/dist/guards.js", "../../node_modules/@allmaps/annotation/dist/parser.js", "../../node_modules/@allmaps/annotation/dist/schemas/georeferenced-map/georeferenced-map.1.js", "../../node_modules/@allmaps/annotation/dist/schemas/georeferenced-map/georeferenced-map.2.js", "../../node_modules/@allmaps/annotation/dist/schemas/georeferenced-map.js", "../../node_modules/@allmaps/annotation/dist/generator.js", "../../node_modules/@allmaps/annotation/dist/convert.js", "../../node_modules/@allmaps/annotation/dist/validator.js", "../../node_modules/@allmaps/annotation/dist/index.js", "../../node_modules/proj4/lib/global.js", "../../node_modules/proj4/lib/constants/values.js", "../../node_modules/proj4/lib/constants/PrimeMeridian.js", "../../node_modules/proj4/lib/constants/units.js", "../../node_modules/proj4/lib/match.js", "../../node_modules/proj4/lib/projString.js", "../../node_modules/wkt-parser/PROJJSONBuilderBase.js", "../../node_modules/wkt-parser/PROJJSONBuilder2015.js", "../../node_modules/wkt-parser/PROJJSONBuilder2019.js", "../../node_modules/wkt-parser/buildPROJJSON.js", "../../node_modules/wkt-parser/detectWKTVersion.js", "../../node_modules/wkt-parser/parser.js", "../../node_modules/wkt-parser/process.js", "../../node_modules/wkt-parser/util.js", "../../node_modules/wkt-parser/transformPROJJSON.js", "../../node_modules/wkt-parser/index.js", "../../node_modules/proj4/lib/defs.js", "../../node_modules/proj4/lib/parseCode.js", "../../node_modules/proj4/lib/extend.js", "../../node_modules/proj4/lib/common/msfnz.js", "../../node_modules/proj4/lib/common/sign.js", "../../node_modules/proj4/lib/common/adjust_lon.js", "../../node_modules/proj4/lib/common/tsfnz.js", "../../node_modules/proj4/lib/common/phi2z.js", "../../node_modules/proj4/lib/projections/merc.js", "../../node_modules/proj4/lib/projections/longlat.js", "../../node_modules/proj4/lib/projections.js", "../../node_modules/proj4/lib/constants/Ellipsoid.js", "../../node_modules/proj4/lib/deriveConstants.js", "../../node_modules/proj4/lib/constants/Datum.js", "../../node_modules/proj4/lib/datum.js", "../../node_modules/proj4/lib/nadgrid.js", "../../node_modules/proj4/lib/Proj.js", "../../node_modules/proj4/lib/datumUtils.js", "../../node_modules/proj4/lib/datum_transform.js", "../../node_modules/proj4/lib/adjust_axis.js", "../../node_modules/proj4/lib/common/toPoint.js", "../../node_modules/proj4/lib/checkSanity.js", "../../node_modules/proj4/lib/transform.js", "../../node_modules/proj4/lib/core.js", "../../node_modules/mgrs/mgrs.js", "../../node_modules/proj4/lib/Point.js", "../../node_modules/proj4/lib/common/pj_enfn.js", "../../node_modules/proj4/lib/common/pj_mlfn.js", "../../node_modules/proj4/lib/common/pj_inv_mlfn.js", "../../node_modules/proj4/lib/projections/tmerc.js", "../../node_modules/proj4/lib/common/sinh.js", "../../node_modules/proj4/lib/common/hypot.js", "../../node_modules/proj4/lib/common/log1py.js", "../../node_modules/proj4/lib/common/asinhy.js", "../../node_modules/proj4/lib/common/gatg.js", "../../node_modules/proj4/lib/common/clens.js", "../../node_modules/proj4/lib/common/cosh.js", "../../node_modules/proj4/lib/common/clens_cmplx.js", "../../node_modules/proj4/lib/projections/etmerc.js", "../../node_modules/proj4/lib/common/adjust_zone.js", "../../node_modules/proj4/lib/projections/utm.js", "../../node_modules/proj4/lib/common/srat.js", "../../node_modules/proj4/lib/projections/gauss.js", "../../node_modules/proj4/lib/projections/sterea.js", "../../node_modules/proj4/lib/projections/stere.js", "../../node_modules/proj4/lib/projections/somerc.js", "../../node_modules/proj4/lib/projections/omerc.js", "../../node_modules/proj4/lib/projections/lcc.js", "../../node_modules/proj4/lib/projections/krovak.js", "../../node_modules/proj4/lib/common/mlfn.js", "../../node_modules/proj4/lib/common/e0fn.js", "../../node_modules/proj4/lib/common/e1fn.js", "../../node_modules/proj4/lib/common/e2fn.js", "../../node_modules/proj4/lib/common/e3fn.js", "../../node_modules/proj4/lib/common/gN.js", "../../node_modules/proj4/lib/common/adjust_lat.js", "../../node_modules/proj4/lib/common/imlfn.js", "../../node_modules/proj4/lib/projections/cass.js", "../../node_modules/proj4/lib/common/qsfnz.js", "../../node_modules/proj4/lib/projections/laea.js", "../../node_modules/proj4/lib/common/asinz.js", "../../node_modules/proj4/lib/projections/aea.js", "../../node_modules/proj4/lib/projections/gnom.js", "../../node_modules/proj4/lib/common/iqsfnz.js", "../../node_modules/proj4/lib/projections/cea.js", "../../node_modules/proj4/lib/projections/eqc.js", "../../node_modules/proj4/lib/projections/poly.js", "../../node_modules/proj4/lib/projections/nzmg.js", "../../node_modules/proj4/lib/projections/mill.js", "../../node_modules/proj4/lib/projections/sinu.js", "../../node_modules/proj4/lib/projections/moll.js", "../../node_modules/proj4/lib/projections/eqdc.js", "../../node_modules/proj4/lib/projections/vandg.js", "../../node_modules/proj4/lib/common/vincenty.js", "../../node_modules/proj4/lib/projections/aeqd.js", "../../node_modules/proj4/lib/projections/ortho.js", "../../node_modules/proj4/lib/projections/qsc.js", "../../node_modules/proj4/lib/projections/robin.js", "../../node_modules/proj4/lib/projections/geocent.js", "../../node_modules/proj4/lib/projections/tpers.js", "../../node_modules/proj4/lib/projections/geos.js", "../../node_modules/proj4/lib/projections/eqearth.js", "../../node_modules/proj4/lib/projections/bonne.js", "../../node_modules/proj4/projs.js", "../../node_modules/proj4/lib/index.js", "../../node_modules/@allmaps/project/dist/shared/project-functions.js", "../../node_modules/@allmaps/project/dist/projected-transformers/ProjectedGcpTransformer.js", "../../node_modules/@allmaps/project/dist/index.js", "../../node_modules/quickselect/index.js", "../../node_modules/rbush/index.js", "../../node_modules/robust-predicates/esm/util.js", "../../node_modules/robust-predicates/esm/orient2d.js", "../../node_modules/robust-predicates/esm/orient3d.js", "../../node_modules/robust-predicates/esm/incircle.js", "../../node_modules/robust-predicates/esm/insphere.js", "../../node_modules/robust-predicates/index.js", "../../node_modules/point-in-polygon-hao/dist/esm/index.js", "../../node_modules/@allmaps/render/src/renderers/BaseRenderer.ts", "../../node_modules/@allmaps/triangulate/dist/shared.js", "../../node_modules/@kninnug/constrainautor/lib/Constrainautor.mjs", "../../node_modules/@allmaps/triangulate/dist/index.js", "../../node_modules/@allmaps/iiif-parser/dist/schemas/image.1.js", "../../node_modules/@allmaps/iiif-parser/dist/schemas/shared.js", "../../node_modules/@allmaps/iiif-parser/dist/schemas/image.2.js", "../../node_modules/@allmaps/iiif-parser/dist/schemas/image.3.js", "../../node_modules/@allmaps/iiif-parser/dist/schemas/image-service.2.js", "../../node_modules/@allmaps/iiif-parser/dist/schemas/image-service.3.js", "../../node_modules/@allmaps/iiif-parser/dist/schemas/image-service.js", "../../node_modules/@allmaps/iiif-parser/dist/lib/convert.js", "../../node_modules/@allmaps/iiif-parser/dist/schemas/presentation.2.js", "../../node_modules/@allmaps/iiif-parser/dist/schemas/presentation.3.js", "../../node_modules/@allmaps/iiif-parser/dist/schemas/iiif.js", "../../node_modules/@allmaps/iiif-parser/dist/lib/tiles.js", "../../node_modules/@allmaps/iiif-parser/dist/lib/image-requests.js", "../../node_modules/@allmaps/iiif-parser/dist/lib/profile.js", "../../node_modules/@allmaps/iiif-parser/dist/classes/image.js", "../../node_modules/@allmaps/iiif-parser/dist/classes/canvas.js", "../../node_modules/@allmaps/iiif-parser/dist/classes/manifest.js", "../../node_modules/@allmaps/iiif-parser/dist/classes/collection.js", "../../node_modules/@allmaps/iiif-parser/dist/classes/iiif.js", "../../node_modules/@allmaps/iiif-parser/dist/index.js", "../../node_modules/@allmaps/render/src/shared/homogeneous-transform.ts", "../../node_modules/@allmaps/render/src/shared/webgl2.ts", "../../node_modules/@allmaps/render/src/tilecache/CacheableTile.ts", "../../node_modules/@allmaps/render/src/shaders/map/vertex-shader.glsl", "../../node_modules/@allmaps/render/src/shaders/map/fragment-shader.glsl", "../../node_modules/@allmaps/render/src/shaders/lines/vertex-shader.glsl", "../../node_modules/@allmaps/render/src/shaders/lines/fragment-shader.glsl", "../../node_modules/@allmaps/render/src/shaders/points/vertex-shader.glsl", "../../node_modules/@allmaps/render/src/shaders/points/fragment-shader.glsl", "../../node_modules/@allmaps/render/dist/workers/fetch-and-get-image-data.js", "../../node_modules/@allmaps/render/src/renderers/WebGL2Renderer.ts", "../../node_modules/@allmaps/render/dist/webgl2.js", "../../node_modules/@allmaps/render/dist/index.js", "../../node_modules/@allmaps/openlayers/dist/index.js", "../../node_modules/ol/TileState.js", "../../node_modules/ol/easing.js", "../../node_modules/ol/Tile.js", "../../node_modules/ol/has.js", "../../node_modules/ol/dom.js", "../../node_modules/ol/DataTile.js", "../../node_modules/ol/ImageState.js", "../../node_modules/ol/Image.js", "../../node_modules/ol/ImageTile.js", "../../node_modules/ol/TileRange.js", "../../node_modules/ol/reproj.js", "../../node_modules/ol/reproj/Triangulation.js", "../../node_modules/ol/reproj/common.js", "../../node_modules/ol/reproj/Tile.js", "../../node_modules/ol/size.js", "../../node_modules/ol/structs/LRUCache.js", "../../node_modules/ol/tilecoord.js", "../../node_modules/ol/color.js", "../../node_modules/ol/render/Event.js", "../../node_modules/ol/render/EventType.js", "../../node_modules/ol/render/canvas/ZIndexContext.js", "../../node_modules/ol/renderer/Layer.js", "../../node_modules/ol/renderer/canvas/Layer.js", "../../node_modules/ol/renderer/canvas/TileLayer.js", "../../node_modules/ol/ViewHint.js", "../../node_modules/ol/ViewProperty.js", "../../node_modules/ol/centerconstraint.js", "../../node_modules/ol/resolutionconstraint.js", "../../node_modules/ol/rotationconstraint.js", "../../node_modules/ol/tilegrid/common.js", "../../node_modules/ol/View.js", "../../node_modules/ol/layer/Property.js", "../../node_modules/ol/layer/Base.js", "../../node_modules/ol/layer/Layer.js", "../../node_modules/ol/layer/TileProperty.js", "../../node_modules/ol/layer/BaseTile.js", "../../node_modules/ol/layer/Tile.js", "../../node_modules/ol/tilegrid/TileGrid.js", "../../node_modules/ol/tilegrid.js", "../../node_modules/ol/uri.js", "../../node_modules/ol/tileurlfunction.js", "../../node_modules/ol/source/Source.js", "../../node_modules/ol/source/Tile.js", "../../node_modules/ol/source/TileEventType.js", "../../node_modules/ol/source/UrlTile.js", "../../node_modules/ol/source/TileImage.js", "../../node_modules/ol/source/XYZ.js", "../../node_modules/ol/style/IconImageCache.js", "../../node_modules/ol/style/IconImage.js", "../../node_modules/ol/colorlike.js", "../../node_modules/ol/render/canvas.js", "../../node_modules/ol/style/Image.js", "../../node_modules/ol/style/RegularShape.js", "../../node_modules/ol/style/Circle.js", "../../node_modules/ol/style/Fill.js", "../../node_modules/ol/style/Stroke.js", "../../node_modules/ol/style/Style.js", "../output/server/chunks/MapViewport.js", "../output/server/entries/pages/create/_page.svelte.js", "../output/server/nodes/5.js", "../output/server/entries/pages/view/_page.svelte.js", "../output/server/nodes/6.js", "../output/server/index.js", "../../node_modules/@sveltejs/kit/src/exports/index.js", "../../node_modules/esm-env/true.js", "../../node_modules/esm-env/dev-fallback.js", "../../node_modules/@sveltejs/kit/src/runtime/utils.js", "../output/server/chunks/environment.js", "../../node_modules/devalue/src/utils.js", "../../node_modules/devalue/src/uneval.js", "../../node_modules/devalue/src/base64.js", "../../node_modules/devalue/src/constants.js", "../../node_modules/devalue/src/parse.js", "../../node_modules/devalue/src/stringify.js", "../output/server/chunks/internal.js", "../output/server/chunks/shared.js", "../cloudflare-tmp/manifest.js", "../cloudflare-tmp/_worker.js"],
  "sourcesContent": ["const BROWSER = false;\nexport {\n  BROWSER as B\n};\n", "/** @import { RemoteInfo } from 'types' */\n\n/** @type {RemoteInfo['type'][]} */\nconst types = ['command', 'form', 'prerender', 'query', 'query_batch'];\n\n/**\n * @param {Record<string, any>} module\n * @param {string} file\n * @param {string} hash\n */\nexport function init_remote_functions(module, file, hash) {\n\tif (module.default) {\n\t\tthrow new Error(\n\t\t\t`Cannot export \\`default\\` from a remote module (${file}) \u2014 please use named exports instead`\n\t\t);\n\t}\n\n\tfor (const [name, fn] of Object.entries(module)) {\n\t\tif (!types.includes(fn?.__?.type)) {\n\t\t\tthrow new Error(\n\t\t\t\t`\\`${name}\\` exported from ${file} is invalid \u2014 all exports from this file must be remote functions`\n\t\t\t);\n\t\t}\n\n\t\tfn.__.id = `${hash}/${name}`;\n\t\tfn.__.name = name;\n\t}\n}\n", "export class HttpError {\n\t/**\n\t * @param {number} status\n\t * @param {{message: string} extends App.Error ? (App.Error | string | undefined) : App.Error} body\n\t */\n\tconstructor(status, body) {\n\t\tthis.status = status;\n\t\tif (typeof body === 'string') {\n\t\t\tthis.body = { message: body };\n\t\t} else if (body) {\n\t\t\tthis.body = body;\n\t\t} else {\n\t\t\tthis.body = { message: `Error: ${status}` };\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this.body);\n\t}\n}\n\nexport class Redirect {\n\t/**\n\t * @param {300 | 301 | 302 | 303 | 304 | 305 | 306 | 307 | 308} status\n\t * @param {string} location\n\t */\n\tconstructor(status, location) {\n\t\tthis.status = status;\n\t\tthis.location = location;\n\t}\n}\n\n/**\n * An error that was thrown from within the SvelteKit runtime that is not fatal and doesn't result in a 500, such as a 404.\n * `SvelteKitError` goes through `handleError`.\n * @extends Error\n */\nexport class SvelteKitError extends Error {\n\t/**\n\t * @param {number} status\n\t * @param {string} text\n\t * @param {string} message\n\t */\n\tconstructor(status, text, message) {\n\t\tsuper(message);\n\t\tthis.status = status;\n\t\tthis.text = text;\n\t}\n}\n\n/**\n * @template [T=undefined]\n */\nexport class ActionFailure {\n\t/**\n\t * @param {number} status\n\t * @param {T} data\n\t */\n\tconstructor(status, data) {\n\t\tthis.status = status;\n\t\tthis.data = data;\n\t}\n}\n\nexport { init_remote_functions } from './remote-functions.js';\n", "export const NULL_BODY_STATUS = [101, 103, 204, 205, 304];\n\n// eslint-disable-next-line n/prefer-global/process\nexport const IN_WEBCONTAINER = !!globalThis.process?.versions?.webcontainer;\n", "/** @import { RequestEvent } from '@sveltejs/kit' */\n/** @import { RequestStore } from 'types' */\n/** @import { AsyncLocalStorage } from 'node:async_hooks' */\n\nimport { IN_WEBCONTAINER } from '../../runtime/server/constants.js';\n\n/** @type {RequestStore | null} */\nlet sync_store = null;\n\n/** @type {AsyncLocalStorage<RequestStore | null> | null} */\nlet als;\n\nimport('node:async_hooks')\n\t.then((hooks) => (als = new hooks.AsyncLocalStorage()))\n\t.catch(() => {\n\t\t// can't use AsyncLocalStorage, but can still call getRequestEvent synchronously.\n\t\t// this isn't behind `supports` because it's basically just StackBlitz (i.e.\n\t\t// in-browser usage) that doesn't support it AFAICT\n\t});\n\n/**\n * Returns the current `RequestEvent`. Can be used inside server hooks, server `load` functions, actions, and endpoints (and functions called by them).\n *\n * In environments without [`AsyncLocalStorage`](https://nodejs.org/api/async_context.html#class-asynclocalstorage), this must be called synchronously (i.e. not after an `await`).\n * @since 2.20.0\n *\n * @returns {RequestEvent}\n */\nexport function getRequestEvent() {\n\tconst event = try_get_request_store()?.event;\n\n\tif (!event) {\n\t\tlet message =\n\t\t\t'Can only read the current request event inside functions invoked during `handle`, such as server `load` functions, actions, endpoints, and other server hooks.';\n\n\t\tif (!als) {\n\t\t\tmessage +=\n\t\t\t\t' In environments without `AsyncLocalStorage`, the event must be read synchronously, not after an `await`.';\n\t\t}\n\n\t\tthrow new Error(message);\n\t}\n\n\treturn event;\n}\n\nexport function get_request_store() {\n\tconst result = try_get_request_store();\n\tif (!result) {\n\t\tlet message = 'Could not get the request store.';\n\n\t\tif (als) {\n\t\t\tmessage += ' This is an internal error.';\n\t\t} else {\n\t\t\tmessage +=\n\t\t\t\t' In environments without `AsyncLocalStorage`, the request store (used by e.g. remote functions) must be accessed synchronously, not after an `await`.' +\n\t\t\t\t' If it was accessed synchronously then this is an internal error.';\n\t\t}\n\n\t\tthrow new Error(message);\n\t}\n\treturn result;\n}\n\nexport function try_get_request_store() {\n\treturn sync_store ?? als?.getStore() ?? null;\n}\n\n/**\n * @template T\n * @param {RequestStore | null} store\n * @param {() => T} fn\n */\nexport function with_request_store(store, fn) {\n\ttry {\n\t\tsync_store = store;\n\t\treturn als ? als.run(store, fn) : fn();\n\t} finally {\n\t\t// Since AsyncLocalStorage is not working in webcontainers, we don't reset `sync_store`\n\t\t// and handle only one request at a time in `src/runtime/server/index.js`.\n\t\tif (!IN_WEBCONTAINER) {\n\t\t\tsync_store = null;\n\t\t}\n\t}\n}\n", "/**\n * @template {{ tracing: { enabled: boolean, root: import('@opentelemetry/api').Span, current: import('@opentelemetry/api').Span } }} T\n * @param {T} event_like\n * @param {import('@opentelemetry/api').Span} current\n * @returns {T}\n */\nexport function merge_tracing(event_like, current) {\n\treturn {\n\t\t...event_like,\n\t\ttracing: {\n\t\t\t...event_like.tracing,\n\t\t\tcurrent\n\t\t}\n\t};\n}\n\nexport {\n\twith_request_store,\n\tgetRequestEvent,\n\tget_request_store,\n\ttry_get_request_store\n} from './event.js';\n", "const SCHEME = /^[a-z][a-z\\d+\\-.]+:/i;\nconst internal = new URL(\"sveltekit-internal://\");\nfunction resolve(base, path) {\n  if (path[0] === \"/\" && path[1] === \"/\") return path;\n  let url = new URL(base, internal);\n  url = new URL(path, url);\n  return url.protocol === internal.protocol ? url.pathname + url.search + url.hash : url.href;\n}\nfunction normalize_path(path, trailing_slash) {\n  if (path === \"/\" || trailing_slash === \"ignore\") return path;\n  if (trailing_slash === \"never\") {\n    return path.endsWith(\"/\") ? path.slice(0, -1) : path;\n  } else if (trailing_slash === \"always\" && !path.endsWith(\"/\")) {\n    return path + \"/\";\n  }\n  return path;\n}\nfunction decode_pathname(pathname) {\n  return pathname.split(\"%25\").map(decodeURI).join(\"%25\");\n}\nfunction decode_params(params) {\n  for (const key in params) {\n    params[key] = decodeURIComponent(params[key]);\n  }\n  return params;\n}\nfunction make_trackable(url, callback, search_params_callback, allow_hash = false) {\n  const tracked = new URL(url);\n  Object.defineProperty(tracked, \"searchParams\", {\n    value: new Proxy(tracked.searchParams, {\n      get(obj, key) {\n        if (key === \"get\" || key === \"getAll\" || key === \"has\") {\n          return (param) => {\n            search_params_callback(param);\n            return obj[key](param);\n          };\n        }\n        callback();\n        const value = Reflect.get(obj, key);\n        return typeof value === \"function\" ? value.bind(obj) : value;\n      }\n    }),\n    enumerable: true,\n    configurable: true\n  });\n  const tracked_url_properties = [\"href\", \"pathname\", \"search\", \"toString\", \"toJSON\"];\n  if (allow_hash) tracked_url_properties.push(\"hash\");\n  for (const property of tracked_url_properties) {\n    Object.defineProperty(tracked, property, {\n      get() {\n        callback();\n        return url[property];\n      },\n      enumerable: true,\n      configurable: true\n    });\n  }\n  {\n    tracked[Symbol.for(\"nodejs.util.inspect.custom\")] = (depth, opts, inspect) => {\n      return inspect(url, opts);\n    };\n    tracked.searchParams[Symbol.for(\"nodejs.util.inspect.custom\")] = (depth, opts, inspect) => {\n      return inspect(url.searchParams, opts);\n    };\n  }\n  if (!allow_hash) {\n    disable_hash(tracked);\n  }\n  return tracked;\n}\nfunction disable_hash(url) {\n  allow_nodejs_console_log(url);\n  Object.defineProperty(url, \"hash\", {\n    get() {\n      throw new Error(\n        \"Cannot access event.url.hash. Consider using `page.url.hash` inside a component instead\"\n      );\n    }\n  });\n}\nfunction disable_search(url) {\n  allow_nodejs_console_log(url);\n  for (const property of [\"search\", \"searchParams\"]) {\n    Object.defineProperty(url, property, {\n      get() {\n        throw new Error(`Cannot access url.${property} on a page with prerendering enabled`);\n      }\n    });\n  }\n}\nfunction allow_nodejs_console_log(url) {\n  {\n    url[Symbol.for(\"nodejs.util.inspect.custom\")] = (depth, opts, inspect) => {\n      return inspect(new URL(url), opts);\n    };\n  }\n}\nfunction validator(expected) {\n  function validate(module, file) {\n    if (!module) return;\n    for (const key in module) {\n      if (key[0] === \"_\" || expected.has(key)) continue;\n      const values = [...expected.values()];\n      const hint = hint_for_supported_files(key, file?.slice(file.lastIndexOf(\".\"))) ?? `valid exports are ${values.join(\", \")}, or anything with a '_' prefix`;\n      throw new Error(`Invalid export '${key}'${file ? ` in ${file}` : \"\"} (${hint})`);\n    }\n  }\n  return validate;\n}\nfunction hint_for_supported_files(key, ext = \".js\") {\n  const supported_files = [];\n  if (valid_layout_exports.has(key)) {\n    supported_files.push(`+layout${ext}`);\n  }\n  if (valid_page_exports.has(key)) {\n    supported_files.push(`+page${ext}`);\n  }\n  if (valid_layout_server_exports.has(key)) {\n    supported_files.push(`+layout.server${ext}`);\n  }\n  if (valid_page_server_exports.has(key)) {\n    supported_files.push(`+page.server${ext}`);\n  }\n  if (valid_server_exports.has(key)) {\n    supported_files.push(`+server${ext}`);\n  }\n  if (supported_files.length > 0) {\n    return `'${key}' is a valid export in ${supported_files.slice(0, -1).join(\", \")}${supported_files.length > 1 ? \" or \" : \"\"}${supported_files.at(-1)}`;\n  }\n}\nconst valid_layout_exports = /* @__PURE__ */ new Set([\n  \"load\",\n  \"prerender\",\n  \"csr\",\n  \"ssr\",\n  \"trailingSlash\",\n  \"config\"\n]);\nconst valid_page_exports = /* @__PURE__ */ new Set([...valid_layout_exports, \"entries\"]);\nconst valid_layout_server_exports = /* @__PURE__ */ new Set([...valid_layout_exports]);\nconst valid_page_server_exports = /* @__PURE__ */ new Set([...valid_layout_server_exports, \"actions\", \"entries\"]);\nconst valid_server_exports = /* @__PURE__ */ new Set([\n  \"GET\",\n  \"POST\",\n  \"PATCH\",\n  \"PUT\",\n  \"DELETE\",\n  \"OPTIONS\",\n  \"HEAD\",\n  \"fallback\",\n  \"prerender\",\n  \"trailingSlash\",\n  \"config\",\n  \"entries\"\n]);\nconst validate_layout_exports = validator(valid_layout_exports);\nconst validate_page_exports = validator(valid_page_exports);\nconst validate_layout_server_exports = validator(valid_layout_server_exports);\nconst validate_page_server_exports = validator(valid_page_server_exports);\nconst validate_server_exports = validator(valid_server_exports);\nexport {\n  SCHEME as S,\n  decode_params as a,\n  validate_layout_exports as b,\n  validate_page_server_exports as c,\n  disable_search as d,\n  validate_page_exports as e,\n  decode_pathname as f,\n  validate_server_exports as g,\n  make_trackable as m,\n  normalize_path as n,\n  resolve as r,\n  validate_layout_server_exports as v\n};\n", "const text_encoder = new TextEncoder();\nconst text_decoder = new TextDecoder();\nfunction get_relative_path(from, to) {\n  const from_parts = from.split(/[/\\\\]/);\n  const to_parts = to.split(/[/\\\\]/);\n  from_parts.pop();\n  while (from_parts[0] === to_parts[0]) {\n    from_parts.shift();\n    to_parts.shift();\n  }\n  let i = from_parts.length;\n  while (i--) from_parts[i] = \"..\";\n  return from_parts.concat(to_parts).join(\"/\");\n}\nfunction base64_encode(bytes) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(bytes).toString(\"base64\");\n  }\n  let binary = \"\";\n  for (let i = 0; i < bytes.length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n}\nfunction base64_decode(encoded) {\n  if (globalThis.Buffer) {\n    const buffer = globalThis.Buffer.from(encoded, \"base64\");\n    return new Uint8Array(buffer);\n  }\n  const binary = atob(encoded);\n  const bytes = new Uint8Array(binary.length);\n  for (let i = 0; i < binary.length; i++) {\n    bytes[i] = binary.charCodeAt(i);\n  }\n  return bytes;\n}\nexport {\n  text_encoder as a,\n  base64_encode as b,\n  base64_decode as c,\n  get_relative_path as g,\n  text_decoder as t\n};\n", "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "import { B as BROWSER } from \"./false.js\";\nimport \"clsx\";\nvar is_array = Array.isArray;\nvar index_of = Array.prototype.indexOf;\nvar array_from = Array.from;\nvar define_property = Object.defineProperty;\nvar get_descriptor = Object.getOwnPropertyDescriptor;\nvar object_prototype = Object.prototype;\nvar array_prototype = Array.prototype;\nvar get_prototype_of = Object.getPrototypeOf;\nvar is_extensible = Object.isExtensible;\nconst noop = () => {\n};\nfunction run_all(arr) {\n  for (var i = 0; i < arr.length; i++) {\n    arr[i]();\n  }\n}\nfunction deferred() {\n  var resolve;\n  var reject;\n  var promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return { promise, resolve, reject };\n}\nfunction fallback(value, fallback2, lazy = false) {\n  return value === void 0 ? lazy ? (\n    /** @type {() => V} */\n    fallback2()\n  ) : (\n    /** @type {V} */\n    fallback2\n  ) : value;\n}\nfunction equals(value) {\n  return value === this.v;\n}\nfunction safe_not_equal(a, b) {\n  return a != a ? b == b : a !== b || a !== null && typeof a === \"object\" || typeof a === \"function\";\n}\nfunction safe_equals(value) {\n  return !safe_not_equal(value, this.v);\n}\nconst DERIVED = 1 << 1;\nconst EFFECT = 1 << 2;\nconst RENDER_EFFECT = 1 << 3;\nconst BLOCK_EFFECT = 1 << 4;\nconst BRANCH_EFFECT = 1 << 5;\nconst ROOT_EFFECT = 1 << 6;\nconst BOUNDARY_EFFECT = 1 << 7;\nconst CLEAN = 1 << 10;\nconst DIRTY = 1 << 11;\nconst MAYBE_DIRTY = 1 << 12;\nconst INERT = 1 << 13;\nconst DESTROYED = 1 << 14;\nconst EFFECT_RAN = 1 << 15;\nconst EFFECT_TRANSPARENT = 1 << 16;\nconst EAGER_EFFECT = 1 << 17;\nconst HEAD_EFFECT = 1 << 18;\nconst EFFECT_PRESERVED = 1 << 19;\nconst USER_EFFECT = 1 << 20;\nconst UNOWNED = 1 << 8;\nconst DISCONNECTED = 1 << 9;\nconst WAS_MARKED = 1 << 15;\nconst REACTION_IS_UPDATING = 1 << 21;\nconst ASYNC = 1 << 22;\nconst ERROR_VALUE = 1 << 23;\nconst STATE_SYMBOL = Symbol(\"$state\");\nconst LEGACY_PROPS = Symbol(\"legacy props\");\nconst STALE_REACTION = new class StaleReactionError extends Error {\n  name = \"StaleReactionError\";\n  message = \"The reaction that called `getAbortSignal()` was re-run or destroyed\";\n}();\nconst COMMENT_NODE = 8;\nfunction lifecycle_outside_component(name) {\n  {\n    throw new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n  }\n}\nfunction effect_update_depth_exceeded() {\n  {\n    throw new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n  }\n}\nfunction hydration_failed() {\n  {\n    throw new Error(`https://svelte.dev/e/hydration_failed`);\n  }\n}\nfunction state_descriptors_fixed() {\n  {\n    throw new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n  }\n}\nfunction state_prototype_fixed() {\n  {\n    throw new Error(`https://svelte.dev/e/state_prototype_fixed`);\n  }\n}\nfunction state_unsafe_mutation() {\n  {\n    throw new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n  }\n}\nfunction svelte_boundary_reset_onerror() {\n  {\n    throw new Error(`https://svelte.dev/e/svelte_boundary_reset_onerror`);\n  }\n}\nconst HYDRATION_START = \"[\";\nconst HYDRATION_START_ELSE = \"[!\";\nconst HYDRATION_END = \"]\";\nconst HYDRATION_ERROR = {};\nconst ELEMENT_IS_NAMESPACED = 1;\nconst ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\nconst ELEMENT_IS_INPUT = 1 << 2;\nconst UNINITIALIZED = Symbol();\nlet tracing_mode_flag = false;\nlet component_context = null;\nfunction set_component_context(context) {\n  component_context = context;\n}\nfunction push$1(props, runes = false, fn) {\n  component_context = {\n    p: component_context,\n    i: false,\n    c: null,\n    e: null,\n    s: props,\n    x: null,\n    l: null\n  };\n}\nfunction pop$1(component) {\n  var context = (\n    /** @type {ComponentContext} */\n    component_context\n  );\n  var effects = context.e;\n  if (effects !== null) {\n    context.e = null;\n    for (var fn of effects) {\n      create_user_effect(fn);\n    }\n  }\n  context.i = true;\n  component_context = context.p;\n  return (\n    /** @type {T} */\n    {}\n  );\n}\nfunction is_runes() {\n  return true;\n}\nlet micro_tasks = [];\nfunction run_micro_tasks() {\n  var tasks = micro_tasks;\n  micro_tasks = [];\n  run_all(tasks);\n}\nfunction queue_micro_task(fn) {\n  if (micro_tasks.length === 0 && !is_flushing_sync) {\n    var tasks = micro_tasks;\n    queueMicrotask(() => {\n      if (tasks === micro_tasks) run_micro_tasks();\n    });\n  }\n  micro_tasks.push(fn);\n}\nfunction flush_tasks() {\n  while (micro_tasks.length > 0) {\n    run_micro_tasks();\n  }\n}\nfunction handle_error(error) {\n  var effect = active_effect;\n  if (effect === null) {\n    active_reaction.f |= ERROR_VALUE;\n    return error;\n  }\n  if ((effect.f & EFFECT_RAN) === 0) {\n    if ((effect.f & BOUNDARY_EFFECT) === 0) {\n      throw error;\n    }\n    effect.b.error(error);\n  } else {\n    invoke_error_boundary(error, effect);\n  }\n}\nfunction invoke_error_boundary(error, effect) {\n  while (effect !== null) {\n    if ((effect.f & BOUNDARY_EFFECT) !== 0) {\n      try {\n        effect.b.error(error);\n        return;\n      } catch (e) {\n        error = e;\n      }\n    }\n    effect = effect.parent;\n  }\n  throw error;\n}\nconst batches = /* @__PURE__ */ new Set();\nlet current_batch = null;\nlet batch_values = null;\nlet effect_pending_updates = /* @__PURE__ */ new Set();\nlet queued_root_effects = [];\nlet last_scheduled_effect = null;\nlet is_flushing = false;\nlet is_flushing_sync = false;\nclass Batch {\n  committed = false;\n  /**\n   * The current values of any sources that are updated in this batch\n   * They keys of this map are identical to `this.#previous`\n   * @type {Map<Source, any>}\n   */\n  current = /* @__PURE__ */ new Map();\n  /**\n   * The values of any sources that are updated in this batch _before_ those updates took place.\n   * They keys of this map are identical to `this.#current`\n   * @type {Map<Source, any>}\n   */\n  previous = /* @__PURE__ */ new Map();\n  /**\n   * When the batch is committed (and the DOM is updated), we need to remove old branches\n   * and append new ones by calling the functions added inside (if/each/key/etc) blocks\n   * @type {Set<() => void>}\n   */\n  #commit_callbacks = /* @__PURE__ */ new Set();\n  /**\n   * If a fork is discarded, we need to destroy any effects that are no longer needed\n   * @type {Set<(batch: Batch) => void>}\n   */\n  #discard_callbacks = /* @__PURE__ */ new Set();\n  /**\n   * The number of async effects that are currently in flight\n   */\n  #pending = 0;\n  /**\n   * The number of async effects that are currently in flight, _not_ inside a pending boundary\n   */\n  #blocking_pending = 0;\n  /**\n   * A deferred that resolves when the batch is committed, used with `settled()`\n   * TODO replace with Promise.withResolvers once supported widely enough\n   * @type {{ promise: Promise<void>, resolve: (value?: any) => void, reject: (reason: unknown) => void } | null}\n   */\n  #deferred = null;\n  /**\n   * Deferred effects (which run after async work has completed) that are DIRTY\n   * @type {Effect[]}\n   */\n  #dirty_effects = [];\n  /**\n   * Deferred effects that are MAYBE_DIRTY\n   * @type {Effect[]}\n   */\n  #maybe_dirty_effects = [];\n  /**\n   * A set of branches that still exist, but will be destroyed when this batch\n   * is committed \u2014 we skip over these during `process`\n   * @type {Set<Effect>}\n   */\n  skipped_effects = /* @__PURE__ */ new Set();\n  is_fork = false;\n  /**\n   *\n   * @param {Effect[]} root_effects\n   */\n  process(root_effects) {\n    queued_root_effects = [];\n    this.apply();\n    var target = {\n      parent: null,\n      effect: null,\n      effects: [],\n      render_effects: [],\n      block_effects: []\n    };\n    for (const root of root_effects) {\n      this.#traverse_effect_tree(root, target);\n    }\n    if (!this.is_fork) {\n      this.#resolve();\n    }\n    if (this.#blocking_pending > 0 || this.is_fork) {\n      this.#defer_effects(target.effects);\n      this.#defer_effects(target.render_effects);\n      this.#defer_effects(target.block_effects);\n    } else {\n      current_batch = null;\n      flush_queued_effects(target.render_effects);\n      flush_queued_effects(target.effects);\n    }\n    batch_values = null;\n  }\n  /**\n   * Traverse the effect tree, executing effects or stashing\n   * them for later execution as appropriate\n   * @param {Effect} root\n   * @param {EffectTarget} target\n   */\n  #traverse_effect_tree(root, target) {\n    root.f ^= CLEAN;\n    var effect = root.first;\n    while (effect !== null) {\n      var flags = effect.f;\n      var is_branch = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) !== 0;\n      var is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n      var skip = is_skippable_branch || (flags & INERT) !== 0 || this.skipped_effects.has(effect);\n      if ((effect.f & BOUNDARY_EFFECT) !== 0 && effect.b?.is_pending()) {\n        target = {\n          parent: target,\n          effect,\n          effects: [],\n          render_effects: [],\n          block_effects: []\n        };\n      }\n      if (!skip && effect.fn !== null) {\n        if (is_branch) {\n          effect.f ^= CLEAN;\n        } else if ((flags & EFFECT) !== 0) {\n          target.effects.push(effect);\n        } else if (is_dirty(effect)) {\n          if ((effect.f & BLOCK_EFFECT) !== 0) target.block_effects.push(effect);\n          update_effect(effect);\n        }\n        var child = effect.first;\n        if (child !== null) {\n          effect = child;\n          continue;\n        }\n      }\n      var parent = effect.parent;\n      effect = effect.next;\n      while (effect === null && parent !== null) {\n        if (parent === target.effect) {\n          this.#defer_effects(target.effects);\n          this.#defer_effects(target.render_effects);\n          this.#defer_effects(target.block_effects);\n          target = /** @type {EffectTarget} */\n          target.parent;\n        }\n        effect = parent.next;\n        parent = parent.parent;\n      }\n    }\n  }\n  /**\n   * @param {Effect[]} effects\n   */\n  #defer_effects(effects) {\n    for (const e of effects) {\n      const target = (e.f & DIRTY) !== 0 ? this.#dirty_effects : this.#maybe_dirty_effects;\n      target.push(e);\n      set_signal_status(e, CLEAN);\n    }\n  }\n  /**\n   * Associate a change to a given source with the current\n   * batch, noting its previous and current values\n   * @param {Source} source\n   * @param {any} value\n   */\n  capture(source2, value) {\n    if (!this.previous.has(source2)) {\n      this.previous.set(source2, value);\n    }\n    this.current.set(source2, source2.v);\n    batch_values?.set(source2, source2.v);\n  }\n  activate() {\n    current_batch = this;\n  }\n  deactivate() {\n    current_batch = null;\n    batch_values = null;\n  }\n  flush() {\n    this.activate();\n    if (queued_root_effects.length > 0) {\n      flush_effects();\n      if (current_batch !== null && current_batch !== this) {\n        return;\n      }\n    } else if (this.#pending === 0) {\n      this.process([]);\n    }\n    this.deactivate();\n    for (const update of effect_pending_updates) {\n      effect_pending_updates.delete(update);\n      update();\n      if (current_batch !== null) {\n        break;\n      }\n    }\n  }\n  discard() {\n    for (const fn of this.#discard_callbacks) fn(this);\n    this.#discard_callbacks.clear();\n  }\n  #resolve() {\n    if (this.#blocking_pending === 0) {\n      for (const fn of this.#commit_callbacks) fn();\n      this.#commit_callbacks.clear();\n    }\n    if (this.#pending === 0) {\n      this.#commit();\n    }\n  }\n  #commit() {\n    if (batches.size > 1) {\n      this.previous.clear();\n      var previous_batch_values = batch_values;\n      var is_earlier = true;\n      var dummy_target = {\n        parent: null,\n        effect: null,\n        effects: [],\n        render_effects: [],\n        block_effects: []\n      };\n      for (const batch of batches) {\n        if (batch === this) {\n          is_earlier = false;\n          continue;\n        }\n        const sources = [];\n        for (const [source2, value] of this.current) {\n          if (batch.current.has(source2)) {\n            if (is_earlier && value !== batch.current.get(source2)) {\n              batch.current.set(source2, value);\n            } else {\n              continue;\n            }\n          }\n          sources.push(source2);\n        }\n        if (sources.length === 0) {\n          continue;\n        }\n        const others = [...batch.current.keys()].filter((s) => !this.current.has(s));\n        if (others.length > 0) {\n          const marked = /* @__PURE__ */ new Set();\n          const checked = /* @__PURE__ */ new Map();\n          for (const source2 of sources) {\n            mark_effects(source2, others, marked, checked);\n          }\n          if (queued_root_effects.length > 0) {\n            current_batch = batch;\n            batch.apply();\n            for (const root of queued_root_effects) {\n              batch.#traverse_effect_tree(root, dummy_target);\n            }\n            queued_root_effects = [];\n            batch.deactivate();\n          }\n        }\n      }\n      current_batch = null;\n      batch_values = previous_batch_values;\n    }\n    this.committed = true;\n    batches.delete(this);\n    this.#deferred?.resolve();\n  }\n  /**\n   *\n   * @param {boolean} blocking\n   */\n  increment(blocking) {\n    this.#pending += 1;\n    if (blocking) this.#blocking_pending += 1;\n  }\n  /**\n   *\n   * @param {boolean} blocking\n   */\n  decrement(blocking) {\n    this.#pending -= 1;\n    if (blocking) this.#blocking_pending -= 1;\n    this.revive();\n  }\n  revive() {\n    for (const e of this.#dirty_effects) {\n      set_signal_status(e, DIRTY);\n      schedule_effect(e);\n    }\n    for (const e of this.#maybe_dirty_effects) {\n      set_signal_status(e, MAYBE_DIRTY);\n      schedule_effect(e);\n    }\n    this.#dirty_effects = [];\n    this.#maybe_dirty_effects = [];\n    this.flush();\n  }\n  /** @param {() => void} fn */\n  oncommit(fn) {\n    this.#commit_callbacks.add(fn);\n  }\n  /** @param {(batch: Batch) => void} fn */\n  ondiscard(fn) {\n    this.#discard_callbacks.add(fn);\n  }\n  settled() {\n    return (this.#deferred ??= deferred()).promise;\n  }\n  static ensure() {\n    if (current_batch === null) {\n      const batch = current_batch = new Batch();\n      batches.add(current_batch);\n      if (!is_flushing_sync) {\n        Batch.enqueue(() => {\n          if (current_batch !== batch) {\n            return;\n          }\n          batch.flush();\n        });\n      }\n    }\n    return current_batch;\n  }\n  /** @param {() => void} task */\n  static enqueue(task) {\n    queue_micro_task(task);\n  }\n  apply() {\n    return;\n  }\n}\nfunction flushSync(fn) {\n  var was_flushing_sync = is_flushing_sync;\n  is_flushing_sync = true;\n  try {\n    var result;\n    if (fn) ;\n    while (true) {\n      flush_tasks();\n      if (queued_root_effects.length === 0) {\n        current_batch?.flush();\n        if (queued_root_effects.length === 0) {\n          last_scheduled_effect = null;\n          return (\n            /** @type {T} */\n            result\n          );\n        }\n      }\n      flush_effects();\n    }\n  } finally {\n    is_flushing_sync = was_flushing_sync;\n  }\n}\nfunction flush_effects() {\n  var was_updating_effect = is_updating_effect;\n  is_flushing = true;\n  try {\n    var flush_count = 0;\n    set_is_updating_effect(true);\n    while (queued_root_effects.length > 0) {\n      var batch = Batch.ensure();\n      if (flush_count++ > 1e3) {\n        var updates, entry;\n        if (BROWSER) ;\n        infinite_loop_guard();\n      }\n      batch.process(queued_root_effects);\n      old_values.clear();\n    }\n  } finally {\n    is_flushing = false;\n    set_is_updating_effect(was_updating_effect);\n    last_scheduled_effect = null;\n  }\n}\nfunction infinite_loop_guard() {\n  try {\n    effect_update_depth_exceeded();\n  } catch (error) {\n    invoke_error_boundary(error, last_scheduled_effect);\n  }\n}\nlet eager_block_effects = null;\nfunction flush_queued_effects(effects) {\n  var length = effects.length;\n  if (length === 0) return;\n  var i = 0;\n  while (i < length) {\n    var effect = effects[i++];\n    if ((effect.f & (DESTROYED | INERT)) === 0 && is_dirty(effect)) {\n      eager_block_effects = /* @__PURE__ */ new Set();\n      update_effect(effect);\n      if (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n        if (effect.teardown === null && effect.ac === null) {\n          unlink_effect(effect);\n        } else {\n          effect.fn = null;\n        }\n      }\n      if (eager_block_effects?.size > 0) {\n        old_values.clear();\n        for (const e of eager_block_effects) {\n          if ((e.f & (DESTROYED | INERT)) !== 0) continue;\n          const ordered_effects = [e];\n          let ancestor = e.parent;\n          while (ancestor !== null) {\n            if (eager_block_effects.has(ancestor)) {\n              eager_block_effects.delete(ancestor);\n              ordered_effects.push(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n          for (let j = ordered_effects.length - 1; j >= 0; j--) {\n            const e2 = ordered_effects[j];\n            if ((e2.f & (DESTROYED | INERT)) !== 0) continue;\n            update_effect(e2);\n          }\n        }\n        eager_block_effects.clear();\n      }\n    }\n  }\n  eager_block_effects = null;\n}\nfunction mark_effects(value, sources, marked, checked) {\n  if (marked.has(value)) return;\n  marked.add(value);\n  if (value.reactions !== null) {\n    for (const reaction of value.reactions) {\n      const flags = reaction.f;\n      if ((flags & DERIVED) !== 0) {\n        mark_effects(\n          /** @type {Derived} */\n          reaction,\n          sources,\n          marked,\n          checked\n        );\n      } else if ((flags & (ASYNC | BLOCK_EFFECT)) !== 0 && (flags & DIRTY) === 0 && // we may have scheduled this one already\n      depends_on(reaction, sources, checked)) {\n        set_signal_status(reaction, DIRTY);\n        schedule_effect(\n          /** @type {Effect} */\n          reaction\n        );\n      }\n    }\n  }\n}\nfunction depends_on(reaction, sources, checked) {\n  const depends = checked.get(reaction);\n  if (depends !== void 0) return depends;\n  if (reaction.deps !== null) {\n    for (const dep of reaction.deps) {\n      if (sources.includes(dep)) {\n        return true;\n      }\n      if ((dep.f & DERIVED) !== 0 && depends_on(\n        /** @type {Derived} */\n        dep,\n        sources,\n        checked\n      )) {\n        checked.set(\n          /** @type {Derived} */\n          dep,\n          true\n        );\n        return true;\n      }\n    }\n  }\n  checked.set(reaction, false);\n  return false;\n}\nfunction schedule_effect(signal) {\n  var effect = last_scheduled_effect = signal;\n  while (effect.parent !== null) {\n    effect = effect.parent;\n    var flags = effect.f;\n    if (is_flushing && effect === active_effect && (flags & BLOCK_EFFECT) !== 0) {\n      return;\n    }\n    if ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n      if ((flags & CLEAN) === 0) return;\n      effect.f ^= CLEAN;\n    }\n  }\n  queued_root_effects.push(effect);\n}\nfunction destroy_derived_effects(derived) {\n  var effects = derived.effects;\n  if (effects !== null) {\n    derived.effects = null;\n    for (var i = 0; i < effects.length; i += 1) {\n      destroy_effect(\n        /** @type {Effect} */\n        effects[i]\n      );\n    }\n  }\n}\nfunction get_derived_parent_effect(derived) {\n  var parent = derived.parent;\n  while (parent !== null) {\n    if ((parent.f & DERIVED) === 0) {\n      return (\n        /** @type {Effect} */\n        parent\n      );\n    }\n    parent = parent.parent;\n  }\n  return null;\n}\nfunction execute_derived(derived) {\n  var value;\n  var prev_active_effect = active_effect;\n  set_active_effect(get_derived_parent_effect(derived));\n  {\n    try {\n      derived.f &= ~WAS_MARKED;\n      destroy_derived_effects(derived);\n      value = update_reaction(derived);\n    } finally {\n      set_active_effect(prev_active_effect);\n    }\n  }\n  return value;\n}\nfunction update_derived(derived) {\n  var value = execute_derived(derived);\n  if (!derived.equals(value)) {\n    derived.v = value;\n    derived.wv = increment_write_version();\n  }\n  if (is_destroying_effect) {\n    return;\n  }\n  if (batch_values !== null) {\n    batch_values.set(derived, derived.v);\n  } else {\n    var status = (skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n    set_signal_status(derived, status);\n  }\n}\nlet eager_effects = /* @__PURE__ */ new Set();\nconst old_values = /* @__PURE__ */ new Map();\nlet eager_effects_deferred = false;\nfunction source(v, stack) {\n  var signal = {\n    f: 0,\n    // TODO ideally we could skip this altogether, but it causes type errors\n    v,\n    reactions: null,\n    equals,\n    rv: 0,\n    wv: 0\n  };\n  return signal;\n}\n// @__NO_SIDE_EFFECTS__\nfunction state(v, stack) {\n  const s = source(v);\n  push_reaction_value(s);\n  return s;\n}\n// @__NO_SIDE_EFFECTS__\nfunction mutable_source(initial_value, immutable = false, trackable = true) {\n  const s = source(initial_value);\n  if (!immutable) {\n    s.equals = safe_equals;\n  }\n  return s;\n}\nfunction set(source2, value, should_proxy = false) {\n  if (active_reaction !== null && // since we are untracking the function inside `$inspect.with` we need to add this check\n  // to ensure we error if state is set inside an inspect effect\n  (!untracking || (active_reaction.f & EAGER_EFFECT) !== 0) && is_runes() && (active_reaction.f & (DERIVED | BLOCK_EFFECT | ASYNC | EAGER_EFFECT)) !== 0 && !current_sources?.includes(source2)) {\n    state_unsafe_mutation();\n  }\n  let new_value = should_proxy ? proxy(value) : value;\n  return internal_set(source2, new_value);\n}\nfunction internal_set(source2, value) {\n  if (!source2.equals(value)) {\n    var old_value = source2.v;\n    if (is_destroying_effect) {\n      old_values.set(source2, value);\n    } else {\n      old_values.set(source2, old_value);\n    }\n    source2.v = value;\n    var batch = Batch.ensure();\n    batch.capture(source2, old_value);\n    if ((source2.f & DERIVED) !== 0) {\n      if ((source2.f & DIRTY) !== 0) {\n        execute_derived(\n          /** @type {Derived} */\n          source2\n        );\n      }\n      set_signal_status(source2, (source2.f & UNOWNED) === 0 ? CLEAN : MAYBE_DIRTY);\n    }\n    source2.wv = increment_write_version();\n    mark_reactions(source2, DIRTY);\n    if (active_effect !== null && (active_effect.f & CLEAN) !== 0 && (active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0) {\n      if (untracked_writes === null) {\n        set_untracked_writes([source2]);\n      } else {\n        untracked_writes.push(source2);\n      }\n    }\n    if (!batch.is_fork && eager_effects.size > 0 && !eager_effects_deferred) {\n      flush_eager_effects();\n    }\n  }\n  return value;\n}\nfunction flush_eager_effects() {\n  eager_effects_deferred = false;\n  const inspects = Array.from(eager_effects);\n  for (const effect of inspects) {\n    if ((effect.f & CLEAN) !== 0) {\n      set_signal_status(effect, MAYBE_DIRTY);\n    }\n    if (is_dirty(effect)) {\n      update_effect(effect);\n    }\n  }\n  eager_effects.clear();\n}\nfunction increment(source2) {\n  set(source2, source2.v + 1);\n}\nfunction mark_reactions(signal, status) {\n  var reactions = signal.reactions;\n  if (reactions === null) return;\n  var length = reactions.length;\n  for (var i = 0; i < length; i++) {\n    var reaction = reactions[i];\n    var flags = reaction.f;\n    var not_dirty = (flags & DIRTY) === 0;\n    if (not_dirty) {\n      set_signal_status(reaction, status);\n    }\n    if ((flags & DERIVED) !== 0) {\n      if ((flags & WAS_MARKED) === 0) {\n        reaction.f |= WAS_MARKED;\n        mark_reactions(\n          /** @type {Derived} */\n          reaction,\n          MAYBE_DIRTY\n        );\n      }\n    } else if (not_dirty) {\n      if ((flags & BLOCK_EFFECT) !== 0) {\n        if (eager_block_effects !== null) {\n          eager_block_effects.add(\n            /** @type {Effect} */\n            reaction\n          );\n        }\n      }\n      schedule_effect(\n        /** @type {Effect} */\n        reaction\n      );\n    }\n  }\n}\nfunction proxy(value) {\n  if (typeof value !== \"object\" || value === null || STATE_SYMBOL in value) {\n    return value;\n  }\n  const prototype = get_prototype_of(value);\n  if (prototype !== object_prototype && prototype !== array_prototype) {\n    return value;\n  }\n  var sources = /* @__PURE__ */ new Map();\n  var is_proxied_array = is_array(value);\n  var version = /* @__PURE__ */ state(0);\n  var parent_version = update_version;\n  var with_parent = (fn) => {\n    if (update_version === parent_version) {\n      return fn();\n    }\n    var reaction = active_reaction;\n    var version2 = update_version;\n    set_active_reaction(null);\n    set_update_version(parent_version);\n    var result = fn();\n    set_active_reaction(reaction);\n    set_update_version(version2);\n    return result;\n  };\n  if (is_proxied_array) {\n    sources.set(\"length\", /* @__PURE__ */ state(\n      /** @type {any[]} */\n      value.length\n    ));\n  }\n  return new Proxy(\n    /** @type {any} */\n    value,\n    {\n      defineProperty(_, prop, descriptor) {\n        if (!(\"value\" in descriptor) || descriptor.configurable === false || descriptor.enumerable === false || descriptor.writable === false) {\n          state_descriptors_fixed();\n        }\n        var s = sources.get(prop);\n        if (s === void 0) {\n          s = with_parent(() => {\n            var s2 = /* @__PURE__ */ state(descriptor.value);\n            sources.set(prop, s2);\n            return s2;\n          });\n        } else {\n          set(s, descriptor.value, true);\n        }\n        return true;\n      },\n      deleteProperty(target, prop) {\n        var s = sources.get(prop);\n        if (s === void 0) {\n          if (prop in target) {\n            const s2 = with_parent(() => /* @__PURE__ */ state(UNINITIALIZED));\n            sources.set(prop, s2);\n            increment(version);\n          }\n        } else {\n          set(s, UNINITIALIZED);\n          increment(version);\n        }\n        return true;\n      },\n      get(target, prop, receiver) {\n        if (prop === STATE_SYMBOL) {\n          return value;\n        }\n        var s = sources.get(prop);\n        var exists = prop in target;\n        if (s === void 0 && (!exists || get_descriptor(target, prop)?.writable)) {\n          s = with_parent(() => {\n            var p = proxy(exists ? target[prop] : UNINITIALIZED);\n            var s2 = /* @__PURE__ */ state(p);\n            return s2;\n          });\n          sources.set(prop, s);\n        }\n        if (s !== void 0) {\n          var v = get(s);\n          return v === UNINITIALIZED ? void 0 : v;\n        }\n        return Reflect.get(target, prop, receiver);\n      },\n      getOwnPropertyDescriptor(target, prop) {\n        var descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n        if (descriptor && \"value\" in descriptor) {\n          var s = sources.get(prop);\n          if (s) descriptor.value = get(s);\n        } else if (descriptor === void 0) {\n          var source2 = sources.get(prop);\n          var value2 = source2?.v;\n          if (source2 !== void 0 && value2 !== UNINITIALIZED) {\n            return {\n              enumerable: true,\n              configurable: true,\n              value: value2,\n              writable: true\n            };\n          }\n        }\n        return descriptor;\n      },\n      has(target, prop) {\n        if (prop === STATE_SYMBOL) {\n          return true;\n        }\n        var s = sources.get(prop);\n        var has = s !== void 0 && s.v !== UNINITIALIZED || Reflect.has(target, prop);\n        if (s !== void 0 || active_effect !== null && (!has || get_descriptor(target, prop)?.writable)) {\n          if (s === void 0) {\n            s = with_parent(() => {\n              var p = has ? proxy(target[prop]) : UNINITIALIZED;\n              var s2 = /* @__PURE__ */ state(p);\n              return s2;\n            });\n            sources.set(prop, s);\n          }\n          var value2 = get(s);\n          if (value2 === UNINITIALIZED) {\n            return false;\n          }\n        }\n        return has;\n      },\n      set(target, prop, value2, receiver) {\n        var s = sources.get(prop);\n        var has = prop in target;\n        if (is_proxied_array && prop === \"length\") {\n          for (var i = value2; i < /** @type {Source<number>} */\n          s.v; i += 1) {\n            var other_s = sources.get(i + \"\");\n            if (other_s !== void 0) {\n              set(other_s, UNINITIALIZED);\n            } else if (i in target) {\n              other_s = with_parent(() => /* @__PURE__ */ state(UNINITIALIZED));\n              sources.set(i + \"\", other_s);\n            }\n          }\n        }\n        if (s === void 0) {\n          if (!has || get_descriptor(target, prop)?.writable) {\n            s = with_parent(() => /* @__PURE__ */ state(void 0));\n            set(s, proxy(value2));\n            sources.set(prop, s);\n          }\n        } else {\n          has = s.v !== UNINITIALIZED;\n          var p = with_parent(() => proxy(value2));\n          set(s, p);\n        }\n        var descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n        if (descriptor?.set) {\n          descriptor.set.call(receiver, value2);\n        }\n        if (!has) {\n          if (is_proxied_array && typeof prop === \"string\") {\n            var ls = (\n              /** @type {Source<number>} */\n              sources.get(\"length\")\n            );\n            var n = Number(prop);\n            if (Number.isInteger(n) && n >= ls.v) {\n              set(ls, n + 1);\n            }\n          }\n          increment(version);\n        }\n        return true;\n      },\n      ownKeys(target) {\n        get(version);\n        var own_keys = Reflect.ownKeys(target).filter((key2) => {\n          var source3 = sources.get(key2);\n          return source3 === void 0 || source3.v !== UNINITIALIZED;\n        });\n        for (var [key, source2] of sources) {\n          if (source2.v !== UNINITIALIZED && !(key in target)) {\n            own_keys.push(key);\n          }\n        }\n        return own_keys;\n      },\n      setPrototypeOf() {\n        state_prototype_fixed();\n      }\n    }\n  );\n}\nvar $window;\nvar first_child_getter;\nvar next_sibling_getter;\nfunction init_operations() {\n  if ($window !== void 0) {\n    return;\n  }\n  $window = window;\n  var element_prototype = Element.prototype;\n  var node_prototype = Node.prototype;\n  var text_prototype = Text.prototype;\n  first_child_getter = get_descriptor(node_prototype, \"firstChild\").get;\n  next_sibling_getter = get_descriptor(node_prototype, \"nextSibling\").get;\n  if (is_extensible(element_prototype)) {\n    element_prototype.__click = void 0;\n    element_prototype.__className = void 0;\n    element_prototype.__attributes = null;\n    element_prototype.__style = void 0;\n    element_prototype.__e = void 0;\n  }\n  if (is_extensible(text_prototype)) {\n    text_prototype.__t = void 0;\n  }\n}\nfunction create_text(value = \"\") {\n  return document.createTextNode(value);\n}\n// @__NO_SIDE_EFFECTS__\nfunction get_first_child(node) {\n  return first_child_getter.call(node);\n}\n// @__NO_SIDE_EFFECTS__\nfunction get_next_sibling(node) {\n  return next_sibling_getter.call(node);\n}\nfunction clear_text_content(node) {\n  node.textContent = \"\";\n}\nfunction without_reactive_context(fn) {\n  var previous_reaction = active_reaction;\n  var previous_effect = active_effect;\n  set_active_reaction(null);\n  set_active_effect(null);\n  try {\n    return fn();\n  } finally {\n    set_active_reaction(previous_reaction);\n    set_active_effect(previous_effect);\n  }\n}\nfunction push_effect(effect, parent_effect) {\n  var parent_last = parent_effect.last;\n  if (parent_last === null) {\n    parent_effect.last = parent_effect.first = effect;\n  } else {\n    parent_last.next = effect;\n    effect.prev = parent_last;\n    parent_effect.last = effect;\n  }\n}\nfunction create_effect(type, fn, sync, push2 = true) {\n  var parent = active_effect;\n  if (parent !== null && (parent.f & INERT) !== 0) {\n    type |= INERT;\n  }\n  var effect = {\n    ctx: component_context,\n    deps: null,\n    nodes_start: null,\n    nodes_end: null,\n    f: type | DIRTY,\n    first: null,\n    fn,\n    last: null,\n    next: null,\n    parent,\n    b: parent && parent.b,\n    prev: null,\n    teardown: null,\n    transitions: null,\n    wv: 0,\n    ac: null\n  };\n  if (sync) {\n    try {\n      update_effect(effect);\n      effect.f |= EFFECT_RAN;\n    } catch (e2) {\n      destroy_effect(effect);\n      throw e2;\n    }\n  } else if (fn !== null) {\n    schedule_effect(effect);\n  }\n  if (push2) {\n    var e = effect;\n    if (sync && e.deps === null && e.teardown === null && e.nodes_start === null && e.first === e.last && // either `null`, or a singular child\n    (e.f & EFFECT_PRESERVED) === 0) {\n      e = e.first;\n      if ((type & BLOCK_EFFECT) !== 0 && (type & EFFECT_TRANSPARENT) !== 0 && e !== null) {\n        e.f |= EFFECT_TRANSPARENT;\n      }\n    }\n    if (e !== null) {\n      e.parent = parent;\n      if (parent !== null) {\n        push_effect(e, parent);\n      }\n      if (active_reaction !== null && (active_reaction.f & DERIVED) !== 0 && (type & ROOT_EFFECT) === 0) {\n        var derived = (\n          /** @type {Derived} */\n          active_reaction\n        );\n        (derived.effects ??= []).push(e);\n      }\n    }\n  }\n  return effect;\n}\nfunction effect_tracking() {\n  return active_reaction !== null && !untracking;\n}\nfunction create_user_effect(fn) {\n  return create_effect(EFFECT | USER_EFFECT, fn, false);\n}\nfunction component_root(fn) {\n  Batch.ensure();\n  const effect = create_effect(ROOT_EFFECT | EFFECT_PRESERVED, fn, true);\n  return (options = {}) => {\n    return new Promise((fulfil) => {\n      if (options.outro) {\n        pause_effect(effect, () => {\n          destroy_effect(effect);\n          fulfil(void 0);\n        });\n      } else {\n        destroy_effect(effect);\n        fulfil(void 0);\n      }\n    });\n  };\n}\nfunction render_effect(fn, flags = 0) {\n  return create_effect(RENDER_EFFECT | flags, fn, true);\n}\nfunction block(fn, flags = 0) {\n  var effect = create_effect(BLOCK_EFFECT | flags, fn, true);\n  return effect;\n}\nfunction branch(fn, push2 = true) {\n  return create_effect(BRANCH_EFFECT | EFFECT_PRESERVED, fn, true, push2);\n}\nfunction execute_effect_teardown(effect) {\n  var teardown = effect.teardown;\n  if (teardown !== null) {\n    const previously_destroying_effect = is_destroying_effect;\n    const previous_reaction = active_reaction;\n    set_is_destroying_effect(true);\n    set_active_reaction(null);\n    try {\n      teardown.call(null);\n    } finally {\n      set_is_destroying_effect(previously_destroying_effect);\n      set_active_reaction(previous_reaction);\n    }\n  }\n}\nfunction destroy_effect_children(signal, remove_dom = false) {\n  var effect = signal.first;\n  signal.first = signal.last = null;\n  while (effect !== null) {\n    const controller = effect.ac;\n    if (controller !== null) {\n      without_reactive_context(() => {\n        controller.abort(STALE_REACTION);\n      });\n    }\n    var next = effect.next;\n    if ((effect.f & ROOT_EFFECT) !== 0) {\n      effect.parent = null;\n    } else {\n      destroy_effect(effect, remove_dom);\n    }\n    effect = next;\n  }\n}\nfunction destroy_block_effect_children(signal) {\n  var effect = signal.first;\n  while (effect !== null) {\n    var next = effect.next;\n    if ((effect.f & BRANCH_EFFECT) === 0) {\n      destroy_effect(effect);\n    }\n    effect = next;\n  }\n}\nfunction destroy_effect(effect, remove_dom = true) {\n  var removed = false;\n  if ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null && effect.nodes_end !== null) {\n    remove_effect_dom(\n      effect.nodes_start,\n      /** @type {TemplateNode} */\n      effect.nodes_end\n    );\n    removed = true;\n  }\n  destroy_effect_children(effect, remove_dom && !removed);\n  remove_reactions(effect, 0);\n  set_signal_status(effect, DESTROYED);\n  var transitions = effect.transitions;\n  if (transitions !== null) {\n    for (const transition of transitions) {\n      transition.stop();\n    }\n  }\n  execute_effect_teardown(effect);\n  var parent = effect.parent;\n  if (parent !== null && parent.first !== null) {\n    unlink_effect(effect);\n  }\n  effect.next = effect.prev = effect.teardown = effect.ctx = effect.deps = effect.fn = effect.nodes_start = effect.nodes_end = effect.ac = null;\n}\nfunction remove_effect_dom(node, end) {\n  while (node !== null) {\n    var next = node === end ? null : (\n      /** @type {TemplateNode} */\n      /* @__PURE__ */ get_next_sibling(node)\n    );\n    node.remove();\n    node = next;\n  }\n}\nfunction unlink_effect(effect) {\n  var parent = effect.parent;\n  var prev = effect.prev;\n  var next = effect.next;\n  if (prev !== null) prev.next = next;\n  if (next !== null) next.prev = prev;\n  if (parent !== null) {\n    if (parent.first === effect) parent.first = next;\n    if (parent.last === effect) parent.last = prev;\n  }\n}\nfunction pause_effect(effect, callback, destroy = true) {\n  var transitions = [];\n  pause_children(effect, transitions, true);\n  run_out_transitions(transitions, () => {\n    if (destroy) destroy_effect(effect);\n    if (callback) callback();\n  });\n}\nfunction run_out_transitions(transitions, fn) {\n  var remaining = transitions.length;\n  if (remaining > 0) {\n    var check = () => --remaining || fn();\n    for (var transition of transitions) {\n      transition.out(check);\n    }\n  } else {\n    fn();\n  }\n}\nfunction pause_children(effect, transitions, local) {\n  if ((effect.f & INERT) !== 0) return;\n  effect.f ^= INERT;\n  if (effect.transitions !== null) {\n    for (const transition of effect.transitions) {\n      if (transition.is_global || local) {\n        transitions.push(transition);\n      }\n    }\n  }\n  var child = effect.first;\n  while (child !== null) {\n    var sibling = child.next;\n    var transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || // If this is a branch effect without a block effect parent,\n    // it means the parent block effect was pruned. In that case,\n    // transparency information was transferred to the branch effect.\n    (child.f & BRANCH_EFFECT) !== 0 && (effect.f & BLOCK_EFFECT) !== 0;\n    pause_children(child, transitions, transparent ? local : false);\n    child = sibling;\n  }\n}\nfunction move_effect(effect, fragment) {\n  var node = effect.nodes_start;\n  var end = effect.nodes_end;\n  while (node !== null) {\n    var next = node === end ? null : (\n      /** @type {TemplateNode} */\n      /* @__PURE__ */ get_next_sibling(node)\n    );\n    fragment.append(node);\n    node = next;\n  }\n}\nlet is_updating_effect = false;\nfunction set_is_updating_effect(value) {\n  is_updating_effect = value;\n}\nlet is_destroying_effect = false;\nfunction set_is_destroying_effect(value) {\n  is_destroying_effect = value;\n}\nlet active_reaction = null;\nlet untracking = false;\nfunction set_active_reaction(reaction) {\n  active_reaction = reaction;\n}\nlet active_effect = null;\nfunction set_active_effect(effect) {\n  active_effect = effect;\n}\nlet current_sources = null;\nfunction push_reaction_value(value) {\n  if (active_reaction !== null && true) {\n    if (current_sources === null) {\n      current_sources = [value];\n    } else {\n      current_sources.push(value);\n    }\n  }\n}\nlet new_deps = null;\nlet skipped_deps = 0;\nlet untracked_writes = null;\nfunction set_untracked_writes(value) {\n  untracked_writes = value;\n}\nlet write_version = 1;\nlet read_version = 0;\nlet update_version = read_version;\nfunction set_update_version(value) {\n  update_version = value;\n}\nlet skip_reaction = false;\nfunction increment_write_version() {\n  return ++write_version;\n}\nfunction is_dirty(reaction) {\n  var flags = reaction.f;\n  if ((flags & DIRTY) !== 0) {\n    return true;\n  }\n  if ((flags & MAYBE_DIRTY) !== 0) {\n    var dependencies = reaction.deps;\n    var is_unowned = (flags & UNOWNED) !== 0;\n    if (flags & DERIVED) {\n      reaction.f &= ~WAS_MARKED;\n    }\n    if (dependencies !== null) {\n      var i;\n      var dependency;\n      var is_disconnected = (flags & DISCONNECTED) !== 0;\n      var is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n      var length = dependencies.length;\n      if ((is_disconnected || is_unowned_connected) && (active_effect === null || (active_effect.f & DESTROYED) === 0)) {\n        var derived = (\n          /** @type {Derived} */\n          reaction\n        );\n        var parent = derived.parent;\n        for (i = 0; i < length; i++) {\n          dependency = dependencies[i];\n          if (is_disconnected || !dependency?.reactions?.includes(derived)) {\n            (dependency.reactions ??= []).push(derived);\n          }\n        }\n        if (is_disconnected) {\n          derived.f ^= DISCONNECTED;\n        }\n        if (is_unowned_connected && parent !== null && (parent.f & UNOWNED) === 0) {\n          derived.f ^= UNOWNED;\n        }\n      }\n      for (i = 0; i < length; i++) {\n        dependency = dependencies[i];\n        if (is_dirty(\n          /** @type {Derived} */\n          dependency\n        )) {\n          update_derived(\n            /** @type {Derived} */\n            dependency\n          );\n        }\n        if (dependency.wv > reaction.wv) {\n          return true;\n        }\n      }\n    }\n    if (!is_unowned || active_effect !== null && !skip_reaction) {\n      set_signal_status(reaction, CLEAN);\n    }\n  }\n  return false;\n}\nfunction schedule_possible_effect_self_invalidation(signal, effect, root = true) {\n  var reactions = signal.reactions;\n  if (reactions === null) return;\n  if (current_sources?.includes(signal)) {\n    return;\n  }\n  for (var i = 0; i < reactions.length; i++) {\n    var reaction = reactions[i];\n    if ((reaction.f & DERIVED) !== 0) {\n      schedule_possible_effect_self_invalidation(\n        /** @type {Derived} */\n        reaction,\n        effect,\n        false\n      );\n    } else if (effect === reaction) {\n      if (root) {\n        set_signal_status(reaction, DIRTY);\n      } else if ((reaction.f & CLEAN) !== 0) {\n        set_signal_status(reaction, MAYBE_DIRTY);\n      }\n      schedule_effect(\n        /** @type {Effect} */\n        reaction\n      );\n    }\n  }\n}\nfunction update_reaction(reaction) {\n  var previous_deps = new_deps;\n  var previous_skipped_deps = skipped_deps;\n  var previous_untracked_writes = untracked_writes;\n  var previous_reaction = active_reaction;\n  var previous_skip_reaction = skip_reaction;\n  var previous_sources = current_sources;\n  var previous_component_context = component_context;\n  var previous_untracking = untracking;\n  var previous_update_version = update_version;\n  var flags = reaction.f;\n  new_deps = /** @type {null | Value[]} */\n  null;\n  skipped_deps = 0;\n  untracked_writes = null;\n  skip_reaction = (flags & UNOWNED) !== 0 && (untracking || !is_updating_effect || active_reaction === null);\n  active_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n  current_sources = null;\n  set_component_context(reaction.ctx);\n  untracking = false;\n  update_version = ++read_version;\n  if (reaction.ac !== null) {\n    without_reactive_context(() => {\n      reaction.ac.abort(STALE_REACTION);\n    });\n    reaction.ac = null;\n  }\n  try {\n    reaction.f |= REACTION_IS_UPDATING;\n    var fn = (\n      /** @type {Function} */\n      reaction.fn\n    );\n    var result = fn();\n    var deps = reaction.deps;\n    if (new_deps !== null) {\n      var i;\n      remove_reactions(reaction, skipped_deps);\n      if (deps !== null && skipped_deps > 0) {\n        deps.length = skipped_deps + new_deps.length;\n        for (i = 0; i < new_deps.length; i++) {\n          deps[skipped_deps + i] = new_deps[i];\n        }\n      } else {\n        reaction.deps = deps = new_deps;\n      }\n      if (!skip_reaction || // Deriveds that already have reactions can cleanup, so we still add them as reactions\n      (flags & DERIVED) !== 0 && /** @type {import('#client').Derived} */\n      reaction.reactions !== null) {\n        for (i = skipped_deps; i < deps.length; i++) {\n          (deps[i].reactions ??= []).push(reaction);\n        }\n      }\n    } else if (deps !== null && skipped_deps < deps.length) {\n      remove_reactions(reaction, skipped_deps);\n      deps.length = skipped_deps;\n    }\n    if (is_runes() && untracked_writes !== null && !untracking && deps !== null && (reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0) {\n      for (i = 0; i < /** @type {Source[]} */\n      untracked_writes.length; i++) {\n        schedule_possible_effect_self_invalidation(\n          untracked_writes[i],\n          /** @type {Effect} */\n          reaction\n        );\n      }\n    }\n    if (previous_reaction !== null && previous_reaction !== reaction) {\n      read_version++;\n      if (untracked_writes !== null) {\n        if (previous_untracked_writes === null) {\n          previous_untracked_writes = untracked_writes;\n        } else {\n          previous_untracked_writes.push(.../** @type {Source[]} */\n          untracked_writes);\n        }\n      }\n    }\n    if ((reaction.f & ERROR_VALUE) !== 0) {\n      reaction.f ^= ERROR_VALUE;\n    }\n    return result;\n  } catch (error) {\n    return handle_error(error);\n  } finally {\n    reaction.f ^= REACTION_IS_UPDATING;\n    new_deps = previous_deps;\n    skipped_deps = previous_skipped_deps;\n    untracked_writes = previous_untracked_writes;\n    active_reaction = previous_reaction;\n    skip_reaction = previous_skip_reaction;\n    current_sources = previous_sources;\n    set_component_context(previous_component_context);\n    untracking = previous_untracking;\n    update_version = previous_update_version;\n  }\n}\nfunction remove_reaction(signal, dependency) {\n  let reactions = dependency.reactions;\n  if (reactions !== null) {\n    var index = index_of.call(reactions, signal);\n    if (index !== -1) {\n      var new_length = reactions.length - 1;\n      if (new_length === 0) {\n        reactions = dependency.reactions = null;\n      } else {\n        reactions[index] = reactions[new_length];\n        reactions.pop();\n      }\n    }\n  }\n  if (reactions === null && (dependency.f & DERIVED) !== 0 && // Destroying a child effect while updating a parent effect can cause a dependency to appear\n  // to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n  // allows us to skip the expensive work of disconnecting and immediately reconnecting it\n  (new_deps === null || !new_deps.includes(dependency))) {\n    set_signal_status(dependency, MAYBE_DIRTY);\n    if ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n      dependency.f ^= DISCONNECTED;\n    }\n    destroy_derived_effects(\n      /** @type {Derived} **/\n      dependency\n    );\n    remove_reactions(\n      /** @type {Derived} **/\n      dependency,\n      0\n    );\n  }\n}\nfunction remove_reactions(signal, start_index) {\n  var dependencies = signal.deps;\n  if (dependencies === null) return;\n  for (var i = start_index; i < dependencies.length; i++) {\n    remove_reaction(signal, dependencies[i]);\n  }\n}\nfunction update_effect(effect) {\n  var flags = effect.f;\n  if ((flags & DESTROYED) !== 0) {\n    return;\n  }\n  set_signal_status(effect, CLEAN);\n  var previous_effect = active_effect;\n  var was_updating_effect = is_updating_effect;\n  active_effect = effect;\n  is_updating_effect = true;\n  try {\n    if ((flags & BLOCK_EFFECT) !== 0) {\n      destroy_block_effect_children(effect);\n    } else {\n      destroy_effect_children(effect);\n    }\n    execute_effect_teardown(effect);\n    var teardown = update_reaction(effect);\n    effect.teardown = typeof teardown === \"function\" ? teardown : null;\n    effect.wv = write_version;\n    var dep;\n    if (BROWSER && tracing_mode_flag && (effect.f & DIRTY) !== 0 && effect.deps !== null) ;\n  } finally {\n    is_updating_effect = was_updating_effect;\n    active_effect = previous_effect;\n  }\n}\nfunction get(signal) {\n  var flags = signal.f;\n  var is_derived = (flags & DERIVED) !== 0;\n  if (active_reaction !== null && !untracking) {\n    var destroyed = active_effect !== null && (active_effect.f & DESTROYED) !== 0;\n    if (!destroyed && !current_sources?.includes(signal)) {\n      var deps = active_reaction.deps;\n      if ((active_reaction.f & REACTION_IS_UPDATING) !== 0) {\n        if (signal.rv < read_version) {\n          signal.rv = read_version;\n          if (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n            skipped_deps++;\n          } else if (new_deps === null) {\n            new_deps = [signal];\n          } else if (!skip_reaction || !new_deps.includes(signal)) {\n            new_deps.push(signal);\n          }\n        }\n      } else {\n        (active_reaction.deps ??= []).push(signal);\n        var reactions = signal.reactions;\n        if (reactions === null) {\n          signal.reactions = [active_reaction];\n        } else if (!reactions.includes(active_reaction)) {\n          reactions.push(active_reaction);\n        }\n      }\n    }\n  } else if (is_derived && /** @type {Derived} */\n  signal.deps === null && /** @type {Derived} */\n  signal.effects === null) {\n    var derived = (\n      /** @type {Derived} */\n      signal\n    );\n    var parent = derived.parent;\n    if (parent !== null && (parent.f & UNOWNED) === 0) {\n      derived.f ^= UNOWNED;\n    }\n  }\n  if (is_destroying_effect) {\n    if (old_values.has(signal)) {\n      return old_values.get(signal);\n    }\n    if (is_derived) {\n      derived = /** @type {Derived} */\n      signal;\n      var value = derived.v;\n      if ((derived.f & CLEAN) === 0 && derived.reactions !== null || depends_on_old_values(derived)) {\n        value = execute_derived(derived);\n      }\n      old_values.set(derived, value);\n      return value;\n    }\n  } else if (is_derived) {\n    derived = /** @type {Derived} */\n    signal;\n    if (batch_values?.has(derived)) {\n      return batch_values.get(derived);\n    }\n    if (is_dirty(derived)) {\n      update_derived(derived);\n    }\n  }\n  if (batch_values?.has(signal)) {\n    return batch_values.get(signal);\n  }\n  if ((signal.f & ERROR_VALUE) !== 0) {\n    throw signal.v;\n  }\n  return signal.v;\n}\nfunction depends_on_old_values(derived) {\n  if (derived.v === UNINITIALIZED) return true;\n  if (derived.deps === null) return false;\n  for (const dep of derived.deps) {\n    if (old_values.has(dep)) {\n      return true;\n    }\n    if ((dep.f & DERIVED) !== 0 && depends_on_old_values(\n      /** @type {Derived} */\n      dep\n    )) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction untrack(fn) {\n  var previous_untracking = untracking;\n  try {\n    untracking = true;\n    return fn();\n  } finally {\n    untracking = previous_untracking;\n  }\n}\nconst STATUS_MASK = -7169;\nfunction set_signal_status(signal, status) {\n  signal.f = signal.f & STATUS_MASK | status;\n}\nconst ATTR_REGEX = /[&\"<]/g;\nconst CONTENT_REGEX = /[&<]/g;\nfunction escape_html(value, is_attr) {\n  const str = String(value ?? \"\");\n  const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n  pattern.lastIndex = 0;\n  let escaped = \"\";\n  let last = 0;\n  while (pattern.test(str)) {\n    const i = pattern.lastIndex - 1;\n    const ch = str[i];\n    escaped += str.substring(last, i) + (ch === \"&\" ? \"&amp;\" : ch === '\"' ? \"&quot;\" : \"&lt;\");\n    last = i + 1;\n  }\n  return escaped + str.substring(last);\n}\nfunction subscribe_to_store(store, run, invalidate) {\n  if (store == null) {\n    run(void 0);\n    if (invalidate) invalidate(void 0);\n    return noop;\n  }\n  const unsub = untrack(\n    () => store.subscribe(\n      run,\n      // @ts-expect-error\n      invalidate\n    )\n  );\n  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nvar ssr_context = null;\nfunction set_ssr_context(v) {\n  ssr_context = v;\n}\nfunction getContext(key) {\n  const context_map = get_or_init_context_map();\n  const result = (\n    /** @type {T} */\n    context_map.get(key)\n  );\n  return result;\n}\nfunction setContext(key, context) {\n  get_or_init_context_map().set(key, context);\n  return context;\n}\nfunction get_or_init_context_map(name) {\n  if (ssr_context === null) {\n    lifecycle_outside_component();\n  }\n  return ssr_context.c ??= new Map(get_parent_context(ssr_context) || void 0);\n}\nfunction push(fn) {\n  ssr_context = { p: ssr_context, c: null, r: null };\n}\nfunction pop() {\n  ssr_context = /** @type {SSRContext} */\n  ssr_context.p;\n}\nfunction get_parent_context(ssr_context2) {\n  let parent = ssr_context2.p;\n  while (parent !== null) {\n    const context_map = parent.c;\n    if (context_map !== null) {\n      return context_map;\n    }\n    parent = parent.p;\n  }\n  return null;\n}\nexport {\n  STALE_REACTION as $,\n  invoke_error_boundary as A,\n  Batch as B,\n  COMMENT_NODE as C,\n  svelte_boundary_reset_onerror as D,\n  EFFECT_TRANSPARENT as E,\n  EFFECT_PRESERVED as F,\n  BOUNDARY_EFFECT as G,\n  HYDRATION_ERROR as H,\n  define_property as I,\n  init_operations as J,\n  get_first_child as K,\n  hydration_failed as L,\n  clear_text_content as M,\n  array_from as N,\n  component_root as O,\n  push$1 as P,\n  pop$1 as Q,\n  set as R,\n  LEGACY_PROPS as S,\n  flushSync as T,\n  mutable_source as U,\n  setContext as V,\n  getContext as W,\n  escape_html as X,\n  fallback as Y,\n  noop as Z,\n  ssr_context as _,\n  HYDRATION_END as a,\n  set_ssr_context as a0,\n  push as a1,\n  pop as a2,\n  subscribe_to_store as a3,\n  ELEMENT_PRESERVE_ATTRIBUTE_CASE as a4,\n  ELEMENT_IS_INPUT as a5,\n  ELEMENT_IS_NAMESPACED as a6,\n  safe_not_equal as a7,\n  run_all as a8,\n  HYDRATION_START as b,\n  HYDRATION_START_ELSE as c,\n  get as d,\n  effect_tracking as e,\n  internal_set as f,\n  get_next_sibling as g,\n  active_effect as h,\n  increment as i,\n  block as j,\n  branch as k,\n  create_text as l,\n  set_active_effect as m,\n  set_active_reaction as n,\n  set_component_context as o,\n  pause_effect as p,\n  queue_micro_task as q,\n  render_effect as r,\n  source as s,\n  handle_error as t,\n  untrack as u,\n  active_reaction as v,\n  component_context as w,\n  move_effect as x,\n  effect_pending_updates as y,\n  destroy_effect as z\n};\n", "import { Z as noop, a7 as safe_not_equal, a3 as subscribe_to_store, a8 as run_all } from \"./context.js\";\nconst subscriber_queue = [];\nfunction readable(value, start) {\n  return {\n    subscribe: writable(value, start).subscribe\n  };\n}\nfunction writable(value, start = noop) {\n  let stop = null;\n  const subscribers = /* @__PURE__ */ new Set();\n  function set(new_value) {\n    if (safe_not_equal(value, new_value)) {\n      value = new_value;\n      if (stop) {\n        const run_queue = !subscriber_queue.length;\n        for (const subscriber of subscribers) {\n          subscriber[1]();\n          subscriber_queue.push(subscriber, value);\n        }\n        if (run_queue) {\n          for (let i = 0; i < subscriber_queue.length; i += 2) {\n            subscriber_queue[i][0](subscriber_queue[i + 1]);\n          }\n          subscriber_queue.length = 0;\n        }\n      }\n    }\n  }\n  function update(fn) {\n    set(fn(\n      /** @type {T} */\n      value\n    ));\n  }\n  function subscribe(run, invalidate = noop) {\n    const subscriber = [run, invalidate];\n    subscribers.add(subscriber);\n    if (subscribers.size === 1) {\n      stop = start(set, update) || noop;\n    }\n    run(\n      /** @type {T} */\n      value\n    );\n    return () => {\n      subscribers.delete(subscriber);\n      if (subscribers.size === 0 && stop) {\n        stop();\n        stop = null;\n      }\n    };\n  }\n  return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n  const single = !Array.isArray(stores);\n  const stores_array = single ? [stores] : stores;\n  if (!stores_array.every(Boolean)) {\n    throw new Error(\"derived() expects stores as input, got a falsy value\");\n  }\n  const auto = fn.length < 2;\n  return readable(initial_value, (set, update) => {\n    let started = false;\n    const values = [];\n    let pending = 0;\n    let cleanup = noop;\n    const sync = () => {\n      if (pending) {\n        return;\n      }\n      cleanup();\n      const result = fn(single ? values[0] : values, set, update);\n      if (auto) {\n        set(result);\n      } else {\n        cleanup = typeof result === \"function\" ? result : noop;\n      }\n    };\n    const unsubscribers = stores_array.map(\n      (store, i) => subscribe_to_store(\n        store,\n        (value) => {\n          values[i] = value;\n          pending &= ~(1 << i);\n          if (started) {\n            sync();\n          }\n        },\n        () => {\n          pending |= 1 << i;\n        }\n      )\n    );\n    started = true;\n    sync();\n    return function stop() {\n      run_all(unsubscribers);\n      cleanup();\n      started = false;\n    };\n  });\n}\nexport {\n  derived as d,\n  readable as r,\n  writable as w\n};\n", "import { X as escape_html, b as HYDRATION_START, a as HYDRATION_END, $ as STALE_REACTION, a0 as set_ssr_context, _ as ssr_context, a1 as push, a2 as pop, Z as noop, a3 as subscribe_to_store, a4 as ELEMENT_PRESERVE_ATTRIBUTE_CASE, a5 as ELEMENT_IS_INPUT, a6 as ELEMENT_IS_NAMESPACED } from \"./context.js\";\nimport { clsx as clsx$1 } from \"clsx\";\nconst VOID_ELEMENT_NAMES = [\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"command\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"keygen\",\n  \"link\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\"\n];\nfunction is_void(name) {\n  return VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === \"!doctype\";\n}\nconst DOM_BOOLEAN_ATTRIBUTES = [\n  \"allowfullscreen\",\n  \"async\",\n  \"autofocus\",\n  \"autoplay\",\n  \"checked\",\n  \"controls\",\n  \"default\",\n  \"disabled\",\n  \"formnovalidate\",\n  \"indeterminate\",\n  \"inert\",\n  \"ismap\",\n  \"loop\",\n  \"multiple\",\n  \"muted\",\n  \"nomodule\",\n  \"novalidate\",\n  \"open\",\n  \"playsinline\",\n  \"readonly\",\n  \"required\",\n  \"reversed\",\n  \"seamless\",\n  \"selected\",\n  \"webkitdirectory\",\n  \"defer\",\n  \"disablepictureinpicture\",\n  \"disableremoteplayback\"\n];\nfunction is_boolean_attribute(name) {\n  return DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\nconst PASSIVE_EVENTS = [\"touchstart\", \"touchmove\"];\nfunction is_passive_event(name) {\n  return PASSIVE_EVENTS.includes(name);\n}\nconst RAW_TEXT_ELEMENTS = (\n  /** @type {const} */\n  [\"textarea\", \"script\", \"style\", \"title\"]\n);\nfunction is_raw_text_element(name) {\n  return RAW_TEXT_ELEMENTS.includes(\n    /** @type {typeof RAW_TEXT_ELEMENTS[number]} */\n    name\n  );\n}\nconst replacements = {\n  translate: /* @__PURE__ */ new Map([\n    [true, \"yes\"],\n    [false, \"no\"]\n  ])\n};\nfunction attr(name, value, is_boolean = false) {\n  if (name === \"hidden\" && value !== \"until-found\") {\n    is_boolean = true;\n  }\n  if (value == null || !value && is_boolean) return \"\";\n  const normalized = name in replacements && replacements[name].get(value) || value;\n  const assignment = is_boolean ? \"\" : `=\"${escape_html(normalized, true)}\"`;\n  return ` ${name}${assignment}`;\n}\nfunction clsx(value) {\n  if (typeof value === \"object\") {\n    return clsx$1(value);\n  } else {\n    return value ?? \"\";\n  }\n}\nconst whitespace = [...\" \t\\n\\r\\f\u00A0\\v\\uFEFF\"];\nfunction to_class(value, hash, directives) {\n  var classname = value == null ? \"\" : \"\" + value;\n  if (hash) {\n    classname = classname ? classname + \" \" + hash : hash;\n  }\n  if (directives) {\n    for (var key in directives) {\n      if (directives[key]) {\n        classname = classname ? classname + \" \" + key : key;\n      } else if (classname.length) {\n        var len = key.length;\n        var a = 0;\n        while ((a = classname.indexOf(key, a)) >= 0) {\n          var b = a + len;\n          if ((a === 0 || whitespace.includes(classname[a - 1])) && (b === classname.length || whitespace.includes(classname[b]))) {\n            classname = (a === 0 ? \"\" : classname.substring(0, a)) + classname.substring(b + 1);\n          } else {\n            a = b;\n          }\n        }\n      }\n    }\n  }\n  return classname === \"\" ? null : classname;\n}\nfunction append_styles(styles, important = false) {\n  var separator = important ? \" !important;\" : \";\";\n  var css = \"\";\n  for (var key in styles) {\n    var value = styles[key];\n    if (value != null && value !== \"\") {\n      css += \" \" + key + \": \" + value + separator;\n    }\n  }\n  return css;\n}\nfunction to_css_name(name) {\n  if (name[0] !== \"-\" || name[1] !== \"-\") {\n    return name.toLowerCase();\n  }\n  return name;\n}\nfunction to_style(value, styles) {\n  if (styles) {\n    var new_style = \"\";\n    var normal_styles;\n    var important_styles;\n    if (Array.isArray(styles)) {\n      normal_styles = styles[0];\n      important_styles = styles[1];\n    } else {\n      normal_styles = styles;\n    }\n    if (value) {\n      value = String(value).replaceAll(/\\s*\\/\\*.*?\\*\\/\\s*/g, \"\").trim();\n      var in_str = false;\n      var in_apo = 0;\n      var in_comment = false;\n      var reserved_names = [];\n      if (normal_styles) {\n        reserved_names.push(...Object.keys(normal_styles).map(to_css_name));\n      }\n      if (important_styles) {\n        reserved_names.push(...Object.keys(important_styles).map(to_css_name));\n      }\n      var start_index = 0;\n      var name_index = -1;\n      const len = value.length;\n      for (var i = 0; i < len; i++) {\n        var c = value[i];\n        if (in_comment) {\n          if (c === \"/\" && value[i - 1] === \"*\") {\n            in_comment = false;\n          }\n        } else if (in_str) {\n          if (in_str === c) {\n            in_str = false;\n          }\n        } else if (c === \"/\" && value[i + 1] === \"*\") {\n          in_comment = true;\n        } else if (c === '\"' || c === \"'\") {\n          in_str = c;\n        } else if (c === \"(\") {\n          in_apo++;\n        } else if (c === \")\") {\n          in_apo--;\n        }\n        if (!in_comment && in_str === false && in_apo === 0) {\n          if (c === \":\" && name_index === -1) {\n            name_index = i;\n          } else if (c === \";\" || i === len - 1) {\n            if (name_index !== -1) {\n              var name = to_css_name(value.substring(start_index, name_index).trim());\n              if (!reserved_names.includes(name)) {\n                if (c !== \";\") {\n                  i++;\n                }\n                var property = value.substring(start_index, i).trim();\n                new_style += \" \" + property + \";\";\n              }\n            }\n            start_index = i + 1;\n            name_index = -1;\n          }\n        }\n      }\n    }\n    if (normal_styles) {\n      new_style += append_styles(normal_styles);\n    }\n    if (important_styles) {\n      new_style += append_styles(important_styles, true);\n    }\n    new_style = new_style.trim();\n    return new_style === \"\" ? null : new_style;\n  }\n  return value == null ? null : String(value);\n}\nconst BLOCK_OPEN = `<!--${HYDRATION_START}-->`;\nconst BLOCK_CLOSE = `<!--${HYDRATION_END}-->`;\nconst EMPTY_COMMENT = `<!---->`;\nlet controller = null;\nfunction abort() {\n  controller?.abort(STALE_REACTION);\n  controller = null;\n}\nfunction await_invalid() {\n  const error = new Error(`await_invalid\nEncountered asynchronous work while rendering synchronously.\nhttps://svelte.dev/e/await_invalid`);\n  error.name = \"Svelte error\";\n  throw error;\n}\nclass Renderer {\n  /**\n   * The contents of the renderer.\n   * @type {RendererItem[]}\n   */\n  #out = [];\n  /**\n   * Any `onDestroy` callbacks registered during execution of this renderer.\n   * @type {(() => void)[] | undefined}\n   */\n  #on_destroy = void 0;\n  /**\n   * Whether this renderer is a component body.\n   * @type {boolean}\n   */\n  #is_component_body = false;\n  /**\n   * The type of string content that this renderer is accumulating.\n   * @type {RendererType}\n   */\n  type;\n  /** @type {Renderer | undefined} */\n  #parent;\n  /**\n   * Asynchronous work associated with this renderer\n   * @type {Promise<void> | undefined}\n   */\n  promise = void 0;\n  /**\n   * State which is associated with the content tree as a whole.\n   * It will be re-exposed, uncopied, on all children.\n   * @type {SSRState}\n   * @readonly\n   */\n  global;\n  /**\n   * State that is local to the branch it is declared in.\n   * It will be shallow-copied to all children.\n   *\n   * @type {{ select_value: string | undefined }}\n   */\n  local;\n  /**\n   * @param {SSRState} global\n   * @param {Renderer | undefined} [parent]\n   */\n  constructor(global, parent) {\n    this.#parent = parent;\n    this.global = global;\n    this.local = parent ? { ...parent.local } : { select_value: void 0 };\n    this.type = parent ? parent.type : \"body\";\n  }\n  /**\n   * @param {(renderer: Renderer) => void} fn\n   */\n  head(fn) {\n    const head2 = new Renderer(this.global, this);\n    head2.type = \"head\";\n    this.#out.push(head2);\n    head2.child(fn);\n  }\n  /**\n   * @param {(renderer: Renderer) => void} fn\n   */\n  async(fn) {\n    this.#out.push(BLOCK_OPEN);\n    this.child(fn);\n    this.#out.push(BLOCK_CLOSE);\n  }\n  /**\n   * Create a child renderer. The child renderer inherits the state from the parent,\n   * but has its own content.\n   * @param {(renderer: Renderer) => MaybePromise<void>} fn\n   */\n  child(fn) {\n    const child = new Renderer(this.global, this);\n    this.#out.push(child);\n    const parent = ssr_context;\n    set_ssr_context({\n      ...ssr_context,\n      p: parent,\n      c: null,\n      r: child\n    });\n    const result = fn(child);\n    set_ssr_context(parent);\n    if (result instanceof Promise) {\n      if (child.global.mode === \"sync\") {\n        await_invalid();\n      }\n      result.catch(() => {\n      });\n      child.promise = result;\n    }\n    return child;\n  }\n  /**\n   * Create a component renderer. The component renderer inherits the state from the parent,\n   * but has its own content. It is treated as an ordering boundary for ondestroy callbacks.\n   * @param {(renderer: Renderer) => MaybePromise<void>} fn\n   * @param {Function} [component_fn]\n   * @returns {void}\n   */\n  component(fn, component_fn) {\n    push();\n    const child = this.child(fn);\n    child.#is_component_body = true;\n    pop();\n  }\n  /**\n   * @param {Record<string, any>} attrs\n   * @param {(renderer: Renderer) => void} fn\n   * @param {string | undefined} [css_hash]\n   * @param {Record<string, boolean> | undefined} [classes]\n   * @param {Record<string, string> | undefined} [styles]\n   * @param {number | undefined} [flags]\n   * @returns {void}\n   */\n  select(attrs, fn, css_hash, classes, styles, flags) {\n    const { value, ...select_attrs } = attrs;\n    this.push(`<select${attributes(select_attrs, css_hash, classes, styles, flags)}>`);\n    this.child((renderer) => {\n      renderer.local.select_value = value;\n      fn(renderer);\n    });\n    this.push(\"</select>\");\n  }\n  /**\n   * @param {Record<string, any>} attrs\n   * @param {string | number | boolean | ((renderer: Renderer) => void)} body\n   * @param {string | undefined} [css_hash]\n   * @param {Record<string, boolean> | undefined} [classes]\n   * @param {Record<string, string> | undefined} [styles]\n   * @param {number | undefined} [flags]\n   */\n  option(attrs, body, css_hash, classes, styles, flags) {\n    this.#out.push(`<option${attributes(attrs, css_hash, classes, styles, flags)}`);\n    const close = (renderer, value, { head: head2, body: body2 }) => {\n      if (\"value\" in attrs) {\n        value = attrs.value;\n      }\n      if (value === this.local.select_value) {\n        renderer.#out.push(\" selected\");\n      }\n      renderer.#out.push(`>${body2}</option>`);\n      if (head2) {\n        renderer.head((child) => child.push(head2));\n      }\n    };\n    if (typeof body === \"function\") {\n      this.child((renderer) => {\n        const r = new Renderer(this.global, this);\n        body(r);\n        if (this.global.mode === \"async\") {\n          return r.#collect_content_async().then((content) => {\n            close(renderer, content.body.replaceAll(\"<!---->\", \"\"), content);\n          });\n        } else {\n          const content = r.#collect_content();\n          close(renderer, content.body.replaceAll(\"<!---->\", \"\"), content);\n        }\n      });\n    } else {\n      close(this, body, { body });\n    }\n  }\n  /**\n   * @param {(renderer: Renderer) => void} fn\n   */\n  title(fn) {\n    const path = this.get_path();\n    const close = (head2) => {\n      this.global.set_title(head2, path);\n    };\n    this.child((renderer) => {\n      const r = new Renderer(renderer.global, renderer);\n      fn(r);\n      if (renderer.global.mode === \"async\") {\n        return r.#collect_content_async().then((content) => {\n          close(content.head);\n        });\n      } else {\n        const content = r.#collect_content();\n        close(content.head);\n      }\n    });\n  }\n  /**\n   * @param {string | (() => Promise<string>)} content\n   */\n  push(content) {\n    if (typeof content === \"function\") {\n      this.child(async (renderer) => renderer.push(await content()));\n    } else {\n      this.#out.push(content);\n    }\n  }\n  /**\n   * @param {() => void} fn\n   */\n  on_destroy(fn) {\n    (this.#on_destroy ??= []).push(fn);\n  }\n  /**\n   * @returns {number[]}\n   */\n  get_path() {\n    return this.#parent ? [...this.#parent.get_path(), this.#parent.#out.indexOf(this)] : [];\n  }\n  /**\n   * @deprecated this is needed for legacy component bindings\n   */\n  copy() {\n    const copy = new Renderer(this.global, this.#parent);\n    copy.#out = this.#out.map((item) => item instanceof Renderer ? item.copy() : item);\n    copy.promise = this.promise;\n    return copy;\n  }\n  /**\n   * @param {Renderer} other\n   * @deprecated this is needed for legacy component bindings\n   */\n  subsume(other) {\n    if (this.global.mode !== other.global.mode) {\n      throw new Error(\n        \"invariant: A renderer cannot switch modes. If you're seeing this, there's a compiler bug. File an issue!\"\n      );\n    }\n    this.local = other.local;\n    this.#out = other.#out.map((item) => {\n      if (item instanceof Renderer) {\n        item.subsume(item);\n      }\n      return item;\n    });\n    this.promise = other.promise;\n    this.type = other.type;\n  }\n  get length() {\n    return this.#out.length;\n  }\n  /**\n   * Only available on the server and when compiling with the `server` option.\n   * Takes a component and returns an object with `body` and `head` properties on it, which you can use to populate the HTML when server-rendering your app.\n   * @template {Record<string, any>} Props\n   * @param {Component<Props>} component\n   * @param {{ props?: Omit<Props, '$$slots' | '$$events'>; context?: Map<any, any>; idPrefix?: string }} [options]\n   * @returns {RenderOutput}\n   */\n  static render(component, options = {}) {\n    let sync;\n    const result = (\n      /** @type {RenderOutput} */\n      {}\n    );\n    Object.defineProperties(result, {\n      html: {\n        get: () => {\n          return (sync ??= Renderer.#render(component, options)).body;\n        }\n      },\n      head: {\n        get: () => {\n          return (sync ??= Renderer.#render(component, options)).head;\n        }\n      },\n      body: {\n        get: () => {\n          return (sync ??= Renderer.#render(component, options)).body;\n        }\n      },\n      then: {\n        value: (\n          /**\n           * this is not type-safe, but honestly it's the best I can do right now, and it's a straightforward function.\n           *\n           * @template TResult1\n           * @template [TResult2=never]\n           * @param { (value: SyncRenderOutput) => TResult1 } onfulfilled\n           * @param { (reason: unknown) => TResult2 } onrejected\n           */\n          (onfulfilled, onrejected) => {\n            {\n              const result2 = sync ??= Renderer.#render(component, options);\n              const user_result = onfulfilled({\n                head: result2.head,\n                body: result2.body,\n                html: result2.body\n              });\n              return Promise.resolve(user_result);\n            }\n          }\n        )\n      }\n    });\n    return result;\n  }\n  /**\n   * Collect all of the `onDestroy` callbacks regsitered during rendering. In an async context, this is only safe to call\n   * after awaiting `collect_async`.\n   *\n   * Child renderers are \"porous\" and don't affect execution order, but component body renderers\n   * create ordering boundaries. Within a renderer, callbacks run in order until hitting a component boundary.\n   * @returns {Iterable<() => void>}\n   */\n  *#collect_on_destroy() {\n    for (const component of this.#traverse_components()) {\n      yield* component.#collect_ondestroy();\n    }\n  }\n  /**\n   * Performs a depth-first search of renderers, yielding the deepest components first, then additional components as we backtrack up the tree.\n   * @returns {Iterable<Renderer>}\n   */\n  *#traverse_components() {\n    for (const child of this.#out) {\n      if (typeof child !== \"string\") {\n        yield* child.#traverse_components();\n      }\n    }\n    if (this.#is_component_body) {\n      yield this;\n    }\n  }\n  /**\n   * @returns {Iterable<() => void>}\n   */\n  *#collect_ondestroy() {\n    if (this.#on_destroy) {\n      for (const fn of this.#on_destroy) {\n        yield fn;\n      }\n    }\n    for (const child of this.#out) {\n      if (child instanceof Renderer && !child.#is_component_body) {\n        yield* child.#collect_ondestroy();\n      }\n    }\n  }\n  /**\n   * Render a component. Throws if any of the children are performing asynchronous work.\n   *\n   * @template {Record<string, any>} Props\n   * @param {Component<Props>} component\n   * @param {{ props?: Omit<Props, '$$slots' | '$$events'>; context?: Map<any, any>; idPrefix?: string }} options\n   * @returns {AccumulatedContent}\n   */\n  static #render(component, options) {\n    var previous_context = ssr_context;\n    try {\n      const renderer = Renderer.#open_render(\"sync\", component, options);\n      const content = renderer.#collect_content();\n      return Renderer.#close_render(content, renderer);\n    } finally {\n      abort();\n      set_ssr_context(previous_context);\n    }\n  }\n  /**\n   * Render a component.\n   *\n   * @template {Record<string, any>} Props\n   * @param {Component<Props>} component\n   * @param {{ props?: Omit<Props, '$$slots' | '$$events'>; context?: Map<any, any>; idPrefix?: string }} options\n   * @returns {Promise<AccumulatedContent>}\n   */\n  static async #render_async(component, options) {\n    var previous_context = ssr_context;\n    try {\n      const renderer = Renderer.#open_render(\"async\", component, options);\n      const content = await renderer.#collect_content_async();\n      return Renderer.#close_render(content, renderer);\n    } finally {\n      abort();\n      set_ssr_context(previous_context);\n    }\n  }\n  /**\n   * Collect all of the code from the `out` array and return it as a string, or a promise resolving to a string.\n   * @param {AccumulatedContent} content\n   * @returns {AccumulatedContent}\n   */\n  #collect_content(content = { head: \"\", body: \"\" }) {\n    for (const item of this.#out) {\n      if (typeof item === \"string\") {\n        content[this.type] += item;\n      } else if (item instanceof Renderer) {\n        item.#collect_content(content);\n      }\n    }\n    return content;\n  }\n  /**\n   * Collect all of the code from the `out` array and return it as a string.\n   * @param {AccumulatedContent} content\n   * @returns {Promise<AccumulatedContent>}\n   */\n  async #collect_content_async(content = { head: \"\", body: \"\" }) {\n    await this.promise;\n    for (const item of this.#out) {\n      if (typeof item === \"string\") {\n        content[this.type] += item;\n      } else if (item instanceof Renderer) {\n        await item.#collect_content_async(content);\n      }\n    }\n    return content;\n  }\n  /**\n   * @template {Record<string, any>} Props\n   * @param {'sync' | 'async'} mode\n   * @param {import('svelte').Component<Props>} component\n   * @param {{ props?: Omit<Props, '$$slots' | '$$events'>; context?: Map<any, any>; idPrefix?: string }} options\n   * @returns {Renderer}\n   */\n  static #open_render(mode, component, options) {\n    const renderer = new Renderer(\n      new SSRState(mode, options.idPrefix ? options.idPrefix + \"-\" : \"\")\n    );\n    renderer.push(BLOCK_OPEN);\n    if (options.context) {\n      push();\n      ssr_context.c = options.context;\n      ssr_context.r = renderer;\n    }\n    component(renderer, options.props ?? {});\n    if (options.context) {\n      pop();\n    }\n    renderer.push(BLOCK_CLOSE);\n    return renderer;\n  }\n  /**\n   * @param {AccumulatedContent} content\n   * @param {Renderer} renderer\n   */\n  static #close_render(content, renderer) {\n    for (const cleanup of renderer.#collect_on_destroy()) {\n      cleanup();\n    }\n    let head2 = content.head + renderer.global.get_title();\n    let body = content.body;\n    for (const { hash, code } of renderer.global.css) {\n      head2 += `<style id=\"${hash}\">${code}</style>`;\n    }\n    return {\n      head: head2,\n      body\n    };\n  }\n}\nclass SSRState {\n  /** @readonly @type {'sync' | 'async'} */\n  mode;\n  /** @readonly @type {() => string} */\n  uid;\n  /** @readonly @type {Set<{ hash: string; code: string }>} */\n  css = /* @__PURE__ */ new Set();\n  /** @type {{ path: number[], value: string }} */\n  #title = { path: [], value: \"\" };\n  /**\n   * @param {'sync' | 'async'} mode\n   * @param {string} [id_prefix]\n   */\n  constructor(mode, id_prefix = \"\") {\n    this.mode = mode;\n    let uid = 1;\n    this.uid = () => `${id_prefix}s${uid++}`;\n  }\n  get_title() {\n    return this.#title.value;\n  }\n  /**\n   * Performs a depth-first (lexicographic) comparison using the path. Rejects sets\n   * from earlier than or equal to the current value.\n   * @param {string} value\n   * @param {number[]} path\n   */\n  set_title(value, path) {\n    const current = this.#title.path;\n    let i = 0;\n    let l = Math.min(path.length, current.length);\n    while (i < l && path[i] === current[i]) i += 1;\n    if (path[i] === void 0) return;\n    if (current[i] === void 0 || path[i] > current[i]) {\n      this.#title.path = path;\n      this.#title.value = value;\n    }\n  }\n}\nconst INVALID_ATTR_NAME_CHAR_REGEX = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\nfunction element(renderer, tag, attributes_fn = noop, children_fn = noop) {\n  renderer.push(\"<!---->\");\n  if (tag) {\n    renderer.push(`<${tag}`);\n    attributes_fn();\n    renderer.push(`>`);\n    if (!is_void(tag)) {\n      children_fn();\n      if (!is_raw_text_element(tag)) {\n        renderer.push(EMPTY_COMMENT);\n      }\n      renderer.push(`</${tag}>`);\n    }\n  }\n  renderer.push(\"<!---->\");\n}\nfunction render(component, options = {}) {\n  return Renderer.render(\n    /** @type {Component<Props>} */\n    component,\n    options\n  );\n}\nfunction head(renderer, fn) {\n  renderer.head((renderer2) => {\n    renderer2.push(BLOCK_OPEN);\n    renderer2.child(fn);\n    renderer2.push(BLOCK_CLOSE);\n  });\n}\nfunction attributes(attrs, css_hash, classes, styles, flags = 0) {\n  if (styles) {\n    attrs.style = to_style(attrs.style, styles);\n  }\n  if (attrs.class) {\n    attrs.class = clsx(attrs.class);\n  }\n  if (css_hash || classes) {\n    attrs.class = to_class(attrs.class, css_hash, classes);\n  }\n  let attr_str = \"\";\n  let name;\n  const is_html = (flags & ELEMENT_IS_NAMESPACED) === 0;\n  const lowercase = (flags & ELEMENT_PRESERVE_ATTRIBUTE_CASE) === 0;\n  const is_input = (flags & ELEMENT_IS_INPUT) !== 0;\n  for (name in attrs) {\n    if (typeof attrs[name] === \"function\") continue;\n    if (name[0] === \"$\" && name[1] === \"$\") continue;\n    if (INVALID_ATTR_NAME_CHAR_REGEX.test(name)) continue;\n    var value = attrs[name];\n    if (lowercase) {\n      name = name.toLowerCase();\n    }\n    if (is_input) {\n      if (name === \"defaultvalue\" || name === \"defaultchecked\") {\n        name = name === \"defaultvalue\" ? \"value\" : \"checked\";\n        if (attrs[name]) continue;\n      }\n    }\n    attr_str += attr(name, value, is_html && is_boolean_attribute(name));\n  }\n  return attr_str;\n}\nfunction attr_class(value, hash, directives) {\n  var result = to_class(value, hash, directives);\n  return result ? ` class=\"${escape_html(result, true)}\"` : \"\";\n}\nfunction store_get(store_values, store_name, store) {\n  if (store_name in store_values && store_values[store_name][0] === store) {\n    return store_values[store_name][2];\n  }\n  store_values[store_name]?.[1]();\n  store_values[store_name] = [store, null, void 0];\n  const unsub = subscribe_to_store(\n    store,\n    /** @param {any} v */\n    (v) => store_values[store_name][2] = v\n  );\n  store_values[store_name][1] = unsub;\n  return store_values[store_name][2];\n}\nfunction unsubscribe_stores(store_values) {\n  for (const store_name in store_values) {\n    store_values[store_name][1]();\n  }\n}\nfunction slot(renderer, $$props, name, slot_props, fallback_fn) {\n  var slot_fn = $$props.$$slots?.[name];\n  if (slot_fn === true) {\n    slot_fn = $$props[\"children\"];\n  }\n  if (slot_fn !== void 0) {\n    slot_fn(renderer, slot_props);\n  }\n}\nfunction rest_props(props, rest) {\n  const rest_props2 = {};\n  let key;\n  for (key in props) {\n    if (!rest.includes(key)) {\n      rest_props2[key] = props[key];\n    }\n  }\n  return rest_props2;\n}\nfunction sanitize_props(props) {\n  const { children, $$slots, ...sanitized } = props;\n  return sanitized;\n}\nfunction bind_props(props_parent, props_now) {\n  for (const key in props_now) {\n    const initial_value = props_parent[key];\n    const value = props_now[key];\n    if (initial_value === void 0 && value !== void 0 && Object.getOwnPropertyDescriptor(props_parent, key)?.set) {\n      props_parent[key] = value;\n    }\n  }\n}\nfunction ensure_array_like(array_like_or_iterator) {\n  if (array_like_or_iterator) {\n    return array_like_or_iterator.length !== void 0 ? array_like_or_iterator : Array.from(array_like_or_iterator);\n  }\n  return [];\n}\nexport {\n  attr as a,\n  attr_class as b,\n  bind_props as c,\n  sanitize_props as d,\n  ensure_array_like as e,\n  rest_props as f,\n  element as g,\n  head as h,\n  is_passive_event as i,\n  slot as j,\n  attributes as k,\n  clsx as l,\n  render as r,\n  store_get as s,\n  unsubscribe_stores as u\n};\n", "/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.partitioned) {\n    str += '; Partitioned'\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n", "\"use strict\";\n\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false,\n};\n\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\n\nfunction parseString(setCookieValue, options) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  try {\n    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\n  } catch (e) {\n    console.error(\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" +\n        value +\n        \"'. Set options.decodeValues to false to disable this feature.\",\n      e\n    );\n  }\n\n  var cookie = {\n    name: name,\n    value: value,\n  };\n\n  parts.forEach(function (part) {\n    var sides = part.split(\"=\");\n    var key = sides.shift().trimLeft().toLowerCase();\n    var value = sides.join(\"=\");\n    if (key === \"expires\") {\n      cookie.expires = new Date(value);\n    } else if (key === \"max-age\") {\n      cookie.maxAge = parseInt(value, 10);\n    } else if (key === \"secure\") {\n      cookie.secure = true;\n    } else if (key === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key === \"samesite\") {\n      cookie.sameSite = value;\n    } else if (key === \"partitioned\") {\n      cookie.partitioned = true;\n    } else {\n      cookie[key] = value;\n    }\n  });\n\n  return cookie;\n}\n\nfunction parseNameValuePair(nameValuePairStr) {\n  // Parses name-value-pair according to rfc6265bis draft\n\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\n  } else {\n    value = nameValuePairStr;\n  }\n\n  return { name: name, value: value };\n}\n\nfunction parse(input, options) {\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!input) {\n    if (!options.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      // for fetch responses - they combine headers of the same type in the headers array,\n      // but getSetCookie returns an uncombined array\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      // fast-path for node.js (which automatically normalizes header names to lower-case\n      input = input.headers[\"set-cookie\"];\n    } else {\n      // slow-path for other environments - see #25\n      var sch =\n        input.headers[\n          Object.keys(input.headers).find(function (key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })\n        ];\n      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\n      if (!sch && input.headers.cookie && !options.silent) {\n        console.warn(\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n        );\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  if (!options.map) {\n    return input.filter(isNonEmptyString).map(function (str) {\n      return parseString(str, options);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function (cookies, str) {\n      var cookie = parseString(str, options);\n      cookies[cookie.name] = cookie;\n      return cookies;\n    }, cookies);\n  }\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos;\n        pos += 1;\n\n        skipWhitespace();\n        nextStart = pos;\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          // we found cookies separator\n          cookiesSeparatorFound = true;\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n\n  return cookiesStrings;\n}\n\nmodule.exports = parse;\nmodule.exports.parse = parse;\nmodule.exports.parseString = parseString;\nmodule.exports.splitCookiesString = splitCookiesString;\n", "import { h as head, a as attr } from \"../../chunks/index2.js\";\nconst favicon = \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='107'%20height='128'%20viewBox='0%200%20107%20128'%3e%3ctitle%3esvelte-logo%3c/title%3e%3cpath%20d='M94.157%2022.819c-10.4-14.885-30.94-19.297-45.792-9.835L22.282%2029.608A29.92%2029.92%200%200%200%208.764%2049.65a31.5%2031.5%200%200%200%203.108%2020.231%2030%2030%200%200%200-4.477%2011.183%2031.9%2031.9%200%200%200%205.448%2024.116c10.402%2014.887%2030.942%2019.297%2045.791%209.835l26.083-16.624A29.92%2029.92%200%200%200%2098.235%2078.35a31.53%2031.53%200%200%200-3.105-20.232%2030%2030%200%200%200%204.474-11.182%2031.88%2031.88%200%200%200-5.447-24.116'%20style='fill:%23ff3e00'/%3e%3cpath%20d='M45.817%20106.582a20.72%2020.72%200%200%201-22.237-8.243%2019.17%2019.17%200%200%201-3.277-14.503%2018%2018%200%200%201%20.624-2.435l.49-1.498%201.337.981a33.6%2033.6%200%200%200%2010.203%205.098l.97.294-.09.968a5.85%205.85%200%200%200%201.052%203.878%206.24%206.24%200%200%200%206.695%202.485%205.8%205.8%200%200%200%201.603-.704L69.27%2076.28a5.43%205.43%200%200%200%202.45-3.631%205.8%205.8%200%200%200-.987-4.371%206.24%206.24%200%200%200-6.698-2.487%205.7%205.7%200%200%200-1.6.704l-9.953%206.345a19%2019%200%200%201-5.296%202.326%2020.72%2020.72%200%200%201-22.237-8.243%2019.17%2019.17%200%200%201-3.277-14.502%2017.99%2017.99%200%200%201%208.13-12.052l26.081-16.623a19%2019%200%200%201%205.3-2.329%2020.72%2020.72%200%200%201%2022.237%208.243%2019.17%2019.17%200%200%201%203.277%2014.503%2018%2018%200%200%201-.624%202.435l-.49%201.498-1.337-.98a33.6%2033.6%200%200%200-10.203-5.1l-.97-.294.09-.968a5.86%205.86%200%200%200-1.052-3.878%206.24%206.24%200%200%200-6.696-2.485%205.8%205.8%200%200%200-1.602.704L37.73%2051.72a5.42%205.42%200%200%200-2.449%203.63%205.79%205.79%200%200%200%20.986%204.372%206.24%206.24%200%200%200%206.698%202.486%205.8%205.8%200%200%200%201.602-.704l9.952-6.342a19%2019%200%200%201%205.295-2.328%2020.72%2020.72%200%200%201%2022.237%208.242%2019.17%2019.17%200%200%201%203.277%2014.503%2018%2018%200%200%201-8.13%2012.053l-26.081%2016.622a19%2019%200%200%201-5.3%202.328'%20style='fill:%23fff'/%3e%3c/svg%3e\";\nfunction _layout($$renderer, $$props) {\n  let { children } = $$props;\n  head($$renderer, ($$renderer2) => {\n    $$renderer2.push(`<link rel=\"icon\"${attr(\"href\", favicon)}/>`);\n  });\n  children?.($$renderer);\n  $$renderer.push(`<!---->`);\n}\nexport {\n  _layout as default\n};\n", "\n\nexport const index = 0;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/_layout.svelte.js')).default;\nexport const imports = [\"_app/immutable/nodes/0.wGTXielk.js\",\"_app/immutable/chunks/DsnmJJEf.js\",\"_app/immutable/chunks/DmKfOTeo.js\",\"_app/immutable/chunks/CyJPgw3D.js\"];\nexport const stylesheets = [\"_app/immutable/assets/0.Cgbp4RAO.css\"];\nexport const fonts = [];\n", "import \"clsx\";\nimport { Z as noop } from \"./context.js\";\nimport \"@sveltejs/kit/internal/server\";\nconst is_legacy = noop.toString().includes(\"$$\") || /function \\w+\\(\\) \\{\\}/.test(noop.toString());\nif (is_legacy) {\n  ({\n    data: {},\n    form: null,\n    error: null,\n    params: {},\n    route: { id: null },\n    state: {},\n    status: -1,\n    url: new URL(\"https://example.com\")\n  });\n}\n", "import { W as getContext, X as escape_html } from \"../../chunks/context.js\";\nimport \"clsx\";\nimport \"../../chunks/state.svelte.js\";\nimport \"@sveltejs/kit/internal\";\nimport \"../../chunks/exports.js\";\nimport \"../../chunks/utils.js\";\nimport { w as writable } from \"../../chunks/index.js\";\nimport \"@sveltejs/kit/internal/server\";\nfunction create_updated_store() {\n  const { set, subscribe } = writable(false);\n  {\n    return {\n      subscribe,\n      // eslint-disable-next-line @typescript-eslint/require-await\n      check: async () => false\n    };\n  }\n}\nconst stores = {\n  updated: /* @__PURE__ */ create_updated_store()\n};\n({\n  check: stores.updated.check\n});\nfunction context() {\n  return getContext(\"__request__\");\n}\nconst page$1 = {\n  get error() {\n    return context().page.error;\n  },\n  get status() {\n    return context().page.status;\n  }\n};\nconst page = page$1;\nfunction Error$1($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    $$renderer2.push(`<h1>${escape_html(page.status)}</h1> <p>${escape_html(page.error?.message)}</p>`);\n  });\n}\nexport {\n  Error$1 as default\n};\n", "\n\nexport const index = 1;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/fallbacks/error.svelte.js')).default;\nexport const imports = [\"_app/immutable/nodes/1.-tF8YJX-.js\",\"_app/immutable/chunks/DsnmJJEf.js\",\"_app/immutable/chunks/CVeh0obE.js\",\"_app/immutable/chunks/DmKfOTeo.js\",\"_app/immutable/chunks/Ch_7xMJZ.js\",\"_app/immutable/chunks/D-pHkSQu.js\"];\nexport const stylesheets = [];\nexport const fonts = [];\n", "import { W as getContext, Y as fallback, X as escape_html } from \"./context.js\";\nimport \"@sveltejs/kit/internal\";\nimport \"./exports.js\";\nimport \"./utils.js\";\nimport \"clsx\";\nimport \"@sveltejs/kit/internal/server\";\nimport \"./state.svelte.js\";\nimport { e as ensure_array_like, b as attr_class, a as attr, c as bind_props } from \"./index2.js\";\nconst getStores = () => {\n  const stores$1 = getContext(\"__svelte__\");\n  return {\n    /** @type {typeof page} */\n    page: {\n      subscribe: stores$1.page.subscribe\n    },\n    /** @type {typeof navigating} */\n    navigating: {\n      subscribe: stores$1.navigating.subscribe\n    },\n    /** @type {typeof updated} */\n    updated: stores$1.updated\n  };\n};\nconst page = {\n  subscribe(fn) {\n    const store = getStores().page;\n    return store.subscribe(fn);\n  }\n};\nfunction BottomNav($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    let items = fallback($$props[\"items\"], () => [], true);\n    let onNavigate = fallback($$props[\"onNavigate\"], null);\n    $$renderer2.push(`<nav class=\"bottom-nav svelte-10hguwp\" aria-label=\"Primary\"><!--[-->`);\n    const each_array = ensure_array_like(items);\n    for (let $$index = 0, $$length = each_array.length; $$index < $$length; $$index++) {\n      let item = each_array[$$index];\n      $$renderer2.push(`<button type=\"button\"${attr_class(\"nav-item svelte-10hguwp\", void 0, { \"active\": item.active, \"disabled\": item.disabled })}${attr(\"aria-current\", item.active ? \"page\" : void 0)}${attr(\"disabled\", item.disabled, true)}><span class=\"icon svelte-10hguwp\" aria-hidden=\"true\">${escape_html(item.icon)}</span> <span class=\"label\">${escape_html(item.label)}</span></button>`);\n    }\n    $$renderer2.push(`<!--]--></nav>`);\n    bind_props($$props, { items, onNavigate });\n  });\n}\nfunction SidebarNav($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    let title = fallback($$props[\"title\"], \"\");\n    let items = fallback($$props[\"items\"], () => [], true);\n    let onNavigate = fallback($$props[\"onNavigate\"], null);\n    $$renderer2.push(`<aside class=\"sidebar svelte-45rnuk\"${attr(\"aria-label\", title || void 0)}>`);\n    if (title) {\n      $$renderer2.push(\"<!--[-->\");\n      $$renderer2.push(`<div class=\"sidebar-header svelte-45rnuk\"><h2 class=\"svelte-45rnuk\">${escape_html(title)}</h2></div>`);\n    } else {\n      $$renderer2.push(\"<!--[!-->\");\n    }\n    $$renderer2.push(`<!--]--> <nav class=\"svelte-45rnuk\"><ul class=\"svelte-45rnuk\"><!--[-->`);\n    const each_array = ensure_array_like(items);\n    for (let $$index = 0, $$length = each_array.length; $$index < $$length; $$index++) {\n      let item = each_array[$$index];\n      $$renderer2.push(`<li><button type=\"button\"${attr_class(\"nav-link svelte-45rnuk\", void 0, { \"active\": item.active, \"disabled\": item.disabled })}${attr(\"aria-current\", item.active ? \"page\" : void 0)}${attr(\"disabled\", item.disabled, true)}><span class=\"icon svelte-45rnuk\" aria-hidden=\"true\">${escape_html(item.icon)}</span> <span>${escape_html(item.label)}</span></button></li>`);\n    }\n    $$renderer2.push(`<!--]--></ul></nav></aside>`);\n    bind_props($$props, { title, items, onNavigate });\n  });\n}\nexport {\n  BottomNav as B,\n  SidebarNav as S,\n  page as p\n};\n", "import { d as derived, r as readable } from \"./index.js\";\nconst BREAKPOINTS = {\n  tablet: 768,\n  desktop: 1024\n};\nconst initialSize = { width: 0, height: 0 };\nconst viewport = readable(initialSize, (set) => {\n  {\n    return;\n  }\n});\nconst screen = derived(viewport, ({ width, height }) => ({\n  width,\n  height,\n  isMobile: width < BREAKPOINTS.tablet,\n  isTablet: width >= BREAKPOINTS.tablet && width < BREAKPOINTS.desktop,\n  isDesktop: width >= BREAKPOINTS.desktop\n}));\nexport {\n  screen as s\n};\n", "import { w as writable } from \"./index.js\";\nconst initialMode = () => {\n  return \"view\";\n};\nconst modeStore = writable(initialMode(), (set) => {\n  return;\n});\nmodeStore.subscribe((value) => {\n  return;\n});\nexport {\n  modeStore as m\n};\n", "import { s as store_get, u as unsubscribe_stores } from \"../../../chunks/index2.js\";\nimport { S as SidebarNav, B as BottomNav, p as page } from \"../../../chunks/SidebarNav.js\";\nimport { s as screen } from \"../../../chunks/breakpoints.js\";\nimport { m as modeStore } from \"../../../chunks/mode.js\";\nfunction _layout($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    var $$store_subs;\n    const baseItems = [\n      { label: \"Map\", icon: \"\uD83D\uDDFA\uFE0F\", href: \"/create\" },\n      {\n        label: \"Pins\",\n        icon: \"\uD83D\uDCCD\",\n        href: \"/create/pins\",\n        disabled: true\n      },\n      {\n        label: \"Story\",\n        icon: \"\uD83D\uDCD6\",\n        href: \"/create/story\",\n        disabled: true\n      },\n      {\n        label: \"More\",\n        icon: \"\u22EE\",\n        href: \"/create/more\",\n        disabled: true\n      }\n    ];\n    const computeItems = (pathname) => baseItems.map((item) => ({ ...item, active: pathname === item.href }));\n    modeStore.set(\"create\");\n    let { children } = $$props;\n    if (store_get($$store_subs ??= {}, \"$screen\", screen).isDesktop) {\n      $$renderer2.push(\"<!--[-->\");\n      $$renderer2.push(`<div class=\"create-shell desktop svelte-1l9f1ei\">`);\n      SidebarNav($$renderer2, {\n        title: \"Create Mode\",\n        items: computeItems(store_get($$store_subs ??= {}, \"$page\", page).url.pathname)\n      });\n      $$renderer2.push(`<!----> <div class=\"workspace svelte-1l9f1ei\"><header class=\"workspace-header svelte-1l9f1ei\"><div><h1 class=\"svelte-1l9f1ei\">Workspace</h1> <p class=\"svelte-1l9f1ei\">Build custom map stories with annotations and scenes.</p></div> <div class=\"toolbar svelte-1l9f1ei\"><button type=\"button\" disabled class=\"svelte-1l9f1ei\">New Project</button> <button type=\"button\" disabled class=\"svelte-1l9f1ei\">Load Project</button> <button type=\"button\" class=\"primary svelte-1l9f1ei\" disabled>Save</button></div></header> <div class=\"workspace-body svelte-1l9f1ei\">`);\n      children?.($$renderer2);\n      $$renderer2.push(`<!----></div></div></div>`);\n    } else {\n      $$renderer2.push(\"<!--[!-->\");\n      if (store_get($$store_subs ??= {}, \"$screen\", screen).isTablet) {\n        $$renderer2.push(\"<!--[-->\");\n        $$renderer2.push(`<div class=\"create-shell tablet svelte-1l9f1ei\"><aside class=\"drawer svelte-1l9f1ei\">`);\n        SidebarNav($$renderer2, {\n          title: \"Create Mode\",\n          items: computeItems(store_get($$store_subs ??= {}, \"$page\", page).url.pathname)\n        });\n        $$renderer2.push(`<!----></aside> <div class=\"tablet-body svelte-1l9f1ei\"><header class=\"tablet-header svelte-1l9f1ei\"><h1 class=\"svelte-1l9f1ei\">Workspace</h1> <button type=\"button\" disabled class=\"svelte-1l9f1ei\">Project Actions</button></header> <div class=\"tablet-canvas svelte-1l9f1ei\">`);\n        children?.($$renderer2);\n        $$renderer2.push(`<!----></div> `);\n        BottomNav($$renderer2, {\n          items: computeItems(store_get($$store_subs ??= {}, \"$page\", page).url.pathname)\n        });\n        $$renderer2.push(`<!----></div></div>`);\n      } else {\n        $$renderer2.push(\"<!--[!-->\");\n        $$renderer2.push(`<div class=\"create-shell mobile svelte-1l9f1ei\"><header class=\"mobile-header svelte-1l9f1ei\"><h1 class=\"svelte-1l9f1ei\">Create</h1> <button type=\"button\" disabled class=\"svelte-1l9f1ei\">Tools</button></header> <div class=\"mobile-canvas svelte-1l9f1ei\">`);\n        children?.($$renderer2);\n        $$renderer2.push(`<!----></div> `);\n        BottomNav($$renderer2, {\n          items: computeItems(store_get($$store_subs ??= {}, \"$page\", page).url.pathname)\n        });\n        $$renderer2.push(`<!----></div>`);\n      }\n      $$renderer2.push(`<!--]-->`);\n    }\n    $$renderer2.push(`<!--]-->`);\n    if ($$store_subs) unsubscribe_stores($$store_subs);\n  });\n}\nexport {\n  _layout as default\n};\n", "\n\nexport const index = 2;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/create/_layout.svelte.js')).default;\nexport const imports = [\"_app/immutable/nodes/2.CxGwAj-Q.js\",\"_app/immutable/chunks/DsnmJJEf.js\",\"_app/immutable/chunks/DmKfOTeo.js\",\"_app/immutable/chunks/DlFo6P2L.js\",\"_app/immutable/chunks/CcWUXD1I.js\",\"_app/immutable/chunks/Ch_7xMJZ.js\",\"_app/immutable/chunks/2EYxe9t0.js\",\"_app/immutable/chunks/D-pHkSQu.js\",\"_app/immutable/chunks/CVeh0obE.js\",\"_app/immutable/chunks/q2JeGk3q.js\",\"_app/immutable/chunks/CyJPgw3D.js\",\"_app/immutable/chunks/B62UVDqu.js\"];\nexport const stylesheets = [\"_app/immutable/assets/breakpoints.yzSdU6gv.css\",\"_app/immutable/assets/SidebarNav.BhkK5er2.css\",\"_app/immutable/assets/2.BpDfismB.css\"];\nexport const fonts = [];\n", "import { s as store_get, u as unsubscribe_stores } from \"../../../chunks/index2.js\";\nimport { S as SidebarNav, B as BottomNav, p as page } from \"../../../chunks/SidebarNav.js\";\nimport { s as screen } from \"../../../chunks/breakpoints.js\";\nimport { m as modeStore } from \"../../../chunks/mode.js\";\nfunction _layout($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    var $$store_subs;\n    const baseItems = [\n      { label: \"Stories\", icon: \"\uD83D\uDCDA\", href: \"/view\" },\n      {\n        label: \"Maps\",\n        icon: \"\uD83D\uDDFA\uFE0F\",\n        href: \"/view/maps\",\n        disabled: true\n      },\n      {\n        label: \"Saved\",\n        icon: \"\u2764\uFE0F\",\n        href: \"/view/saved\",\n        disabled: true\n      },\n      {\n        label: \"More\",\n        icon: \"\u2699\uFE0F\",\n        href: \"/view/more\",\n        disabled: true\n      }\n    ];\n    const computeItems = (pathname) => baseItems.map((item) => ({ ...item, active: pathname === item.href }));\n    modeStore.set(\"view\");\n    let { children } = $$props;\n    if (store_get($$store_subs ??= {}, \"$screen\", screen).isDesktop) {\n      $$renderer2.push(\"<!--[-->\");\n      $$renderer2.push(`<div class=\"view-shell desktop svelte-px7o6d\">`);\n      SidebarNav($$renderer2, {\n        title: \"View Mode\",\n        items: computeItems(store_get($$store_subs ??= {}, \"$page\", page).url.pathname)\n      });\n      $$renderer2.push(`<!----> <div class=\"desktop-body svelte-px7o6d\"><header class=\"desktop-header svelte-px7o6d\"><div><h1 class=\"svelte-px7o6d\">Stories</h1> <p class=\"svelte-px7o6d\">Explore curated narratives from the Vietnam Map Archive.</p></div> <button type=\"button\" class=\"header-action svelte-px7o6d\" disabled>Search (soon)</button></header> <div class=\"desktop-content svelte-px7o6d\">`);\n      children?.($$renderer2);\n      $$renderer2.push(`<!----></div></div></div>`);\n    } else {\n      $$renderer2.push(\"<!--[!-->\");\n      if (store_get($$store_subs ??= {}, \"$screen\", screen).isTablet) {\n        $$renderer2.push(\"<!--[-->\");\n        $$renderer2.push(`<div class=\"view-shell tablet svelte-px7o6d\"><aside class=\"drawer svelte-px7o6d\">`);\n        SidebarNav($$renderer2, {\n          title: \"View Mode\",\n          items: computeItems(store_get($$store_subs ??= {}, \"$page\", page).url.pathname)\n        });\n        $$renderer2.push(`<!----></aside> <div class=\"tablet-main svelte-px7o6d\"><header class=\"tablet-header svelte-px7o6d\"><h1 class=\"svelte-px7o6d\">Stories</h1> <button type=\"button\" disabled class=\"svelte-px7o6d\">Search</button></header> <div class=\"tablet-content svelte-px7o6d\">`);\n        children?.($$renderer2);\n        $$renderer2.push(`<!----></div> `);\n        BottomNav($$renderer2, {\n          items: computeItems(store_get($$store_subs ??= {}, \"$page\", page).url.pathname)\n        });\n        $$renderer2.push(`<!----></div></div>`);\n      } else {\n        $$renderer2.push(\"<!--[!-->\");\n        $$renderer2.push(`<div class=\"view-shell mobile svelte-px7o6d\"><header class=\"mobile-header svelte-px7o6d\"><button type=\"button\" class=\"icon-button svelte-px7o6d\" disabled>\u2630</button> <h1 class=\"svelte-px7o6d\">Stories</h1> <button type=\"button\" class=\"icon-button svelte-px7o6d\" disabled>\u2699\uFE0F</button></header> <div class=\"mobile-content svelte-px7o6d\">`);\n        children?.($$renderer2);\n        $$renderer2.push(`<!----></div> `);\n        BottomNav($$renderer2, {\n          items: computeItems(store_get($$store_subs ??= {}, \"$page\", page).url.pathname)\n        });\n        $$renderer2.push(`<!----></div>`);\n      }\n      $$renderer2.push(`<!--]-->`);\n    }\n    $$renderer2.push(`<!--]-->`);\n    if ($$store_subs) unsubscribe_stores($$store_subs);\n  });\n}\nexport {\n  _layout as default\n};\n", "\n\nexport const index = 3;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/view/_layout.svelte.js')).default;\nexport const imports = [\"_app/immutable/nodes/3.CEei3L7y.js\",\"_app/immutable/chunks/DsnmJJEf.js\",\"_app/immutable/chunks/DmKfOTeo.js\",\"_app/immutable/chunks/DlFo6P2L.js\",\"_app/immutable/chunks/CcWUXD1I.js\",\"_app/immutable/chunks/Ch_7xMJZ.js\",\"_app/immutable/chunks/2EYxe9t0.js\",\"_app/immutable/chunks/D-pHkSQu.js\",\"_app/immutable/chunks/CVeh0obE.js\",\"_app/immutable/chunks/q2JeGk3q.js\",\"_app/immutable/chunks/CyJPgw3D.js\",\"_app/immutable/chunks/B62UVDqu.js\"];\nexport const stylesheets = [\"_app/immutable/assets/breakpoints.yzSdU6gv.css\",\"_app/immutable/assets/SidebarNav.BhkK5er2.css\",\"_app/immutable/assets/3.C8mssoqu.css\"];\nexport const fonts = [];\n", "import { d as sanitize_props, f as rest_props, g as element, c as bind_props, j as slot, k as attributes, l as clsx, e as ensure_array_like } from \"../../chunks/index2.js\";\nimport \"@sveltejs/kit/internal\";\nimport \"../../chunks/exports.js\";\nimport \"../../chunks/utils.js\";\nimport { Y as fallback, X as escape_html } from \"../../chunks/context.js\";\nimport \"clsx\";\nimport \"@sveltejs/kit/internal/server\";\nimport \"../../chunks/state.svelte.js\";\nimport \"../../chunks/breakpoints.js\";\nimport \"../../chunks/mode.js\";\nfunction Container($$renderer, $$props) {\n  const $$sanitized_props = sanitize_props($$props);\n  const $$restProps = rest_props($$sanitized_props, [\"as\", \"size\", \"padding\", \"className\", \"style\"]);\n  $$renderer.component(($$renderer2) => {\n    let classes, styles;\n    const sizes = {\n      sm: \"640px\",\n      md: \"768px\",\n      lg: \"1024px\",\n      xl: \"1280px\",\n      full: \"100%\"\n    };\n    let as = fallback($$props[\"as\"], \"div\");\n    let size = fallback($$props[\"size\"], \"lg\");\n    let padding = fallback($$props[\"padding\"], \"var(--space-6)\");\n    let className = fallback($$props[\"className\"], \"\");\n    let style = fallback($$props[\"style\"], void 0);\n    const resolveSize = (value) => value in sizes ? sizes[value] : value;\n    classes = [\"container\", className, $$sanitized_props.class].filter(Boolean).join(\" \");\n    styles = [\n      style,\n      $$sanitized_props.style,\n      `--container-max:${resolveSize(size)}`,\n      `--container-padding:${padding}`\n    ].filter(Boolean).join(\";\");\n    element(\n      $$renderer2,\n      as,\n      () => {\n        $$renderer2.push(`${attributes({ ...$$restProps, class: clsx(classes), style: styles }, \"svelte-11wbhul\")}`);\n      },\n      () => {\n        $$renderer2.push(`<!--[-->`);\n        slot($$renderer2, $$props, \"default\", {});\n        $$renderer2.push(`<!--]-->`);\n      }\n    );\n    bind_props($$props, { as, size, padding, className, style });\n  });\n}\nfunction Stack($$renderer, $$props) {\n  const $$sanitized_props = sanitize_props($$props);\n  const $$restProps = rest_props($$sanitized_props, [\n    \"as\",\n    \"gap\",\n    \"align\",\n    \"justify\",\n    \"wrap\",\n    \"className\",\n    \"style\"\n  ]);\n  $$renderer.component(($$renderer2) => {\n    let resolvedAlign, resolvedJustify, classes, styles;\n    const alignments = {\n      start: \"flex-start\",\n      center: \"center\",\n      end: \"flex-end\",\n      stretch: \"stretch\",\n      baseline: \"baseline\"\n    };\n    const justifications = {\n      start: \"flex-start\",\n      center: \"center\",\n      end: \"flex-end\",\n      between: \"space-between\",\n      around: \"space-around\",\n      evenly: \"space-evenly\"\n    };\n    let as = fallback($$props[\"as\"], \"div\");\n    let gap = fallback($$props[\"gap\"], \"var(--space-4)\");\n    let align = fallback($$props[\"align\"], \"stretch\");\n    let justify = fallback($$props[\"justify\"], \"start\");\n    let wrap = fallback($$props[\"wrap\"], false);\n    let className = fallback($$props[\"className\"], \"\");\n    let style = fallback($$props[\"style\"], void 0);\n    const resolve = (map, value) => value in map ? map[value] : value;\n    resolvedAlign = resolve(alignments, String(align));\n    resolvedJustify = resolve(justifications, String(justify));\n    classes = [\n      \"stack\",\n      wrap ? \"stack--wrap\" : \"\",\n      className,\n      $$sanitized_props.class\n    ].filter(Boolean).join(\" \");\n    styles = [\n      style,\n      $$sanitized_props.style,\n      `--stack-gap:${gap}`,\n      `--stack-align:${resolvedAlign}`,\n      `--stack-justify:${resolvedJustify}`\n    ].filter(Boolean).join(\";\");\n    element(\n      $$renderer2,\n      as,\n      () => {\n        $$renderer2.push(`${attributes({ ...$$restProps, class: clsx(classes), style: styles }, \"svelte-h657km\")}`);\n      },\n      () => {\n        $$renderer2.push(`<!--[-->`);\n        slot($$renderer2, $$props, \"default\", {});\n        $$renderer2.push(`<!--]-->`);\n      }\n    );\n    bind_props($$props, { as, gap, align, justify, wrap, className, style });\n  });\n}\nfunction _page($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    const cards = [\n      {\n        mode: \"view\",\n        title: \"\uD83D\uDC41\uFE0F View Mode\",\n        subtitle: \"Explore curated map stories\",\n        description: \"Browse featured collections, replay immersive stories, and discover historic overlays alongside modern basemaps.\",\n        features: [\n          \"Story gallery\",\n          \"Auto-advance playback\",\n          \"Bookmarks & saved stories\"\n        ]\n      },\n      {\n        mode: \"create\",\n        title: \"\u270F\uFE0F Create Mode\",\n        subtitle: \"Build your own narratives\",\n        description: \"Capture scenes with annotations, manage overlays, and export interactive map stories tailored to your audience.\",\n        features: [\n          \"Annotation tools\",\n          \"Scene capture & editing\",\n          \"Export as JSON\"\n        ]\n      }\n    ];\n    $$renderer2.push(`<main class=\"mode-selection svelte-1uha8ag\">`);\n    Container($$renderer2, {\n      size: \"xl\",\n      children: ($$renderer3) => {\n        Stack($$renderer3, {\n          gap: \"var(--space-6)\",\n          align: \"center\",\n          children: ($$renderer4) => {\n            $$renderer4.push(`<div class=\"hero svelte-1uha8ag\"><div class=\"logo svelte-1uha8ag\"><span>VMA</span></div> <div class=\"hero-text svelte-1uha8ag\"><h1 class=\"svelte-1uha8ag\">Vietnam Map Archive</h1> <p class=\"svelte-1uha8ag\">Experience and create map-based stories that connect the past with the present.</p></div></div> <div class=\"card-grid svelte-1uha8ag\"><!--[-->`);\n            const each_array = ensure_array_like(cards);\n            for (let $$index_1 = 0, $$length = each_array.length; $$index_1 < $$length; $$index_1++) {\n              let card = each_array[$$index_1];\n              $$renderer4.push(`<button type=\"button\" class=\"mode-card svelte-1uha8ag\"><div class=\"card-content svelte-1uha8ag\"><div><h2 class=\"svelte-1uha8ag\">${escape_html(card.title)}</h2> <p class=\"subtitle svelte-1uha8ag\">${escape_html(card.subtitle)}</p></div> <p class=\"description svelte-1uha8ag\">${escape_html(card.description)}</p> <ul class=\"svelte-1uha8ag\"><!--[-->`);\n              const each_array_1 = ensure_array_like(card.features);\n              for (let $$index = 0, $$length2 = each_array_1.length; $$index < $$length2; $$index++) {\n                let feature = each_array_1[$$index];\n                $$renderer4.push(`<li>${escape_html(feature)}</li>`);\n              }\n              $$renderer4.push(`<!--]--></ul> <span class=\"cta svelte-1uha8ag\">Enter ${escape_html(card.mode === \"view\" ? \"View\" : \"Create\")} Mode</span></div></button>`);\n            }\n            $$renderer4.push(`<!--]--></div> <div class=\"links svelte-1uha8ag\"><a href=\"/about\" class=\"link svelte-1uha8ag\" aria-disabled=\"true\">About (coming soon)</a> <span class=\"divider svelte-1uha8ag\" aria-hidden=\"true\">\u2022</span> <a href=\"/signin\" class=\"link svelte-1uha8ag\" aria-disabled=\"true\">Sign In (coming soon)</a></div>`);\n          },\n          $$slots: { default: true }\n        });\n      },\n      $$slots: { default: true }\n    });\n    $$renderer2.push(`<!----></main>`);\n  });\n}\nexport {\n  _page as default\n};\n", "\n\nexport const index = 4;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/_page.svelte.js')).default;\nexport const universal = {\n  \"ssr\": false\n};\nexport const universal_id = \"src/routes/+page.ts\";\nexport const imports = [\"_app/immutable/nodes/4.DKNasrTJ.js\",\"_app/immutable/chunks/DsnmJJEf.js\",\"_app/immutable/chunks/CVeh0obE.js\",\"_app/immutable/chunks/DmKfOTeo.js\",\"_app/immutable/chunks/Ch_7xMJZ.js\",\"_app/immutable/chunks/q2JeGk3q.js\",\"_app/immutable/chunks/D-pHkSQu.js\",\"_app/immutable/chunks/CyJPgw3D.js\",\"_app/immutable/chunks/CcWUXD1I.js\",\"_app/immutable/chunks/B62UVDqu.js\"];\nexport const stylesheets = [\"_app/immutable/assets/breakpoints.yzSdU6gv.css\",\"_app/immutable/assets/4.BkziFlwD.css\"];\nexport const fonts = [];\n", "/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n", "/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n", "/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n", "/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n", "/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47\u00B0 58\u2032 60\u2033 N 7\u00B0 50\u2032 60\u2033 E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47\u00B0 58\u2032 60.0\u2033 N 7\u00B0 50\u2032 60.0\u2033 E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n", "/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n", "/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n", "/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n", "/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n", "/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n", "/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n", "/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n", "/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n", "/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n", "/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n", "/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n", "/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n", "/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n", "/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n", "/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n", "/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n", "/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n", "/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n", "/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n", "/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.6.1';\n", "/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n", "/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n", "/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n", "/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3\u00D73 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nfunction fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n", "/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n", "/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n", "/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n", "/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n", "/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n", "/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://web.archive.org/web/20210504233957/http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n", "/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n", "/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n", "/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n", "/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n", "/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n", "/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport Geometry from './Geometry.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n", "/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n", "/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n", "/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n", "/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n", "/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n", "/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n", "/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n", "/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n      this.getExtent(),\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n", "/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * Return the sum of all line string lengths\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    const ends = this.ends_;\n    let start = 0;\n    let length = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      length += lineStringLength(\n        this.flatCoordinates,\n        start,\n        ends[i],\n        this.stride,\n      );\n      start = ends[i];\n    }\n    return length;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n", "/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n", "/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n", "/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n", "/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n", "/**\n * @module ol/geom\n */\n\nexport {default as Circle} from './geom/Circle.js';\nexport {default as Geometry} from './geom/Geometry.js';\nexport {default as GeometryCollection} from './geom/GeometryCollection.js';\nexport {default as LinearRing} from './geom/LinearRing.js';\nexport {default as LineString} from './geom/LineString.js';\nexport {default as MultiLineString} from './geom/MultiLineString.js';\nexport {default as MultiPoint} from './geom/MultiPoint.js';\nexport {default as MultiPolygon} from './geom/MultiPolygon.js';\nexport {default as Point} from './geom/Point.js';\nexport {default as Polygon} from './geom/Polygon.js';\nexport {default as SimpleGeometry} from './geom/SimpleGeometry.js';\n", "/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n", "/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout || 'XY', object.ends),\n    false,\n    options,\n  );\n}\n", "/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {FeatureFormat<FeatureType>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n", "/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {JSONFeature<FeatureType>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return /** @type {FeatureType|Array<FeatureType>} */ (\n        createRenderFeature(\n          {\n            geometry,\n            id: geoJSONFeature['id'],\n            properties: geoJSONFeature['properties'],\n          },\n          options,\n        )\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return /** @type {FeatureType|Array<FeatureType>} */ (feature);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return /** @type {Array<FeatureType>} */ (features.flat());\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n", "export async function fetchUrl(input, init, fetchFn) {\n    let response;\n    if (typeof fetchFn === 'function') {\n        response = await fetchFn(input, init);\n    }\n    else {\n        response = await fetch(input, init);\n    }\n    if (!response.ok) {\n        const json = await response.json();\n        if (json && json.error) {\n            throw new Error(json.error);\n        }\n        else if (response.statusText) {\n            throw new Error(response.statusText);\n        }\n        else if (response.status === 404) {\n            throw new Error(`Not found: ${input} (404)`);\n        }\n        else if (response.status === 500) {\n            throw new Error('Internal server error (500)');\n        }\n        else {\n            throw new Error(`Failed to fetch: ${input} (${response.status})`);\n        }\n    }\n    return response;\n}\nexport async function fetchJson(input, init, fetchFn) {\n    const response = await fetchUrl(input, init, fetchFn);\n    return await response.json();\n}\nexport async function fetchImageInfo(imageUri, init, fetchFn) {\n    return await fetchJson(`${imageUri}/info.json`, init, fetchFn);\n}\nexport async function fetchImageBitmap(input, init, fetchFn) {\n    const response = await fetchUrl(input, init, fetchFn);\n    const blob = await response.blob();\n    return await createImageBitmap(blob);\n}\n", "import { fetchJson } from './fetch.js';\nfunction fetchAnnotationsByIiifUrl(url) {\n    // TODO: move base URLs to env/config file\n    return fetchJson(`https://annotations.allmaps.org/?url=${url}`);\n}\nasync function fetchAnnotationsForImage(parsedImage) {\n    try {\n        const annotations = await fetchAnnotationsByIiifUrl(`${parsedImage.uri}/info.json`);\n        return [annotations];\n    }\n    catch (err) {\n        return [];\n    }\n}\nasync function fetchAnnotationsForManifest(parsedManifest) {\n    try {\n        const annotations = await fetchAnnotationsByIiifUrl(parsedManifest.uri);\n        return [annotations];\n    }\n    catch (err) {\n        const annotations = [];\n        for (const canvas of parsedManifest.canvases) {\n            const imageAnnotations = await fetchAnnotationsForImage(canvas.image);\n            annotations.push(...imageAnnotations);\n        }\n        return annotations;\n    }\n}\nasync function fetchAnnotationsForCollection(parsedCollection) {\n    try {\n        const annotations = await fetchAnnotationsByIiifUrl(parsedCollection.uri);\n        return [annotations];\n    }\n    catch (err) {\n        const annotations = [];\n        if ('items' in parsedCollection) {\n            for (const item of parsedCollection.items) {\n                if (item.type === 'collection') {\n                    const itemAnnotations = await fetchAnnotationsForCollection(item);\n                    annotations.push(...itemAnnotations);\n                }\n                else if (item.type === 'manifest' && 'canvases' in item) {\n                    const itemAnnotations = await fetchAnnotationsForManifest(item);\n                    annotations.push(...itemAnnotations);\n                }\n            }\n        }\n        return annotations;\n    }\n}\nexport function fetchAnnotationsFromApi(parsedIiif) {\n    if (parsedIiif.type === 'image') {\n        return fetchAnnotationsForImage(parsedIiif);\n    }\n    else if (parsedIiif.type === 'manifest') {\n        return fetchAnnotationsForManifest(parsedIiif);\n    }\n    else if (parsedIiif.type === 'collection') {\n        return fetchAnnotationsForCollection(parsedIiif);\n    }\n    else {\n        throw new Error('Unsupported IIIF resource');\n    }\n}\n", "const DEFAULT_BIN_SIZE = 5;\nconst DEFAULT_RESOLUTION = 2;\nexport function getImageData(imageBitmap, mask) {\n    const canvas = new OffscreenCanvas(imageBitmap.width, imageBitmap.height);\n    const context = canvas.getContext('2d');\n    if (!context) {\n        throw new Error('Could not create OffscreenCanvas context');\n    }\n    if (mask) {\n        context.fillStyle = 'rgba(0, 0, 0, 0)';\n        context.fillRect(0, 0, imageBitmap.width, imageBitmap.height);\n        context.beginPath();\n        context.moveTo(mask[0][0], mask[0][1]);\n        mask.slice(1).forEach((point) => context.lineTo(point[0], point[1]));\n        context.closePath();\n        context.clip();\n    }\n    context.drawImage(imageBitmap, 0, 0);\n    return context.getImageData(0, 0, imageBitmap.width, imageBitmap.height);\n}\nexport function getColorsArray(imageData, resolution = DEFAULT_RESOLUTION) {\n    const colors = [];\n    for (let x = 0; x < imageData.width; x += resolution) {\n        for (let y = 0; y < imageData.height; y += resolution) {\n            const startIndex = (x + y * imageData.width) * 4;\n            const opacity = imageData.data[startIndex + 3];\n            if (opacity > 0) {\n                const color = [\n                    imageData.data[startIndex],\n                    imageData.data[startIndex + 1],\n                    imageData.data[startIndex + 2]\n                ];\n                colors.push(color);\n            }\n        }\n    }\n    return colors;\n}\nexport function getColorHistogram(colors, binSize = DEFAULT_BIN_SIZE) {\n    const histogram = {};\n    for (const color of colors) {\n        const bin = createColorBin(color, binSize);\n        if (!histogram[bin]) {\n            histogram[bin] = {\n                count: 0,\n                color\n            };\n        }\n        histogram[bin].count += 1;\n    }\n    return histogram;\n}\nexport function getMaxOccurringColor(histogram) {\n    let max = Number.NEGATIVE_INFINITY;\n    let maxOccurringColor;\n    for (const { count, color } of Object.values(histogram)) {\n        if (count > max) {\n            max = count;\n            maxOccurringColor = color;\n        }\n    }\n    if (!maxOccurringColor) {\n        throw new Error('Histogram is empty');\n    }\n    return {\n        count: max,\n        color: maxOccurringColor\n    };\n}\nfunction createColorBin(color, binSize) {\n    return color.map((c) => Math.round(c / binSize)).toString();\n}\n", "interface MCCHOptions {\n  sorted?: boolean;\n}\ntype Point = [number, number];\n/**\n * Computes the convex hull of a binary image using Andrew's Monotone Chain Algorithm\n * http://www.algorithmist.com/index.php/Monotone_Chain_Convex_Hull\n *\n * @param points - An array of points.\n * @param options - MCCH Algorithm options.\n * @return Coordinates of the convex hull in clockwise order\n */\nexport default function monotoneChainConvexHull(\n  points: Point[],\n  options: MCCHOptions = {},\n): Point[] {\n  const { sorted } = options;\n  if (!sorted) {\n    points = points.slice().sort(byXThenY);\n  }\n\n  const n = points.length;\n  const result = new Array(n * 2);\n  let k = 0;\n\n  for (let i = 0; i < n; i++) {\n    const point = points[i];\n    while (k >= 2 && cw(result[k - 2], result[k - 1], point) <= 0) {\n      k--;\n    }\n    result[k++] = point;\n  }\n\n  const t = k + 1;\n  for (let i = n - 2; i >= 0; i--) {\n    const point = points[i];\n    while (k >= t && cw(result[k - 2], result[k - 1], point) <= 0) {\n      k--;\n    }\n    result[k++] = point;\n  }\n\n  return result.slice(0, k - 1);\n}\n\nfunction cw(p1: Point, p2: Point, p3: Point) {\n  return (p2[1] - p1[1]) * (p3[0] - p1[0]) - (p2[0] - p1[0]) * (p3[1] - p1[1]);\n}\n\nfunction byXThenY(point1: Point, point2: Point) {\n  if (point1[0] === point2[0]) {\n    return point1[1] - point2[1];\n  }\n  return point1[0] - point2[0];\n}\n", "import { rewind } from '@turf/rewind';\n// Assert\nexport function isPoint(input) {\n    return (Array.isArray(input) &&\n        input.length >= 2 &&\n        typeof input[0] === 'number' &&\n        typeof input[1] === 'number');\n}\nexport function isLineString(input) {\n    return Array.isArray(input) && input.every(isPoint);\n}\nexport function isRing(input) {\n    return Array.isArray(input) && input.every(isPoint);\n}\nexport function isPolygon(input) {\n    return Array.isArray(input) && input.every(isRing);\n}\nexport function isMultiPoint(input) {\n    return Array.isArray(input) && input.every(isPoint);\n}\nexport function isMultiLineString(input) {\n    return Array.isArray(input) && input.every(isLineString);\n}\nexport function isMultiPolygon(input) {\n    return Array.isArray(input) && input.every(isPolygon);\n}\nexport function isGeometry(input) {\n    return (isPoint(input) ||\n        isLineString(input) ||\n        isPolygon(input) ||\n        isMultiPoint(input) ||\n        isMultiLineString(input) ||\n        isMultiPolygon(input));\n}\n// Close\nexport function closeRing(ring) {\n    return [...ring, ring[0]];\n}\nexport function uncloseRing(ring) {\n    ring.splice(-1);\n    return ring;\n}\nexport function closePolygon(polygon) {\n    return polygon.map((ring) => closeRing(ring));\n}\nexport function unclosePolygon(polygon) {\n    return polygon.map((ring) => uncloseRing(ring));\n}\nexport function closeMultiPolygon(multiPolygon) {\n    return multiPolygon.map((polygon) => closePolygon(polygon));\n}\nexport function uncloseMultiPolygon(multiPolygon) {\n    return multiPolygon.map((polygon) => unclosePolygon(polygon));\n}\n// Conform\nexport function conformLineString(lineString) {\n    // Filter out repeated points\n    lineString = lineString.filter(function (point, i, originalLineString) {\n        return i === 0 || !isEqualPoint(point, originalLineString[i - 1]);\n    });\n    if (lineString.length < 2) {\n        throw new Error('LineString should contain at least 2 points');\n    }\n    return lineString;\n}\nexport function conformRing(ring) {\n    // Filter out repeated points\n    ring = ring.filter(function (point, i, originalRing) {\n        return i === 0 || !isEqualPoint(point, originalRing[i - 1]);\n    });\n    // Remove last point if input is closed ring\n    if (isClosed(ring)) {\n        uncloseRing(ring);\n    }\n    if (ring.length < 3) {\n        throw new Error('Ring should contain at least 3 points');\n    }\n    return ring;\n}\nexport function conformPolygon(polygon) {\n    return polygon.map((ring) => {\n        return conformRing(ring);\n    });\n}\nexport function conformMultiLineString(multiLineString) {\n    return multiLineString.map((lineString) => conformLineString(lineString));\n}\nexport function conformMultiPolygon(multiPolygon) {\n    return multiPolygon.map((polygon) => conformPolygon(polygon));\n}\n// Convert to GeoJSON\nexport function pointToGeojsonPoint(point) {\n    return {\n        type: 'Point',\n        coordinates: point\n    };\n}\nexport function lineStringToGeojsonLineString(lineString) {\n    return {\n        type: 'LineString',\n        coordinates: lineString\n    };\n}\nexport function ringToGeojsonPolygon(ring, close = true) {\n    const geometry = {\n        type: 'Polygon',\n        coordinates: close ? [closeRing(ring)] : [ring]\n    };\n    return rewind(geometry);\n}\nexport function polygonToGeojsonPolygon(polygon, close = true) {\n    const geometry = {\n        type: 'Polygon',\n        coordinates: close ? closePolygon(polygon) : polygon\n    };\n    return rewind(geometry);\n}\nexport function multiPointToGeojsonMultiPoint(multiPoint) {\n    return {\n        type: 'MultiPoint',\n        coordinates: multiPoint\n    };\n}\nexport function multiLineStringToGeojsonMultiLineString(multiLineString) {\n    return {\n        type: 'MultiLineString',\n        coordinates: multiLineString\n    };\n}\nexport function multiPolygonToGeojsonMultiPolygon(multiPolygon, close = true) {\n    const geometry = {\n        type: 'MultiPolygon',\n        coordinates: close ? closeMultiPolygon(multiPolygon) : multiPolygon\n    };\n    return rewind(geometry);\n}\n/**\n * Converts a Geometry to a GeoJSON Geometry\n * @param geometry - Geometry\n * @returns GeoJSON Geometry\n */\nexport function geometryToGeojsonGeometry(geometry, options) {\n    if (!options || !options.isMultiGeometry) {\n        if (isPoint(geometry)) {\n            return pointToGeojsonPoint(geometry);\n        }\n        else if (isLineString(geometry)) {\n            return lineStringToGeojsonLineString(geometry);\n        }\n        else if (isPolygon(geometry)) {\n            return polygonToGeojsonPolygon(geometry);\n        }\n        else {\n            throw new Error('Geometry type not supported');\n        }\n    }\n    else {\n        if (isMultiPoint(geometry)) {\n            return multiPointToGeojsonMultiPoint(geometry);\n        }\n        else if (isMultiLineString(geometry)) {\n            return multiLineStringToGeojsonMultiLineString(geometry);\n        }\n        else if (isMultiPolygon(geometry)) {\n            return multiPolygonToGeojsonMultiPolygon(geometry);\n        }\n        else {\n            throw new Error('Geometry type not supported');\n        }\n    }\n}\n// Convert to SVG\nexport function pointToSvgCircle(point) {\n    return {\n        type: 'circle',\n        coordinates: point\n    };\n}\nexport function lineStringToSvgPolyLine(lineString) {\n    return {\n        type: 'polyline',\n        coordinates: lineString\n    };\n}\nexport function polygonToSvgPolygon(polygon) {\n    return {\n        type: 'polygon',\n        coordinates: polygon[0]\n    };\n}\n/**\n * Converts a Geometry to a SVG Geometry\n * @param geometry - Geometry\n * @returns SVG Geometry\n * }}\n */\nexport function geometryToSvgGeometry(geometry) {\n    if (isPoint(geometry)) {\n        return pointToSvgCircle(geometry);\n    }\n    else if (isLineString(geometry)) {\n        return lineStringToSvgPolyLine(geometry);\n    }\n    else if (isPolygon(geometry)) {\n        return polygonToSvgPolygon(geometry);\n    }\n    else {\n        throw new Error(`Unsupported GeoJSON Geometry`);\n    }\n}\n// Check\nexport function isClosed(input) {\n    return (Array.isArray(input) &&\n        input.length >= 2 &&\n        isEqualPoint(input[0], input[input.length - 1]));\n}\nexport function isEqualPoint(point0, point1) {\n    if (point0 === point1)\n        return true;\n    if (point0 === null || point1 === null)\n        return false;\n    return point0[0] === point1[0] && point0[1] === point1[1];\n}\nexport function isEqualPointArray(pointArray0, pointArray1) {\n    if (pointArray0 === pointArray1)\n        return true;\n    if (!pointArray0 || !pointArray1)\n        return false;\n    if (pointArray0.length !== pointArray1.length)\n        return false;\n    for (let i = 0; i < pointArray0.length; ++i) {\n        if (isEqualPoint(pointArray0[i], pointArray1[i]))\n            return false;\n    }\n    return true;\n}\nexport function isEqualPointArrayArray(pointArrayArray0, pointArrayArray1) {\n    if (pointArrayArray0 === pointArrayArray1)\n        return true;\n    if (!pointArrayArray0 || !pointArrayArray1)\n        return false;\n    if (pointArrayArray0.length !== pointArrayArray1.length)\n        return false;\n    for (let i = 0; i < pointArrayArray0.length; ++i) {\n        if (isEqualPointArray(pointArrayArray0[i], pointArrayArray1[i]))\n            return false;\n    }\n    return true;\n}\n// Split, combine, shift, flip\nexport function pointsAndPointsToLines(points0, points1) {\n    if (points0.length !== points1.length)\n        throw new Error('Point arrays should be of same length');\n    return points0.map((point0, index) => [point0, points1[index]]);\n}\nexport function lineStringToLines(lineString) {\n    return lineString.reduce((accumulator, point, index) => [\n        ...accumulator,\n        [point, lineString[(index + 1) % lineString.length]]\n    ], []);\n}\nexport function pointToPixel(point, translate = [0, 0]) {\n    return point.map((coordinate, index) => {\n        return Math.floor(coordinate + translate[index]);\n    });\n}\nexport function pixelToIntArrayIndex(pixel, size, channels, flipY = false) {\n    const column = pixel[0];\n    const row = flipY ? size[1] - 1 - pixel[1] : pixel[1];\n    return (row * size[0] + column) * channels;\n}\nexport function flipX(point) {\n    return [-point[0], point[1]];\n}\nexport function flipY(point) {\n    return [point[0], -point[1]];\n}\n// Mix\nexport function mixNumbers(number0, number1, t) {\n    return number0 * (1 - t) + number1 * t;\n}\nexport function mixPoints(point0, point1, t) {\n    return [\n        mixNumbers(point0[0], point1[0], t),\n        mixNumbers(point0[1], point1[1], t)\n    ];\n}\n// Compute\nexport function midPoint(...points) {\n    const result = [0, 0];\n    for (let i = 0; i < points.length; i++) {\n        result[0] += points[i][0];\n        result[1] += points[i][1];\n    }\n    result[0] = result[0] / points.length;\n    result[1] = result[1] / points.length;\n    return result;\n}\n// Return angle of line (in radians, signed)\nexport function lineAngle(line) {\n    return Math.atan2(line[1][1] - line[0][1], line[1][0] - line[0][0]);\n}\n// Return the next point starting from a point going a certian distance in a certain direction\nexport function stepDistanceAngle(point, dist, angle) {\n    return [point[0] + Math.cos(angle) * dist, point[1] + Math.sin(angle) * dist];\n}\nexport function distance(from, to) {\n    if (isLineString(from) && from.length === 2) {\n        return distance(from[0], from[1]);\n    }\n    else if (isPoint(from) && to === undefined) {\n        return distance(from, [0, 0]);\n    }\n    else if (isPoint(from) && isPoint(to)) {\n        return Math.sqrt(squaredDistance(from, to));\n    }\n    else {\n        throw new Error('Input type not supported');\n    }\n}\nexport function squaredDistance(from, to) {\n    if (isLineString(from) && from.length === 2) {\n        return squaredDistance(from[0], from[1]);\n    }\n    else if (isPoint(from) && to === undefined) {\n        return squaredDistance(from, [0, 0]);\n    }\n    else if (isPoint(from) && isPoint(to)) {\n        return (to[0] - from[0]) ** 2 + (to[1] - from[1]) ** 2;\n    }\n    else {\n        throw new Error('Input type not supported');\n    }\n}\nexport function rms(from, to) {\n    if (from.length !== to.length) {\n        throw new Error('Arrays need to be of same length');\n    }\n    const squaredDistances = from.map((fromPoint, index) => squaredDistance(fromPoint, to[index]));\n    const meanSquaredDistances = squaredDistances.reduce((sum, squaredDistace) => sum + squaredDistace, 0) /\n        squaredDistances.length;\n    const rootMeanSquaredDistances = Math.sqrt(meanSquaredDistances);\n    return rootMeanSquaredDistances;\n}\nexport function triangleArea(triangle) {\n    return (0.5 *\n        Math.abs(triangle[0][0] * (triangle[1][1] - triangle[2][1]) +\n            triangle[1][0] * (triangle[2][1] - triangle[0][1]) +\n            triangle[2][0] * (triangle[0][1] - triangle[1][1])));\n}\nexport function invertPoint(point) {\n    return [-point[0], -point[1]];\n}\nexport function invertPoints(points) {\n    return points.map((point) => invertPoint(point));\n}\nexport function scalePoint(point, scale) {\n    if (scale === 1) {\n        return point;\n    }\n    return [point[0] * scale, point[1] * scale];\n}\nexport function scalePoints(points, scale) {\n    if (scale === 1) {\n        return points;\n    }\n    return points.map((point) => scalePoint(point, scale));\n}\nexport function translatePoint(point, translationPoint, addOrSubstract = 'add') {\n    if (addOrSubstract === 'add') {\n        return [point[0] + translationPoint[0], point[1] + translationPoint[1]];\n    }\n    else {\n        return [point[0] - translationPoint[0], point[1] - translationPoint[1]];\n    }\n}\nexport function translatePoints(points, point, addOrSubstract = 'add') {\n    if (isEqualPoint(point, [0, 0])) {\n        return points;\n    }\n    return points.map((p) => translatePoint(p, point, addOrSubstract));\n}\nexport function rotatePoint(point, angle = 0, anchor = undefined, cosAngle, sinAngle) {\n    if (angle === 0 || angle === undefined) {\n        return point;\n    }\n    if (anchor) {\n        return translatePoint(rotatePoint(translatePoint(point, anchor, 'substract'), angle, undefined, cosAngle, sinAngle), anchor);\n    }\n    else {\n        cosAngle = cosAngle || Math.cos(angle);\n        sinAngle = sinAngle || Math.sin(angle);\n        return [\n            point[0] * cosAngle - point[1] * sinAngle,\n            point[0] * sinAngle + point[1] * cosAngle\n        ];\n    }\n}\nexport function rotatePoints(points, angle = 0, anchor = undefined, cosAngle, sinAngle) {\n    if (angle === 0 || angle === undefined) {\n        return points;\n    }\n    cosAngle = cosAngle || Math.cos(angle);\n    sinAngle = sinAngle || Math.sin(angle);\n    return points.map((point) => rotatePoint(point, angle, anchor, cosAngle, sinAngle));\n}\nexport function triangleAngles(triangle) {\n    return [\n        threePointsToAngle(triangle[0], triangle[1], triangle[2]),\n        threePointsToAngle(triangle[1], triangle[2], triangle[0]),\n        threePointsToAngle(triangle[2], triangle[0], triangle[1])\n    ];\n}\n/**\n * Return angle alpha made at point A by points B and C\n */\nexport function threePointsToAngle(pointA, pointB, pointC) {\n    const AB = distance(pointA, pointB);\n    const BC = distance(pointB, pointC);\n    const AC = distance(pointA, pointC);\n    return Math.acos((AB ** 2 + AC ** 2 - BC ** 2) / (2 * AB * AC));\n}\n", "import { conformLineString, conformRing, conformPolygon, conformMultiLineString, conformMultiPolygon, geometryToSvgGeometry } from './geometry.js';\n// Assert\nfunction isGeojsonPointCoordinates(input) {\n    return (Array.isArray(input) &&\n        input.length >= 2 &&\n        input.every((item) => typeof item === 'number'));\n}\nexport function isGeojsonLineStringCoordinates(input) {\n    return Array.isArray(input) && input.every(isGeojsonPointCoordinates);\n}\nexport function isGeojsonRingCoordinates(input) {\n    return Array.isArray(input) && input.every(isGeojsonPointCoordinates);\n}\nexport function isGeojsonPolygonCoordinates(input) {\n    return Array.isArray(input) && input.every(isGeojsonRingCoordinates);\n}\nexport function isGeojsonMultiPointCoordinates(input) {\n    return Array.isArray(input) && input.every(isGeojsonPointCoordinates);\n}\nexport function isGeojsonMultiLineStringCoordinates(input) {\n    return Array.isArray(input) && input.every(isGeojsonLineStringCoordinates);\n}\nexport function isGeojsonMultiPolygonCoordinates(input) {\n    return Array.isArray(input) && input.every(isGeojsonPolygonCoordinates);\n}\nexport function isGeojsonPoint(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        'type' in input &&\n        input.type === 'Point' &&\n        'coordinates' in input &&\n        isGeojsonPointCoordinates(input.coordinates));\n}\nexport function isGeojsonLineString(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        'type' in input &&\n        input.type === 'LineString' &&\n        'coordinates' in input &&\n        isGeojsonLineStringCoordinates(input.coordinates));\n}\nexport function isGeojsonPolygon(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        'type' in input &&\n        input.type === 'Polygon' &&\n        'coordinates' in input &&\n        Array.isArray(input.coordinates) &&\n        isGeojsonPolygonCoordinates(input.coordinates));\n}\nexport function isGeojsonMultiPoint(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        'type' in input &&\n        input.type === 'MultiPoint' &&\n        'coordinates' in input &&\n        isGeojsonMultiPointCoordinates(input.coordinates));\n}\nexport function isGeojsonMultiLineString(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        'type' in input &&\n        input.type === 'MultiLineString' &&\n        'coordinates' in input &&\n        isGeojsonMultiLineStringCoordinates(input.coordinates));\n}\nexport function isGeojsonMultiPolygon(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        'type' in input &&\n        input.type === 'MultiPolygon' &&\n        'coordinates' in input &&\n        Array.isArray(input.coordinates) &&\n        isGeojsonMultiPolygonCoordinates(input.coordinates));\n}\nexport function isGeojsonGeometry(obj) {\n    const isObject = typeof obj === 'object' && obj !== null;\n    const hasStringType = isObject && 'type' in obj && typeof obj.type === 'string';\n    const isValidType = hasStringType &&\n        (obj.type === 'Point' ||\n            obj.type === 'LineString' ||\n            obj.type === 'Polygon' ||\n            obj.type === 'MultiPoint' ||\n            obj.type === 'MultiLineString' ||\n            obj.type === 'MultiPolygon');\n    const hasCoordinatesArray = isObject && 'coordinates' in obj && Array.isArray(obj.coordinates);\n    return isValidType && hasCoordinatesArray;\n}\nexport function isGeojsonMultiGeometry(obj) {\n    const isObject = typeof obj === 'object' && obj !== null;\n    const hasStringType = isObject && 'type' in obj && typeof obj.type === 'string';\n    const isValidType = hasStringType &&\n        (obj.type === 'MultiPoint' ||\n            obj.type === 'MultiLineString' ||\n            obj.type === 'MultiPolygon');\n    const hasCoordinatesArray = isObject && 'coordinates' in obj && Array.isArray(obj.coordinates);\n    return isValidType && hasCoordinatesArray;\n}\n// Convert to Geometry\n// Note: GeoJSON points can have more then two coordiantes\nfunction geojsonPointCoordinatesToPoint(geojsonPointCoordinates) {\n    return geojsonPointCoordinates.slice(0, 2);\n}\nexport function geojsonPointToPoint(geojsonPoint) {\n    return geojsonPointCoordinatesToPoint(geojsonPoint.coordinates);\n}\nexport function geojsonLineStringToLineString(geojsonLineString) {\n    return conformLineString(geojsonLineString.coordinates.map(geojsonPointCoordinatesToPoint));\n}\nexport function geojsonPolygonToRing(geojsonPolygon, close = false) {\n    const outerRing = conformRing(geojsonPolygon.coordinates[0].map(geojsonPointCoordinatesToPoint));\n    return close ? [...outerRing, outerRing[0]] : outerRing;\n}\nexport function geojsonPolygonToPolygon(geojsonPolygon, close = false) {\n    const polygon = conformPolygon(geojsonPolygon.coordinates.map((ring) => ring.map(geojsonPointCoordinatesToPoint)));\n    return close ? polygon.map((ring) => [...ring, ring[0]]) : polygon;\n}\nexport function geojsonMultiPointToMultiPoint(geojsonMultiPoint) {\n    return geojsonMultiPoint.coordinates.map(geojsonPointCoordinatesToPoint);\n}\nexport function geojsonMultiLineStringToMultiLineString(geojsonMultiLineString) {\n    return conformMultiLineString(geojsonMultiLineString.coordinates.map((l) => l.map(geojsonPointCoordinatesToPoint)));\n}\nexport function geojsonMultiPolygonToMultiPolygon(geojsonMultiPolygon, close = false) {\n    const multipolygon = conformMultiPolygon(geojsonMultiPolygon.coordinates.map((p) => p.map((l) => l.map(geojsonPointCoordinatesToPoint))));\n    return close\n        ? multipolygon.map((polygon) => polygon.map((ring) => [...ring, ring[0]]))\n        : multipolygon;\n}\n/**\n * Converts a GeoJSON Geometry to a Geometry\n * @param geojsonGeometry - GeoJSON Geometry\n * @returns Geometry\n */\nexport function geojsonGeometryToGeometry(geojsonGeometry) {\n    if (isGeojsonPoint(geojsonGeometry)) {\n        return geojsonPointToPoint(geojsonGeometry);\n    }\n    else if (isGeojsonLineString(geojsonGeometry)) {\n        return geojsonLineStringToLineString(geojsonGeometry);\n    }\n    else if (isGeojsonPolygon(geojsonGeometry)) {\n        return geojsonPolygonToPolygon(geojsonGeometry);\n    }\n    else if (isGeojsonMultiPoint(geojsonGeometry)) {\n        return geojsonMultiPointToMultiPoint(geojsonGeometry);\n    }\n    else if (isGeojsonMultiLineString(geojsonGeometry)) {\n        return geojsonMultiLineStringToMultiLineString(geojsonGeometry);\n    }\n    else if (isGeojsonMultiPolygon(geojsonGeometry)) {\n        return geojsonMultiPolygonToMultiPolygon(geojsonGeometry);\n    }\n    else {\n        throw new Error('Geometry type not supported');\n    }\n}\n// Convert to SVG\nexport function geojsonGeometryToSvgGeometry(geojsonGeometry) {\n    return geometryToSvgGeometry(geojsonGeometryToGeometry(geojsonGeometry));\n}\n// Wrap Geometry in Feature\nexport function geojsonGeometryToGeojsonFeature(geojsonGeometry, properties) {\n    return {\n        type: 'Feature',\n        properties: properties ? properties : {},\n        geometry: geojsonGeometry\n    };\n}\nexport function geojsonFeaturesToGeojsonFeatureCollection(geojsonFeatures) {\n    if (!Array.isArray(geojsonFeatures)) {\n        geojsonFeatures = [geojsonFeatures];\n    }\n    return {\n        type: 'FeatureCollection',\n        features: geojsonFeatures\n    };\n}\nexport function geojsonGeometriesToGeojsonFeatureCollection(geojsonGeometries, properties) {\n    return {\n        type: 'FeatureCollection',\n        features: geojsonGeometries.map((geometry, i) => properties\n            ? geojsonGeometryToGeojsonFeature(geometry, properties[i])\n            : geojsonGeometryToGeojsonFeature(geometry))\n    };\n}\nexport function geojsonFeatureToGeojsonGeometry(geojsonFeature) {\n    return geojsonFeature.geometry;\n}\nexport function geojsonFeatureCollectionToGeojsonGeometries(geojsonFeatureCollection) {\n    return geojsonFeatureCollection.features.map(geojsonFeatureToGeojsonGeometry);\n}\n// Expand\nexport function expandGeojsonMultiPointToGeojsonPoints(geojsonMultiPoint) {\n    return geojsonMultiPoint.coordinates.map((point) => {\n        return {\n            type: 'Point',\n            coordinates: point\n        };\n    });\n}\nexport function expandGeojsonMultiLineStringToGeojsonLineStrings(geojsonMultiLineString) {\n    return geojsonMultiLineString.coordinates.map((lineString) => {\n        return {\n            type: 'LineString',\n            coordinates: lineString\n        };\n    });\n}\nexport function expandGeojsonMultiPolygonToGeojsonPolygons(geojsonMultiPolygon) {\n    return geojsonMultiPolygon.coordinates.map((polygon) => {\n        return {\n            type: 'Polygon',\n            coordinates: polygon\n        };\n    });\n}\nexport function expandGeojsonMultiGeometryToGeojsonGeometries(geojsonMultiGeometry) {\n    if (isGeojsonMultiPoint(geojsonMultiGeometry)) {\n        return expandGeojsonMultiPointToGeojsonPoints(geojsonMultiGeometry);\n    }\n    else if (isGeojsonMultiLineString(geojsonMultiGeometry)) {\n        return expandGeojsonMultiLineStringToGeojsonLineStrings(geojsonMultiGeometry);\n    }\n    else if (isGeojsonMultiPolygon(geojsonMultiGeometry)) {\n        return expandGeojsonMultiPolygonToGeojsonPolygons(geojsonMultiGeometry);\n    }\n    else {\n        throw new Error('Geometry type not supported');\n    }\n}\n// Contract\nexport function contractGeojsonPointsToGeojsonMultiPoint(geojsonPoints) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geojsonPoints.map((geojsonPoint) => geojsonPoint.coordinates)\n    };\n}\nexport function contractGeojsonLineStringsToGeojsonMultiLineString(geojsonLineStrings) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geojsonLineStrings.map((geojsonLineString) => geojsonLineString.coordinates)\n    };\n}\nexport function contractGeojsonPolygonsToGeojsonMultiPolygon(geojsonPolygons) {\n    return {\n        type: 'MultiPolygon',\n        coordinates: geojsonPolygons.map((geojsonPolygon) => geojsonPolygon.coordinates)\n    };\n}\nexport function contractGeojsonGeometriesToGeojsonMultiGeometry(geojsonGeometries) {\n    if (geojsonGeometries.every(isGeojsonPoint)) {\n        return contractGeojsonPointsToGeojsonMultiPoint(geojsonGeometries);\n    }\n    else if (geojsonGeometries.every(isGeojsonLineString)) {\n        return contractGeojsonLineStringsToGeojsonMultiLineString(geojsonGeometries);\n    }\n    else if (geojsonGeometries.every(isGeojsonPolygon)) {\n        return contractGeojsonPolygonsToGeojsonMultiPolygon(geojsonGeometries);\n    }\n    else {\n        throw new Error('Geometry type not supported');\n    }\n}\nexport function mergeGeojsonFeaturesCollections(geojsonFeatureCollections) {\n    return {\n        type: 'FeatureCollection',\n        features: geojsonFeatureCollections\n            .map((geojsonFeatureCollection) => geojsonFeatureCollection.features)\n            .flat(1)\n    };\n}\n", "import monotoneChainConvexHull from 'monotone-chain-convex-hull';\nimport { isGeojsonGeometry, geojsonGeometryToGeometry } from './geojson.js';\nimport { isPoint, isPolygon, isMultiPolygon, distance } from './geometry.js';\n// Compute\nexport function computeMinMax(values) {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    for (const value of values) {\n        if (min === undefined) {\n            if (value >= value)\n                min = max = value;\n        }\n        else {\n            if (min > value)\n                min = value;\n            if (max < value)\n                max = value;\n        }\n    }\n    return [min, max];\n}\n// Note: bbox order is minX, minY, maxX, maxY\nexport function computeBbox(points) {\n    if (isPoint(points)) {\n        points = [points];\n    }\n    if (isPolygon(points)) {\n        points = points.flat();\n    }\n    if (isMultiPolygon(points)) {\n        points = points.flat();\n    }\n    if (isGeojsonGeometry(points)) {\n        return computeBbox(geojsonGeometryToGeometry(points));\n    }\n    // TODO: do this without making two new arrays\n    const xs = [];\n    const ys = [];\n    for (const point of points) {\n        xs.push(point[0]);\n        ys.push(point[1]);\n    }\n    const [minX, maxX] = computeMinMax(xs);\n    const [minY, maxY] = computeMinMax(ys);\n    return [minX, minY, maxX, maxY];\n}\nexport function combineBboxes(...bboxes) {\n    if (bboxes.length === 0) {\n        return undefined;\n    }\n    return [\n        Math.min(...bboxes.map((bbox) => bbox[0])),\n        Math.min(...bboxes.map((bbox) => bbox[1])),\n        Math.max(...bboxes.map((bbox) => bbox[2])),\n        Math.max(...bboxes.map((bbox) => bbox[3]))\n    ];\n}\nexport function doBboxesIntersect(bbox0, bbox1) {\n    const isOverlappingInX = bbox0[2] >= bbox1[0] && bbox1[2] >= bbox0[0];\n    const isOverlappingInY = bbox0[3] >= bbox1[1] && bbox1[3] >= bbox0[1];\n    return isOverlappingInX && isOverlappingInY;\n}\nexport function intersectBboxes(bbox0, bbox1) {\n    const minX = Math.max(bbox0[0], bbox1[0]);\n    const maxX = Math.min(bbox0[2], bbox1[2]);\n    const minY = Math.max(bbox0[1], bbox1[1]);\n    const maxY = Math.min(bbox0[3], bbox1[3]);\n    if (minX < maxX && minY < maxY) {\n        return [minX, minY, maxX, maxY];\n    }\n    else {\n        return undefined;\n    }\n}\nexport function pointInBbox(point, bbox) {\n    return doBboxesIntersect([point[0], point[1], point[0], point[1]], bbox);\n}\nexport function bufferBbox(bbox, dist0, dist1) {\n    if (dist1 === undefined) {\n        dist1 = dist0;\n    }\n    return [bbox[0] - dist0, bbox[1] - dist1, bbox[2] + dist0, bbox[3] + dist1];\n}\n// Ratio 2 adds half the current width (or height) both left and right of the current (width or height)\n// so the total width (or height) goes * 2 and the total surface goes * 4\nexport function bufferBboxByRatio(bbox, ratio) {\n    if (ratio === 0) {\n        return bbox;\n    }\n    const size = bboxToSize(bbox);\n    return bufferBbox(bbox, ...size.map((widthOrHeigth) => (widthOrHeigth * ratio) / 2));\n}\n// Transform\n// Returns a rectangle with four points, starting from lower left and going anti-clockwise.\nexport function bboxToRectangle(bbox) {\n    return [\n        [bbox[0], bbox[1]],\n        [bbox[2], bbox[1]],\n        [bbox[2], bbox[3]],\n        [bbox[0], bbox[3]]\n    ];\n}\nexport function bboxToPolygon(bbox) {\n    return [bboxToRectangle(bbox)];\n}\nexport function bboxToLine(bbox) {\n    return [\n        [bbox[0], bbox[1]],\n        [bbox[2], bbox[3]]\n    ];\n}\nexport function bboxToDiameter(bbox) {\n    return distance(bboxToLine(bbox));\n}\nexport function geometryToDiameter(geometry) {\n    return distance(bboxToLine(computeBbox(geometry)));\n}\nexport function bboxToCenter(bbox) {\n    return [(bbox[0] + bbox[2]) / 2, (bbox[1] + bbox[3]) / 2];\n}\nexport function bboxToSize(bbox) {\n    return [bbox[2] - bbox[0], bbox[3] - bbox[1]];\n}\nexport function bboxToResolution(bbox) {\n    return sizeToResolution(bboxToSize(bbox));\n}\n// Approximate results for quadrilaterals, exact for rectangles (e.g. coming from bboxes).\n// A more precise result would require a minimal-covering-rectangle algorithm\n// Or computing and comparing rectangle surfaces\nexport function rectangleToSize(rectangle) {\n    return [\n        0.5 *\n            (distance(rectangle[0], rectangle[1]) +\n                distance(rectangle[2], rectangle[3])),\n        0.5 *\n            (distance(rectangle[1], rectangle[2]) +\n                distance(rectangle[3], rectangle[0]))\n    ];\n}\n// Convex hull\nexport function convexHull(points) {\n    if (points.length === 0) {\n        return undefined;\n    }\n    return monotoneChainConvexHull(points);\n}\n// Sizes and Scales\n/**\n * Compute a size from two scales\n *\n * For unspecified 'fit', the scale is computed based on the surface area derived from the sizes.\n *\n * For specified 'fit':\n *\n * Example for square rectangles '*' and '+':\n *\n * 'contain' where '*' contains '.'\n * (in the first image size0 is relatively wider)\n *\n *                ****\n *                *  *\n *   **....**     ....\n *   * .  . *     .  .\n *   **....**     ....\n *                *  *\n *                ****\n *\n *\n * 'cover' where '*' is covered by '.'\n * (in the first image size0 is relatively wider)\n *\n *                ....\n *                .  .\n *   ..****..     ****\n *   . *  * .     *  *\n *   ..****..     ****\n *                .  .\n *                ....\n *\n * @export\n * @param size0 - first size\n * @param size1 - second size\n * @param fit - fit\n */\nexport function sizesToScale(size0, size1, fit) {\n    if (!fit) {\n        return Math.sqrt((size0[0] * size0[1]) / (size1[0] * size1[1]));\n    }\n    else if (fit === 'contain') {\n        return size0[0] / size0[1] >= size1[0] / size1[1] // size0 is relatively wider\n            ? size0[0] / size1[0]\n            : size0[1] / size1[1];\n    }\n    else {\n        // fit = 'cover'\n        return size0[0] / size0[1] >= size1[0] / size1[1] // size0 is relatively wider\n            ? size0[1] / size1[1]\n            : size0[0] / size1[0];\n    }\n}\nexport function scaleSize(size, scale) {\n    return [size[0] * scale, size[1] * scale];\n}\nexport function sizeToResolution(size) {\n    return size[0] * size[1];\n}\nexport function sizeToCenter(size) {\n    return [size[0] / 2, size[1] / 2];\n}\nexport function sizeToBbox(size) {\n    return [0, 0, ...size];\n}\nexport function sizeToRectangle(size) {\n    return bboxToRectangle(sizeToBbox(size));\n}\nexport function bboxesToScale(bbox0, bbox1) {\n    return sizesToScale(bboxToSize(bbox0), bboxToSize(bbox1));\n}\nexport function rectanglesToScale(rectangle0, rectangle1) {\n    return sizesToScale(rectangleToSize(rectangle0), rectangleToSize(rectangle1));\n}\n", "export function getPropertyFromCacheOrComputation(cache, key, computation, checkUse = () => true, checkStore = () => true) {\n    if (cache.has(key) && checkUse(cache.get(key))) {\n        return cache.get(key);\n    }\n    else {\n        const result = computation();\n        if (checkStore(result)) {\n            cache.set(key, result);\n        }\n        return result;\n    }\n}\nexport function getPropertyFromDoubleCacheOrComputation(cache, key0, key1, computation, checkUse = () => true, checkStore = () => true) {\n    if (cache.get(key0)?.has(key1) && checkUse(cache.get(key0)?.get(key1))) {\n        return cache.get(key0)?.get(key1);\n    }\n    else {\n        const result = computation();\n        if (checkStore(result)) {\n            if (!cache.get(key0)) {\n                cache.set(key0, new Map());\n            }\n            cache.get(key0)?.set(key1, result);\n        }\n        return result;\n    }\n}\nexport function getPropertyFromTripleCacheOrComputation(cache, key0, key1, key2, computation, checkUse = () => true, checkStore = () => true) {\n    if (cache.get(key0)?.get(key1)?.has(key2) &&\n        checkUse(cache.get(key0)?.get(key1)?.get(key2))) {\n        return cache.get(key0)?.get(key1)?.get(key2);\n    }\n    else {\n        const result = computation();\n        if (checkStore(result)) {\n            if (!cache.get(key0)) {\n                cache.set(key0, new Map());\n            }\n            if (!cache.get(key0)?.get(key1)) {\n                cache.get(key0)?.set(key1, new Map());\n            }\n            cache.get(key0)?.get(key1)?.set(key2, result);\n        }\n        return result;\n    }\n}\n", "const hexCharacters = 'a-f\\\\d';\nconst match3or4Hex = `#?[${hexCharacters}]{3}[${hexCharacters}]?`;\nconst match6or8Hex = `#?[${hexCharacters}]{6}([${hexCharacters}]{2})?`;\nconst nonHexChars = new RegExp(`[^#${hexCharacters}]`, 'gi');\nconst validHexSize = new RegExp(`^${match3or4Hex}$|^${match6or8Hex}$`, 'i');\n\nexport default function hexRgb(hex, options = {}) {\n\tif (typeof hex !== 'string' || nonHexChars.test(hex) || !validHexSize.test(hex)) {\n\t\tthrow new TypeError('Expected a valid hex string');\n\t}\n\n\thex = hex.replace(/^#/, '');\n\tlet alphaFromHex = 1;\n\n\tif (hex.length === 8) {\n\t\talphaFromHex = Number.parseInt(hex.slice(6, 8), 16) / 255;\n\t\thex = hex.slice(0, 6);\n\t}\n\n\tif (hex.length === 4) {\n\t\talphaFromHex = Number.parseInt(hex.slice(3, 4).repeat(2), 16) / 255;\n\t\thex = hex.slice(0, 3);\n\t}\n\n\tif (hex.length === 3) {\n\t\thex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n\t}\n\n\tconst number = Number.parseInt(hex, 16);\n\tconst red = number >> 16;\n\tconst green = (number >> 8) & 255;\n\tconst blue = number & 255;\n\tconst alpha = typeof options.alpha === 'number' ? options.alpha : alphaFromHex;\n\n\tif (options.format === 'array') {\n\t\treturn [red, green, blue, alpha];\n\t}\n\n\tif (options.format === 'css') {\n\t\tconst alphaString = alpha === 1 ? '' : ` / ${Number((alpha * 100).toFixed(2))}%`;\n\t\treturn `rgb(${red} ${green} ${blue}${alphaString})`;\n\t}\n\n\treturn {red, green, blue, alpha};\n}\n", "// TODO: Remove this ignore comment.\n// eslint-disable-next-line no-mixed-operators\nconst toHex = (red, green, blue, alpha) => ((blue | green << 8 | red << 16) | 1 << 24).toString(16).slice(1) + alpha;\n\nexport default function rgbHex(red, green, blue, alpha) {\n\tlet isPercent = (red + (alpha || '')).toString().includes('%');\n\n\tif (typeof red === 'string' && !green) { // Single string parameter.\n\t\tconst parsed = parseCssRgbString(red);\n\t\tif (!parsed) {\n\t\t\tthrow new TypeError('Invalid or unsupported color format.');\n\t\t}\n\n\t\tisPercent = false;\n\t\t[red, green, blue, alpha] = parsed;\n\t} else if (alpha !== undefined) {\n\t\talpha = Number.parseFloat(alpha);\n\t}\n\n\tif (typeof red !== 'number' ||\n\t\ttypeof green !== 'number' ||\n\t\ttypeof blue !== 'number' ||\n\t\tred > 255 ||\n\t\tgreen > 255 ||\n\t\tblue > 255\n\t) {\n\t\tthrow new TypeError('Expected three numbers below 256');\n\t}\n\n\tif (typeof alpha === 'number') {\n\t\tif (!isPercent && alpha >= 0 && alpha <= 1) {\n\t\t\talpha = Math.round(255 * alpha);\n\t\t} else if (isPercent && alpha >= 0 && alpha <= 100) {\n\t\t\talpha = Math.round(255 * alpha / 100);\n\t\t} else {\n\t\t\tthrow new TypeError(`Expected alpha value (${alpha}) as a fraction or percentage`);\n\t\t}\n\n\t\talpha = (alpha | 1 << 8).toString(16).slice(1); // eslint-disable-line no-mixed-operators\n\t} else {\n\t\talpha = '';\n\t}\n\n\treturn toHex(red, green, blue, alpha);\n}\n\nconst parseCssRgbString = input => {\n\tconst parts = input.replace(/rgba?\\(([^)]+)\\)/, '$1').split(/[,\\s/]+/).filter(Boolean);\n\tif (parts.length < 3) {\n\t\treturn;\n\t}\n\n\tconst parseValue = (value, max) => {\n\t\tvalue = value.trim();\n\n\t\tif (value.endsWith('%')) {\n\t\t\treturn Math.min(Number.parseFloat(value) * max / 100, max);\n\t\t}\n\n\t\treturn Math.min(Number.parseFloat(value), max);\n\t};\n\n\tconst red = parseValue(parts[0], 255);\n\tconst green = parseValue(parts[1], 255);\n\tconst blue = parseValue(parts[2], 255);\n\tlet alpha;\n\n\tif (parts.length === 4) {\n\t\talpha = parseValue(parts[3], 1);\n\t}\n\n\treturn [red, green, blue, alpha];\n};\n", "import hexRgb from 'hex-rgb';\nimport rgbHex from 'rgb-hex';\n/**\n * Convert RBG to HEX\n * @param rgb - RGB color array, e.g. [0, 51, 255]\n * @returns HEX string, e.g. '#0033ff'\n */\nexport function rgbToHex(color) {\n    return '#' + rgbHex(...color);\n}\n/**\n * Convert RBGA to HEX\n * @param rgb - RGBA color array, e.g. [0, 51, 255, 255]\n * @returns HEX string, e.g. '#0033ffff'\n */\nexport function rgbaToHex(color) {\n    return '#' + rgbHex(...color);\n}\n/**\n * Convert HEX to RGB\n * @param hex - HEX string, e.g. '#0033ff'\n * @returns RGB, e.g. [0, 51, 255]\n */\nexport function hexToRgb(hex) {\n    return hexRgb(hex, { format: 'array' }).slice(0, 3);\n}\n/**\n * Convert HEX to RGB\n * @param hex - HEX string, e.g. '#0033ffff'\n * @returns RGB, e.g. [0, 51, 255, 255]\n */\nexport function hexToRgba(hex) {\n    const color = hexRgb(hex, { format: 'array' });\n    if (color.length < 4) {\n        color[3] = 255;\n    }\n    return color;\n}\n/**\n * Convert HEX to RGB, and sets the transparency to 255\n * @param hex - HEX string, e.g. '#0033ffcc'\n * @returns RGB, e.g. [0, 51, 255, 255]\n */\nexport function hexToOpaqueRgba(hex) {\n    const color = hexRgb(hex, { format: 'array' });\n    color[3] = 255;\n    return color;\n}\n/**\n * Convert hex to fractional RGB\n * @param hex - hex string, e.g. '#0033ff'\n * @returns Fractional RGB, e.g. [0, 0.2, 1]\n */\nexport function hexToFractionalRgb(hex) {\n    return hexToRgb(hex).map((c) => c / 255);\n}\n/**\n * Convert hex to fractional RGBA\n * @param hex - hex string, e.g. '#0033ffff'\n * @returns Fractional RGB, e.g. [0, 0.2, 1, 1]\n */\nexport function hexToFractionalRgba(hex) {\n    return hexToRgba(hex).map((c) => c / 255);\n}\n/**\n * Convert hex to fractional RGBA, and sets the transparency to 1\n * @param hex - hex string, e.g. '#0033ffcc'\n * @returns Fractional RGB, e.g. [0, 0.2, 1, 1]\n */\nexport function hexToFractionalOpaqueRgba(hex) {\n    return hexToOpaqueRgba(hex).map((c) => c / 255);\n}\n", "export function degreesToRadians(degrees) {\n    return degrees * (Math.PI / 180);\n}\n// Define vanilla groupBy function, since official one is only baseline 2024\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/groupBy\n// Vanilla code from https://stackoverflow.com/a/62765924/2386673\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function groupBy(arr, key) {\n    return arr.reduce((groups, item) => {\n        ;\n        (groups[key(item)] ||= []).push(item);\n        return groups;\n    }, {});\n}\n// Note: this checks equality of the object\n// which is only a good idea for primitive types (string, number), not JSON objects\nexport function isEqualArray(array0, array1, isEqualObject = (t0, t1) => t0 == t1) {\n    if (array0.length !== array1.length) {\n        return false;\n    }\n    for (let i = 0; i < array0.length; i++) {\n        if (!isEqualObject(array0[i], array1[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n// Returns objects in array0 that are not in array1\nexport function arrayDifference(array0, array1, isEqualObject = (t0, t1) => t0 == t1) {\n    const result = [];\n    for (let i = 0; i < array0.length; i++) {\n        let found = false;\n        for (let j = 0; j < array1.length; j++) {\n            if (isEqualObject(array0[i], array1[j])) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            result.push(array0[i]);\n        }\n    }\n    return result;\n}\nexport function arrayUnique(array, isEqualObject = (t0, t1) => t0 == t1) {\n    const result = [];\n    for (let i = 0; i < array.length; i++) {\n        let found = false;\n        for (let j = 0; j < i; j++) {\n            if (isEqualObject(array[i], array[j])) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            result.push(array[i]);\n        }\n    }\n    return result;\n}\nexport function arrayRepeated(array, isEqualObject = (t0, t1) => t0 == t1) {\n    const result = [];\n    for (let i = 0; i < array.length; i++) {\n        let found = false;\n        for (let j = 0; j < i; j++) {\n            if (isEqualObject(array[i], array[j])) {\n                found = true;\n                break;\n            }\n        }\n        if (found) {\n            result.push(array[i]);\n        }\n    }\n    return result;\n}\n// TODO: replace with Set subset once available\n// Note: this checks equality of the object\n// which is only a good idea for primitive types (string, number), not JSON objects\nexport function subSetArray(arr1, arr2) {\n    for (let i = 0; i < arr2.length; i++) {\n        if (arr1.indexOf(arr2[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n// TODO: Replace with Set equality once available\n// Note: this checks equality of the object\n// which is only a good idea for primitive types (string, number), not JSON objects\nexport function equalSet(set1, set2) {\n    if (!set1 || !set2) {\n        return false;\n    }\n    if (set1.size !== set2.size) {\n        return false;\n    }\n    return [...set1].every((x) => set2.has(x));\n}\nexport function maxOfNumberOrUndefined(number1, number2) {\n    if (number1 !== undefined && number2 !== undefined) {\n        return Math.max(number1, number2);\n    }\n    else if (number1 !== undefined) {\n        return number1;\n    }\n    else if (number2 !== undefined) {\n        return number2;\n    }\n}\nexport function isValidHttpUrl(string) {\n    let url;\n    try {\n        url = new URL(string);\n    }\n    catch (_) {\n        return false;\n    }\n    return url.protocol === 'http:' || url.protocol === 'https:';\n}\n", "// TODO: the fullResourceMask is available directly in WarpedMap class!\n// This also means this function can be removed from stdlib.\nexport function getFullResourceMask(imageWidth, imageHeight) {\n    return [\n        [0, 0],\n        [imageWidth, 0],\n        [imageWidth, imageHeight],\n        [0, imageHeight]\n    ];\n}\n", "import { isEqualArray } from './main.js';\n/**\n * Create and fill a ArrayMatrix: an Arrays of Arrays, that can later be loaded as a ml-matrix Matrix\n */\nexport function newArrayMatrix(rows, cols, value = 0) {\n    if (rows <= 0 || cols <= 0) {\n        throw new Error('Empty ArrayMatrix not supported');\n    }\n    return Array.from(Array(rows), (_) => Array(cols).fill(value));\n}\nexport function arrayMatrixSize(arrayMatrix) {\n    if (arrayMatrix.length === 0) {\n        throw new Error('ArrayMatrix may not be empty, but rows are empty');\n    }\n    const rowLengths = arrayMatrix.map((row) => row.length);\n    if (rowLengths.some((rowLength) => rowLength === 0)) {\n        throw new Error('ArrayMatrix may not be empty, but at least one row is empty');\n    }\n    if (!rowLengths.every((rowLength) => rowLength === rowLengths[0])) {\n        throw new Error('Rows of unequal length');\n    }\n    const rows = arrayMatrix.length;\n    const cols = rowLengths[0];\n    return [rows, cols];\n}\nexport function shallowCopyArrayMatrix(arrayMatrix) {\n    return arrayMatrix.map((row) => [...row]);\n}\n// Slice specific rows and columns of an arrayMatrix.\n// Just like slice, this returns a copy!\nexport function sliceArrayMatrix(arrayMatrix, rowsStart, colsStart, rowsEnd, colsEnd) {\n    return arrayMatrix\n        .slice(rowsStart, rowsEnd)\n        .map((row) => row.slice(colsStart, colsEnd));\n}\n// Get a submatrix at specified rows and columns.\n// This is more flexible the the range, like in sliceArrayMatrix.\nexport function subArrayMatrix(arrayMatrix, rows, cols) {\n    const size = [rows.length, cols.length];\n    const result = newArrayMatrix(...size);\n    for (let i = 0; i < size[0]; i++) {\n        for (let j = 0; j < size[1]; j++) {\n            result[i][j] = arrayMatrix[rows[i]][cols[j]];\n        }\n    }\n    return result;\n}\n// Pointwise multiplication. For Matrix multiplication, see ml-matrix\nexport function multiplyArrayMatrix(arrayMatrix, factor) {\n    const size = arrayMatrixSize(arrayMatrix);\n    const result = newArrayMatrix(...size);\n    for (let i = 0; i < size[0]; i++) {\n        for (let j = 0; j < size[1]; j++) {\n            result[i][j] = factor * arrayMatrix[i][j];\n        }\n    }\n    return result;\n}\n// Pastes a arrayMatrix inside an arrayMatrix at a specific location.\n// Returns a copy with the pasted subArray.\nexport function pasteArrayMatrix(arrayMatrix, rowsStart, colsStart, subArrayMatrix) {\n    const subSize = arrayMatrixSize(subArrayMatrix);\n    const result = shallowCopyArrayMatrix(arrayMatrix);\n    for (let i = 0; i < subSize[0]; i++) {\n        for (let j = 0; j < subSize[1]; j++) {\n            result[rowsStart + i][colsStart + j] = subArrayMatrix[i][j];\n        }\n    }\n    return result;\n}\nexport function transposeArrayMatrix(arrayMatrix) {\n    return arrayMatrix[0].map((_, colIndex) => arrayMatrix.map((row) => row[colIndex]));\n}\nexport function newBlockArrayMatrix(blocks, emptyValue = 0) {\n    const size = arrayMatrixSize(blocks);\n    const sizesArrayMatrix = blocks.map((row) => row.map((block) => arrayMatrixSize(block)));\n    const rowsArrayMatrix = sizesArrayMatrix.map((row) => row.map((dims) => dims[0]));\n    const transposedRowsArrayMatrix = transposeArrayMatrix(rowsArrayMatrix);\n    const rowsArray = transposedRowsArrayMatrix[0];\n    if (!transposedRowsArrayMatrix.every((array) => isEqualArray(array, transposedRowsArrayMatrix[0]))) {\n        throw new Error('The blocks, by block column, must have the same sequence of rows.');\n    }\n    const rowsTrailingCumulativeArray = [];\n    let sum = 0;\n    rowsArray.forEach((e) => {\n        rowsTrailingCumulativeArray.push(sum);\n        sum = sum + e;\n    });\n    const rowsCumulative = sum;\n    const colsArrayMatrix = sizesArrayMatrix.map((row) => row.map((dims) => dims[1]));\n    const colsArray = colsArrayMatrix[0];\n    if (!colsArrayMatrix.every((array) => isEqualArray(array, colsArray))) {\n        throw new Error('The blocks, by block row, must have the same sequence of columns.');\n    }\n    const colsTrailingCumulativeArray = [];\n    sum = 0;\n    colsArrayMatrix[0].forEach((e) => {\n        colsTrailingCumulativeArray.push(sum);\n        sum = sum + e;\n    });\n    const colsCumulative = sum;\n    let result = newArrayMatrix(rowsCumulative, colsCumulative, emptyValue);\n    for (let i = 0; i < size[0]; i++) {\n        for (let j = 0; j < size[1]; j++) {\n            result = pasteArrayMatrix(result, rowsTrailingCumulativeArray[i], rowsTrailingCumulativeArray[j], blocks[i][j]);\n        }\n    }\n    return result;\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nexport function mergeOptions(options0, options1) {\n    // In general options1 extends options0\n    // Using this over mergePartialOption() assures that the output type will be at least Option0\n    // This function serves two purposes:\n    // 1) Speedup: spreading is a little expensive, so it checks if necessary first\n    // (e.g. it was previously executed for every point in transform,\n    // where this was a 50% speed increase when transforming a lot of points\n    // 2) It allows option1 to be undefined, which simplifies handing over a simple spread\n    if (!options1) {\n        return options0;\n    }\n    return {\n        ...options0,\n        ...options1\n    };\n}\nexport function mergeOptionsUnlessUndefined(options0, options1) {\n    if (!options1) {\n        return options0;\n    }\n    // Only overwrite properties that are not undefined\n    for (const key in options1) {\n        const value = options1[key];\n        if (value !== undefined) {\n            ;\n            options0[key] = value;\n        }\n    }\n    return options0;\n}\n// // Saving this here, may be useful later\n// export function mergeOptionsDeep<\n//   Option0 extends Record<string, any>,\n//   Option1 extends Record<string, any>\n// >(option0: Option0, option1: Option1): Option0 & Option1 {\n//   // Create a new object to avoid mutating either input\n//   const output = { ...option0 } as Record<string, any>\n//   if (isObject(option0) && isObject(option1)) {\n//     Object.keys(option1).forEach((key) => {\n//       const sourceValue = option1[key as keyof Option1]\n//       if (isObject(sourceValue)) {\n//         // If both target and source have the same key and both are objects, recursively merge\n//         if (key in option0 && isObject(option0[key as keyof Option0])) {\n//           output[key] = mergeOptionsDeep(\n//             option0[key as keyof Option0] as Record<string, any>,\n//             sourceValue as Record<string, any>\n//           )\n//         } else {\n//           // Otherwise just clone the source object\n//           output[key] = { ...sourceValue }\n//         }\n//       } else {\n//         // For non-object values, simply copy from source\n//         output[key] = sourceValue\n//       }\n//     })\n//   }\n//   return output as Option0 & Option1\n// }\nexport function mergePartialOptions(...partialOptionsArray) {\n    const definedPartialOptionsArray = partialOptionsArray.filter((partialOptions) => partialOptions !== undefined && partialOptions !== null);\n    if (definedPartialOptionsArray.length === 0) {\n        return {};\n    }\n    else if (definedPartialOptionsArray.length === 1) {\n        return definedPartialOptionsArray[0];\n    }\n    else {\n        // This spreads out eacht of the partialOptions\n        return Object.assign({}, ...definedPartialOptionsArray);\n    }\n}\n", "function getLocator(source, options) {\n    if (options === void 0) { options = {}; }\n    var offsetLine = options.offsetLine || 0;\n    var offsetColumn = options.offsetColumn || 0;\n    var originalLines = source.split('\\n');\n    var start = 0;\n    var lineRanges = originalLines.map(function (line, i) {\n        var end = start + line.length + 1;\n        var range = { start: start, end: end, line: i };\n        start = end;\n        return range;\n    });\n    var i = 0;\n    function rangeContains(range, index) {\n        return range.start <= index && index < range.end;\n    }\n    function getLocation(range, index) {\n        return { line: offsetLine + range.line, column: offsetColumn + index - range.start, character: index };\n    }\n    function locate(search, startIndex) {\n        if (typeof search === 'string') {\n            search = source.indexOf(search, startIndex || 0);\n        }\n        var range = lineRanges[i];\n        var d = search >= range.end ? 1 : -1;\n        while (range) {\n            if (rangeContains(range, search))\n                return getLocation(range, search);\n            i += d;\n            range = lineRanges[i];\n        }\n    }\n    ;\n    return locate;\n}\nfunction locate(source, search, options) {\n    if (typeof options === 'number') {\n        throw new Error('locate takes a { startIndex, offsetLine, offsetColumn } object as the third argument');\n    }\n    return getLocator(source, options)(search, options && options.startIndex);\n}\n\nexport { getLocator, locate };", "import { locate } from 'locate-character';\n\nconst validNameCharacters = /[a-zA-Z0-9:_-]/;\nconst whitespace = /[\\s\\t\\r\\n]/;\nconst quotemark = /['\"]/;\n\nfunction repeat(str, i) {\n\tlet result = '';\n\twhile (i--) result += str;\n\treturn result;\n}\n\nexport function parse(source) {\n\tlet header = '';\n\tlet stack = [];\n\n\tlet state = metadata;\n\tlet currentElement = null;\n\tlet root = null;\n\n\tfunction error(message) {\n\t\tconst { line, column } = locate(source, i);\n\t\tconst before = source.slice(0, i);\n\t\tconst beforeLine = /(^|\\n).*$/.exec(before)[0].replace(/\\t/g, '  ');\n\t\tconst after = source.slice(i);\n\t\tconst afterLine = /.*(\\n|$)/.exec(after)[0];\n\n\t\tconst snippet = `${beforeLine}${afterLine}\\n${repeat(' ', beforeLine.length)}^`;\n\n\t\tthrow new Error(\n\t\t\t`${message} (${line}:${column}). If this is valid SVG, it's probably a bug in svg-parser. Please raise an issue at https://github.com/Rich-Harris/svg-parser/issues – thanks!\\n\\n${snippet}`\n\t\t);\n\t}\n\n\tfunction metadata() {\n\t\twhile ((i < source.length && source[i] !== '<') || !validNameCharacters.test(source[i + 1])) {\n\t\t\theader += source[i++];\n\t\t}\n\n\t\treturn neutral();\n\t}\n\n\tfunction neutral() {\n\t\tlet text = '';\n\t\twhile (i < source.length && source[i] !== '<') text += source[i++];\n\n\t\tif (/\\S/.test(text)) {\n\t\t\tcurrentElement.children.push({ type: 'text', value: text });\n\t\t}\n\n\t\tif (source[i] === '<') {\n\t\t\treturn tag;\n\t\t}\n\n\t\treturn neutral;\n\t}\n\n\tfunction tag() {\n\t\tconst char = source[i];\n\n\t\tif (char === '?') return neutral; // <?xml...\n\n\t\tif (char === '!') {\n\t\t\tif (source.slice(i + 1, i + 3) === '--') return comment;\n\t\t\tif (source.slice(i + 1, i + 8) === '[CDATA[') return cdata;\n\t\t\tif (/doctype/i.test(source.slice(i + 1, i + 8))) return neutral;\n\t\t}\n\n\t\tif (char === '/') return closingTag;\n\n\t\tconst tagName = getName();\n\n\t\tconst element = {\n\t\t\ttype: 'element',\n\t\t\ttagName,\n\t\t\tproperties: {},\n\t\t\tchildren: []\n\t\t};\n\n\t\tif (currentElement) {\n\t\t\tcurrentElement.children.push(element);\n\t\t} else {\n\t\t\troot = element;\n\t\t}\n\n\t\tlet attribute;\n\t\twhile (i < source.length && (attribute = getAttribute())) {\n\t\t\telement.properties[attribute.name] = attribute.value;\n\t\t}\n\n\t\tlet selfClosing = false;\n\n\t\tif (source[i] === '/') {\n\t\t\ti += 1;\n\t\t\tselfClosing = true;\n\t\t}\n\n\t\tif (source[i] !== '>') {\n\t\t\terror('Expected >');\n\t\t}\n\n\t\tif (!selfClosing) {\n\t\t\tcurrentElement = element;\n\t\t\tstack.push(element);\n\t\t}\n\n\t\treturn neutral;\n\t}\n\n\tfunction comment() {\n\t\tconst index = source.indexOf('-->', i);\n\t\tif (!~index) error('expected -->');\n\n\t\ti = index + 2;\n\t\treturn neutral;\n\t}\n\n\tfunction cdata() {\n\t\tconst index = source.indexOf(']]>', i);\n\t\tif (!~index) error('expected ]]>');\n\n\t\tcurrentElement.children.push(source.slice(i + 7, index));\n\n\t\ti = index + 2;\n\t\treturn neutral;\n\t}\n\n\tfunction closingTag() {\n\t\tconst tagName = getName();\n\n\t\tif (!tagName) error('Expected tag name');\n\n\t\tif (tagName !== currentElement.tagName) {\n\t\t\terror(`Expected closing tag </${tagName}> to match opening tag <${currentElement.tagName}>`);\n\t\t}\n\n\t\tallowSpaces();\n\n\t\tif (source[i] !== '>') {\n\t\t\terror('Expected >');\n\t\t}\n\n\t\tstack.pop();\n\t\tcurrentElement = stack[stack.length - 1];\n\n\t\treturn neutral;\n\t}\n\n\tfunction getName() {\n\t\tlet name = '';\n\t\twhile (i < source.length && validNameCharacters.test(source[i])) name += source[i++];\n\n\t\treturn name;\n\t}\n\n\tfunction getAttribute() {\n\t\tif (!whitespace.test(source[i])) return null;\n\t\tallowSpaces();\n\n\t\tconst name = getName();\n\t\tif (!name) return null;\n\n\t\tlet value = true;\n\n\t\tallowSpaces();\n\t\tif (source[i] === '=') {\n\t\t\ti += 1;\n\t\t\tallowSpaces();\n\n\t\t\tvalue = getAttributeValue();\n\t\t\tif (!isNaN(value) && value.trim() !== '') value = +value; // TODO whitelist numeric attributes?\n\t\t}\n\n\t\treturn { name, value };\n\t}\n\n\tfunction getAttributeValue() {\n\t\treturn quotemark.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n\t}\n\n\tfunction getUnquotedAttributeValue() {\n\t\tlet value = '';\n\t\tdo {\n\t\t\tconst char = source[i];\n\t\t\tif (char === ' ' || char === '>' || char === '/') {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvalue += char;\n\t\t\ti += 1;\n\t\t} while (i < source.length);\n\n\t\treturn value;\n\t}\n\n\tfunction getQuotedAttributeValue() {\n\t\tconst quotemark = source[i++];\n\n\t\tlet value = '';\n\t\tlet escaped = false;\n\n\t\twhile (i < source.length) {\n\t\t\tconst char = source[i++];\n\t\t\tif (char === quotemark && !escaped) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif (char === '\\\\' && !escaped) {\n\t\t\t\tescaped = true;\n\t\t\t}\n\n\t\t\tvalue += escaped ? `\\\\${char}` : char;\n\t\t\tescaped = false;\n\t\t}\n\t}\n\n\tfunction allowSpaces() {\n\t\twhile (i < source.length && whitespace.test(source[i])) i += 1;\n\t}\n\n\tlet i = metadata.length;\n\twhile (i < source.length) {\n\t\tif (!state) error('Unexpected character');\n\t\tstate = state();\n\t\ti += 1;\n\t}\n\n\tif (state !== neutral) {\n\t\terror('Unexpected end of input');\n\t}\n\n\tif (root.tagName === 'svg') root.metadata = header;\n\treturn {\n\t\ttype: 'root',\n\t\tchildren: [root]\n\t};\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { parse } from 'svg-parser';\n// Assert\nexport function isSvgCircle(input) {\n    return input.type === 'circle';\n}\nexport function isSvgLine(input) {\n    return input.type === 'line';\n}\nexport function isSvgPolyLine(input) {\n    return input.type === 'polyline';\n}\nexport function isSvgRect(input) {\n    return input.type === 'rect';\n}\nexport function isSvgPolygon(input) {\n    return input.type === 'polygon';\n}\n// Read from string\nexport function* stringToSvgGeometriesGenerator(svg) {\n    function* helper(node) {\n        if ('children' in node) {\n            for (const childNode of node.children) {\n                if (typeof childNode !== 'string') {\n                    yield* helper(childNode);\n                }\n            }\n        }\n        yield node;\n    }\n    const parsedSvg = parse(svg);\n    for (const node of helper(parsedSvg)) {\n        if ('tagName' in node) {\n            if (node.tagName !== 'svg' && node.tagName !== 'g') {\n                const geometry = getNodeSvgGeometry(node);\n                if (geometry) {\n                    yield geometry;\n                }\n            }\n        }\n    }\n}\nfunction getNodeSvgGeometry(node) {\n    const tag = node?.tagName?.toLowerCase();\n    if (tag === 'circle') {\n        return {\n            type: 'circle',\n            coordinates: [\n                getNodeNumberProperty(node, 'cx'),\n                getNodeNumberProperty(node, 'cy')\n            ]\n        };\n    }\n    else if (tag === 'line') {\n        return {\n            type: 'line',\n            coordinates: [\n                [getNodeNumberProperty(node, 'x1'), getNodeNumberProperty(node, 'y1')],\n                [getNodeNumberProperty(node, 'x2'), getNodeNumberProperty(node, 'y2')]\n            ]\n        };\n    }\n    else if (tag === 'polyline') {\n        return {\n            type: 'polyline',\n            coordinates: getNodePoints(node)\n        };\n    }\n    else if (tag === 'polygon') {\n        return {\n            type: 'polygon',\n            coordinates: getNodePoints(node)\n        };\n    }\n    else if (tag === 'rect') {\n        return {\n            type: 'rect',\n            coordinates: [\n                [getNodeNumberProperty(node, 'x'), getNodeNumberProperty(node, 'y')],\n                [\n                    getNodeNumberProperty(node, 'x') +\n                        getNodeNumberProperty(node, 'width'),\n                    getNodeNumberProperty(node, 'y')\n                ],\n                [\n                    getNodeNumberProperty(node, 'x') +\n                        getNodeNumberProperty(node, 'width'),\n                    getNodeNumberProperty(node, 'y') +\n                        getNodeNumberProperty(node, 'height')\n                ],\n                [\n                    getNodeNumberProperty(node, 'x'),\n                    getNodeNumberProperty(node, 'y') +\n                        getNodeNumberProperty(node, 'height')\n                ],\n                [getNodeNumberProperty(node, 'x'), getNodeNumberProperty(node, 'y')]\n            ]\n        };\n    }\n    else {\n        throw new Error(`Unsupported SVG element: ${tag}`);\n    }\n}\nfunction getNodeNumberProperty(node, prop) {\n    const value = node?.properties?.[prop];\n    return Number(value) || 0;\n}\nfunction getNodePoints(node) {\n    const points = node?.properties?.points;\n    if (points) {\n        return String(points)\n            .trim()\n            .split(/\\s+/)\n            .map((coordStr) => {\n            const coord = coordStr.split(',').map((numberStr) => Number(numberStr));\n            return [coord[0], coord[1]];\n        });\n    }\n    return [];\n}\nfunction pointsToString(coordinates) {\n    return coordinates.map((coordinate) => coordinate.join(',')).join(' ');\n}\n// Convert to String\nexport function svgGeometriesToSvgString(geometries) {\n    return `<svg xmlns=\"http://www.w3.org/2000/svg\">\n  ${geometries.map(svgGeometryToString).join('\\n')}\n</svg>`;\n}\nexport function svgGeometryToString(geometry) {\n    if (geometry.type === 'circle') {\n        return elementToString('circle', {\n            ...geometry.attributes,\n            cx: geometry.coordinates[0],\n            cy: geometry.coordinates[1]\n        });\n    }\n    else if (geometry.type === 'line') {\n        return elementToString('line', {\n            ...geometry.attributes,\n            x1: geometry.coordinates[0][0],\n            y1: geometry.coordinates[0][1],\n            x2: geometry.coordinates[1][0],\n            y2: geometry.coordinates[1][1]\n        });\n    }\n    else if (geometry.type === 'polyline') {\n        return elementToString('polyline', {\n            ...geometry.attributes,\n            points: pointsToString(geometry.coordinates)\n        });\n    }\n    else if (geometry.type === 'polygon') {\n        return elementToString('polygon', {\n            ...geometry.attributes,\n            points: pointsToString(geometry.coordinates)\n        });\n    }\n    else if (geometry.type === 'rect') {\n        return elementToString('rect', {\n            ...geometry.attributes,\n            x: geometry.coordinates[0][0],\n            y: geometry.coordinates[0][1],\n            width: geometry.coordinates[1][0] - geometry.coordinates[0][0],\n            height: geometry.coordinates[2][1] - geometry.coordinates[0][1]\n        });\n    }\n    else {\n        throw new Error('Unknown SVG element');\n    }\n}\nfunction elementToString(tag, attributes) {\n    const attributeStrings = Object.entries(attributes).map(([key, value]) => `${key}=\"${value}\"`);\n    return `<${tag} ${attributeStrings.join(' ')} />`;\n}\nexport function mapToResourceMaskSvgPolygon(map) {\n    return {\n        type: 'polygon',\n        attributes: {\n            'data-image-id': encodeURIComponent(map.resource.id)\n        },\n        coordinates: map.resourceMask\n    };\n}\n/**\n * Convert a SVG Geometry to Geometry\n *\n * Note: Multi-geometries are not supported\n *\n * @param svgGeometry - SVG Geometry\n * @returns Geometry\n */\nexport function svgGeometryToGeometry(svgGeometry) {\n    if (isSvgCircle(svgGeometry)) {\n        return svgGeometry.coordinates;\n    }\n    else if (isSvgLine(svgGeometry)) {\n        return svgGeometry.coordinates;\n    }\n    else if (isSvgPolyLine(svgGeometry)) {\n        return svgGeometry.coordinates;\n    }\n    else if (isSvgRect(svgGeometry)) {\n        return [svgGeometry.coordinates];\n    }\n    else if (isSvgPolygon(svgGeometry)) {\n        return [svgGeometry.coordinates];\n    }\n    else {\n        throw new Error(`Unsupported SVG geometry`);\n    }\n}\n", "import { conformPolygon, isEqualPoint } from './geometry.js';\nimport { arrayDifference, arrayUnique } from './main.js';\nconst EPSILON = 0;\n// Find self-intersections in ring\n// From https://github.com/mclaeysb/geojson-polygon-self-intersections\nexport function polygonSelfIntersectionPoints(polygon, options) {\n    const intersectionPoints = [];\n    polygon = conformPolygon(polygon);\n    polygon = polygon.map((ring) => [...ring, ring[0]]);\n    for (let ringIndex0 = 0; ringIndex0 < polygon.length; ringIndex0++) {\n        for (let lineIndex0 = 0; lineIndex0 < polygon[ringIndex0].length - 1; lineIndex0++) {\n            for (let ringIndex1 = ringIndex0; ringIndex1 < polygon.length; ringIndex1++) {\n                for (let lineIndex1 = lineIndex0 + 1; lineIndex1 < polygon[ringIndex1].length - 1; lineIndex1++) {\n                    const line0 = [\n                        polygon[ringIndex0][lineIndex0],\n                        polygon[ringIndex0][lineIndex0 + 1]\n                    ];\n                    const line1 = [\n                        polygon[ringIndex1][lineIndex1],\n                        polygon[ringIndex1][lineIndex1 + 1]\n                    ];\n                    const intersectionPoint = linesIntersectionPoint(line0, line1, options);\n                    if (intersectionPoint) {\n                        intersectionPoints.push(intersectionPoint);\n                    }\n                }\n            }\n        }\n    }\n    const selfIntersectionPoints = arrayDifference(intersectionPoints, polygon.flat(), isEqualPoint);\n    return arrayUnique(selfIntersectionPoints, isEqualPoint);\n}\nexport function linesIntersectionPoint(line0, line1, options) {\n    options = {\n        reportVertexOnVertex: false,\n        reportVertexOnEdge: false,\n        ...options\n    };\n    const intersectionPoint = prolongedLinesIntersectionPoint(line0, line1);\n    if (intersectionPoint === undefined)\n        return undefined; // discard parallels and coincidence\n    let frac0, frac1;\n    if (line0[1][0] != line0[0][0]) {\n        frac0 = (intersectionPoint[0] - line0[0][0]) / (line0[1][0] - line0[0][0]);\n    }\n    else {\n        frac0 = (intersectionPoint[1] - line0[0][1]) / (line0[1][1] - line0[0][1]);\n    }\n    if (line1[1][0] != line1[0][0]) {\n        frac1 = (intersectionPoint[0] - line1[0][0]) / (line1[1][0] - line1[0][0]);\n    }\n    else {\n        frac1 = (intersectionPoint[1] - line1[0][1]) / (line1[1][1] - line1[0][1]);\n    }\n    // There are roughly three cases we need to deal with.\n    // 1. If at least one of the fracs lies outside [0,1], there is no intersection.\n    if (isOutside(frac0, options.epsilon) || isOutside(frac1, options.epsilon)) {\n        return undefined;\n    }\n    // 2. If both are either exactly 0 or exactly 1, this is not an intersection but just\n    // two edge segments sharing a common vertex.\n    if (options.reportVertexOnVertex &&\n        isBoundaryCase(frac0, options.epsilon) &&\n        isBoundaryCase(frac1, options.epsilon)) {\n        return intersectionPoint;\n    }\n    // 3. If only one of the fractions is exactly 0 or 1, this is\n    // a vertex-on-edge situation.\n    if (options.reportVertexOnEdge &&\n        (isBoundaryCase(frac0, options.epsilon) ||\n            isBoundaryCase(frac1, options.epsilon))) {\n        return intersectionPoint;\n    }\n    return intersectionPoint;\n}\n// Function to compute where two prolonged lines intersect. From https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection\nexport function prolongedLinesIntersectionPoint(line0, line1) {\n    const denom = (line0[0][0] - line0[1][0]) * (line1[0][1] - line1[1][1]) -\n        (line0[0][1] - line0[1][1]) * (line1[0][0] - line1[1][0]);\n    if (denom === 0)\n        return undefined;\n    const x = ((line0[0][0] * line0[1][1] - line0[0][1] * line0[1][0]) *\n        (line1[0][0] - line1[1][0]) -\n        (line0[0][0] - line0[1][0]) *\n            (line1[0][0] * line1[1][1] - line1[0][1] * line1[1][0])) /\n        denom;\n    const y = ((line0[0][0] * line0[1][1] - line0[0][1] * line0[1][0]) *\n        (line1[0][1] - line1[1][1]) -\n        (line0[0][1] - line0[1][1]) *\n            (line1[0][0] * line1[1][1] - line1[0][1] * line1[1][0])) /\n        denom;\n    return [x, y];\n}\n// true if fraction is (almost) 0.0 or 1.0\nfunction isBoundaryCase(fraction, epsilon) {\n    epsilon = epsilon || EPSILON;\n    const e2 = epsilon * epsilon;\n    return e2 >= (fraction - 1) * (fraction - 1) || e2 >= fraction * fraction;\n}\n// true if fraction is outside [0.0, 1.0] more then epsilon\nfunction isOutside(fraction, epsilon) {\n    epsilon = epsilon || EPSILON;\n    return fraction < 0 - epsilon || fraction > 1 + epsilon;\n}\n", "export { fetchAnnotationsFromApi } from './api.js';\nexport { getImageData, getColorsArray, getColorHistogram, getMaxOccurringColor } from './background-color.js';\nexport { computeMinMax, computeBbox, combineBboxes, doBboxesIntersect, intersectBboxes, pointInBbox, bufferBbox, bufferBboxByRatio, bboxToRectangle, bboxToPolygon, bboxToLine, bboxToDiameter, geometryToDiameter, bboxToCenter, bboxToSize, bboxToResolution, rectangleToSize, convexHull, sizesToScale, scaleSize, sizeToResolution, sizeToCenter, sizeToBbox, sizeToRectangle, bboxesToScale, rectanglesToScale } from './bbox.js';\nexport { getPropertyFromCacheOrComputation, getPropertyFromDoubleCacheOrComputation, getPropertyFromTripleCacheOrComputation } from './cache.js';\nexport { rgbToHex, rgbaToHex, hexToRgb, hexToRgba, hexToOpaqueRgba, hexToFractionalRgb, hexToFractionalRgba, hexToFractionalOpaqueRgba } from './color.js';\nexport { fetchUrl, fetchJson, fetchImageInfo, fetchImageBitmap } from './fetch.js';\nexport { isGeojsonPoint, isGeojsonLineString, isGeojsonPolygon, isGeojsonMultiPoint, isGeojsonMultiLineString, isGeojsonMultiPolygon, isGeojsonGeometry, isGeojsonMultiGeometry, geojsonPointToPoint, geojsonLineStringToLineString, geojsonPolygonToRing, geojsonPolygonToPolygon, geojsonMultiPointToMultiPoint, geojsonMultiLineStringToMultiLineString, geojsonMultiPolygonToMultiPolygon, geojsonGeometryToGeometry, geojsonGeometryToSvgGeometry, geojsonGeometryToGeojsonFeature, geojsonFeaturesToGeojsonFeatureCollection, geojsonGeometriesToGeojsonFeatureCollection, geojsonFeatureToGeojsonGeometry, geojsonFeatureCollectionToGeojsonGeometries, expandGeojsonMultiPointToGeojsonPoints, expandGeojsonMultiLineStringToGeojsonLineStrings, expandGeojsonMultiPolygonToGeojsonPolygons, expandGeojsonMultiGeometryToGeojsonGeometries, contractGeojsonPointsToGeojsonMultiPoint, contractGeojsonLineStringsToGeojsonMultiLineString, contractGeojsonPolygonsToGeojsonMultiPolygon, contractGeojsonGeometriesToGeojsonMultiGeometry, mergeGeojsonFeaturesCollections } from './geojson.js';\nexport { isPoint, isLineString, isRing, isPolygon, isMultiPoint, isMultiLineString, isMultiPolygon, isGeometry, closeRing, uncloseRing, closePolygon, unclosePolygon, closeMultiPolygon, uncloseMultiPolygon, conformLineString, conformRing, conformPolygon, conformMultiLineString, conformMultiPolygon, pointToGeojsonPoint, lineStringToGeojsonLineString, ringToGeojsonPolygon, polygonToGeojsonPolygon, multiPointToGeojsonMultiPoint, multiLineStringToGeojsonMultiLineString, multiPolygonToGeojsonMultiPolygon, geometryToGeojsonGeometry, geometryToSvgGeometry, isClosed, isEqualPoint, isEqualPointArray, isEqualPointArrayArray, pointsAndPointsToLines, lineStringToLines, pointToPixel, pixelToIntArrayIndex, flipX, flipY, mixNumbers, mixPoints, midPoint, lineAngle, stepDistanceAngle, distance, squaredDistance, rms, triangleArea, invertPoint, invertPoints, scalePoint, scalePoints, translatePoint, translatePoints, rotatePoint, rotatePoints, triangleAngles, threePointsToAngle } from './geometry.js';\nexport { degreesToRadians, groupBy, isEqualArray, arrayRepeated, subSetArray, equalSet, maxOfNumberOrUndefined, isValidHttpUrl } from './main.js';\nexport { getFullResourceMask } from './masks.js';\nexport { newArrayMatrix, arrayMatrixSize, multiplyArrayMatrix, subArrayMatrix, transposeArrayMatrix, pasteArrayMatrix, sliceArrayMatrix, shallowCopyArrayMatrix, newBlockArrayMatrix } from './matrix.js';\nexport { mergeOptions, mergeOptionsUnlessUndefined, mergePartialOptions } from './options.js';\nexport { isSvgCircle, isSvgLine, isSvgPolyLine, isSvgRect, isSvgPolygon, stringToSvgGeometriesGenerator, svgGeometriesToSvgString, svgGeometryToString, mapToResourceMaskSvgPolygon, svgGeometryToGeometry } from './svg.js';\nexport { polygonSelfIntersectionPoints, linesIntersectionPoint, prolongedLinesIntersectionPoint } from './self-intersect.js';\n", "export const supportedDistortionMeasures = [\n    'log2sigma',\n    'twoOmega',\n    'airyKavr',\n    'signDetJ',\n    'thetaa'\n];\n/**\n * Compute the distortion value of selected distortion measures from the partial derivatives at a specific point\n *\n * @param distortionMeasures - The requested distortion measures\n * @param partialDerivativeX - The partial derivative to 'x' of the transformation, evaluated at a set point\n * @param partialDerivativeY - The partial derivative to 'y' of the transformation, evaluated at a set point\n * @param referenceScale - The reference area scaling (sigma) to take into account for certain distortion measures (like 'log2sigma'), e.g. computed via a helmert transform\n * @returns A map of distortion measures and distortion values at the point\n */\nexport function computeDistortionsFromPartialDerivatives(distortionMeasures, partialDerivativeX, partialDerivativeY, referenceScale = 1) {\n    if (distortionMeasures.length === 0) {\n        return new Map();\n    }\n    if (!partialDerivativeX || !partialDerivativeY) {\n        return new Map(distortionMeasures.map((distortionMeasure) => [distortionMeasure, 0]));\n    }\n    const { E, F, a, b } = computeDistortionIntermediates(partialDerivativeX, partialDerivativeY);\n    return new Map(distortionMeasures.map((distortionMeasure) => {\n        if (supportedDistortionMeasures.indexOf(distortionMeasure) === -1) {\n            throw new Error('Distortion ' + distortionMeasure + ' not supported');\n        }\n        switch (supportedDistortionMeasures.indexOf(distortionMeasure)) {\n            case 0:\n                return [distortionMeasure, log2sigma(a, b, referenceScale)];\n            case 1:\n                return [distortionMeasure, twoOmega(a, b)];\n            case 2:\n                return [distortionMeasure, airyKavr(a, b, referenceScale)];\n            case 3:\n                return [\n                    distortionMeasure,\n                    signDetJ(partialDerivativeX, partialDerivativeY)\n                ];\n            case 4:\n                return [distortionMeasure, thetaa(partialDerivativeX, a, b, E, F)];\n            default:\n                return [distortionMeasure, 0];\n        }\n    }));\n}\nfunction computeDistortionIntermediates(partialDerivativeX, partialDerivativeY) {\n    const E = partialDerivativeX[0] ** 2 + partialDerivativeX[1] ** 2;\n    const F = partialDerivativeX[0] * partialDerivativeY[0] +\n        partialDerivativeX[1] * partialDerivativeY[1];\n    const G = partialDerivativeY[0] ** 2 + partialDerivativeY[1] ** 2;\n    const a = Math.sqrt(0.5 * (E + G + Math.sqrt((E - G) ** 2 + 4 * F ** 2)));\n    const b = Math.sqrt(0.5 * (E + G - Math.sqrt((E - G) ** 2 + 4 * F ** 2)));\n    return { E, F, G, a, b };\n}\nfunction log2sigma(a, b, referenceScale = 1) {\n    return (Math.log(a * b) - 2 * Math.log(referenceScale)) / Math.log(2);\n}\nfunction twoOmega(a, b) {\n    return 2 * Math.asin((a - b) / (a + b));\n}\nfunction airyKavr(a, b, referenceScale = 1) {\n    return (0.5 *\n        (Math.log(a / referenceScale) ** 2 + Math.log(b / referenceScale) ** 2));\n}\nfunction signDetJ(partialDerivativeX, partialDerivativeY) {\n    return Math.sign(partialDerivativeX[0] * partialDerivativeY[1] -\n        partialDerivativeX[1] * partialDerivativeY[0]);\n}\nfunction thetaa(partialDerivativeX, a, b, E, F) {\n    const thetaxp = Math.atan(partialDerivativeX[1] / partialDerivativeX[0]);\n    const alphap = Math.sign(-F) * Math.asin(Math.sqrt((1 - a ** 2 / E) / (1 - (a / b) ** 2)));\n    return thetaxp - alphap;\n}\n", "import { distance, rms } from '@allmaps/stdlib';\n/**\n * Base class for transformation.\n */\nexport class BaseTransformation {\n    sourcePoints;\n    destinationPoints;\n    destinationTransformedSourcePoints;\n    type;\n    pointCount;\n    pointCountMinimum;\n    errors;\n    rmse;\n    /**\n     * Create a transformation\n     *\n     * @param sourcePoints - The source points\n     * @param destinationPoints - The destination points\n     * @param type - The transformation type\n     * @param pointCountMinimum - The minimum number of points for the transformation type\n     */\n    constructor(sourcePoints, destinationPoints, type, pointCountMinimum) {\n        this.sourcePoints = sourcePoints;\n        this.destinationPoints = destinationPoints;\n        this.pointCount = this.sourcePoints.length;\n        this.type = type;\n        this.pointCountMinimum = pointCountMinimum;\n        if (this.pointCount < this.pointCountMinimum) {\n            throw new Error('Not enough control points. A ' +\n                this.type +\n                ' transformation requires a minimum of ' +\n                this.pointCountMinimum +\n                ' points, but ' +\n                this.pointCount +\n                ' are given.');\n        }\n    }\n    /**\n     * Set weights.\n     *\n     * The weights might be obtained in other ways then through solving\n     * (e.g. through solving multiple transformation together when staping).\n     * This function can be used to set weights computed elsewhere.\n     */\n    setWeightsArrays(weightsArrays) {\n        this.weightsArrays = weightsArrays;\n        this.processWeightsArrays();\n    }\n    processWeightsArrays() {\n        return;\n    }\n    /**\n     * Get the destination-transformed source points.\n     *\n     * @returns source points, transformed to destination domain\n     */\n    getDestinationTransformedSourcePoints() {\n        if (!this.destinationTransformedSourcePoints) {\n            this.destinationTransformedSourcePoints = this.sourcePoints.map((sourcePoint) => this.evaluateFunction(sourcePoint));\n        }\n        return this.destinationTransformedSourcePoints;\n    }\n    getMeasures() {\n        return {};\n    }\n    getErrors() {\n        if (!this.errors) {\n            const destinationTransformedSourcePoints = this.getDestinationTransformedSourcePoints();\n            this.errors = this.destinationPoints.map((destinationPoint, index) => distance(destinationPoint, destinationTransformedSourcePoints[index]));\n        }\n        return this.errors;\n    }\n    getRmse() {\n        if (!this.rmse) {\n            const destinationTransformedSourcePoints = this.getDestinationTransformedSourcePoints();\n            if (!this.destinationTransformedSourcePoints) {\n                this.getDestinationTransformedSourcePoints();\n            }\n            this.rmse = rms(this.destinationPoints, destinationTransformedSourcePoints);\n        }\n        return this.rmse;\n    }\n}\n", "import { BaseTransformation } from './BaseTransformation.js';\n/**\n * Base class for transformation that are a linear combination of weights.\n *\n * In general, the system of equations for x and y are dependent on each other, and they are thus solved jointly.\n * For transformations where the system of equations for x and y are independent and can hence be solved separately, a dedicated class exists.\n */\nexport class BaseLinearWeightsTransformation extends BaseTransformation {\n    destinationPointsArrays;\n    constructor(sourcePoints, destinationPoints, type, pointCountMinimum) {\n        super(sourcePoints, destinationPoints, type, pointCountMinimum);\n        this.destinationPointsArrays = this.getDestinationPointsArrays();\n    }\n}\n", "import Matrix, { inverse, pseudoInverse, SingularValueDecomposition } from 'ml-matrix';\n/**\n * Solve the x and y components jointly using PseudoInverse.\n *\n * This uses the 'Pseudo Inverse' to compute a 'best fit' (least squares) approximate solution\n * for the system of linear equations, which is (in general) over-defined and hence lacks an exact solution.\n * See https://en.wikipedia.org/wiki/Moore%E2%80%93Penrose_inverse\n *\n * This will result weightsArray shared by both components: [t_x, t_y, m, n]\n */\nexport function solveJointlyPseudoInverse(coefsArrayMatrices, destinationPointsArrays) {\n    const coefsMatrix = new Matrix([\n        ...coefsArrayMatrices[0],\n        ...coefsArrayMatrices[1]\n    ]);\n    const destinationPointsMatrix = Matrix.columnVector([\n        ...destinationPointsArrays[0],\n        ...destinationPointsArrays[1]\n    ]);\n    const pseudoInverseCoefsMatrix = pseudoInverse(coefsMatrix);\n    const weightsMatrix = pseudoInverseCoefsMatrix.mmul(destinationPointsMatrix);\n    const weightsArray = weightsMatrix.to1DArray();\n    return weightsArray;\n}\n/**\n * Solve the x and y components independently using PseudoInverse.\n *\n * This uses the 'Pseudo Inverse' to compute (for each component, using the same coefs for both)\n * a 'best fit' (least squares) approximate solution for the system of linear equations\n * which is (in general) over-defined and hence lacks an exact solution.\n *\n * See https://en.wikipedia.org/wiki/Moore%E2%80%93Penrose_inverse\n *\n * This wil result in a weights array for each component:\n * For order = 1: this.weight = [[a0_x, ax_x, ay_x], [a0_y, ax_y, ay_y]]\n * For order = 2: ... (similar, following the same order as in coefsArrayMatrix)\n * For order = 3: ... (similar, following the same order as in coefsArrayMatrix)\n */\nexport function solveIndependentlyPseudoInverse(coefsArrayMatrix, destinationPointsArrays) {\n    const coefsMatrix = new Matrix(coefsArrayMatrix);\n    const destinationPointsMatrices = [\n        Matrix.columnVector(destinationPointsArrays[0]),\n        Matrix.columnVector(destinationPointsArrays[1])\n    ];\n    const pseudoInverseCoefsMatrix = pseudoInverse(coefsMatrix);\n    const weightsMatrices = [\n        pseudoInverseCoefsMatrix.mmul(destinationPointsMatrices[0]),\n        pseudoInverseCoefsMatrix.mmul(destinationPointsMatrices[1])\n    ];\n    const weightsArrays = weightsMatrices.map((matrix) => matrix.to1DArray());\n    return weightsArrays;\n}\n/**\n * Solve the x and y components independently using exact inverse.\n *\n * This uses the exact inverse to compute (for each component, using the same coefs for both)\n * the exact solution for the system of linear equations\n * which is (in general) invertable to an exact solution.\n *\n * This wil result in a weights array for each component with rbf weights and affine weights.\n */\nexport function solveIndependentlyInverse(coefsArrayMatrix, destinationPointsArrays) {\n    const coefsMatrix = new Matrix(coefsArrayMatrix);\n    const destinationPointsMatrices = [\n        Matrix.columnVector(destinationPointsArrays[0]),\n        Matrix.columnVector(destinationPointsArrays[1])\n    ];\n    const inverseCoefsMatrix = inverse(coefsMatrix);\n    const weightsMatrices = [\n        inverseCoefsMatrix.mmul(destinationPointsMatrices[0]),\n        inverseCoefsMatrix.mmul(destinationPointsMatrices[1])\n    ];\n    const weightsArrays = weightsMatrices.map((matrix) => matrix.to1DArray());\n    return weightsArrays;\n}\n/**\n * Solve the x and y components jointly using singular value decomposition.\n *\n * This uses a singular value decomposition to compute the last (i.e. 9th) 'right singular vector',\n * i.e. the one with the smallest singular value, wich holds the weights for the solution.\n * Note that for a set of gcps that exactly follow a projective transformations,\n * the singular value is null and this vector spans the null-space.\n *\n * This wil result in a weights array for each component with rbf weights and affine weights.\n */\nexport function solveJointlySvd(coefsArrayMatrices, pointCount) {\n    // Joint coefs in the same order as in the paper\n    // (Otherwise the weights may differ in sign, even though this should not affect the result)\n    const coefsMatrix = [];\n    for (let i = 0; i < pointCount; i++) {\n        coefsMatrix.push(coefsArrayMatrices[0][i]);\n        coefsMatrix.push(coefsArrayMatrices[1][i]);\n    }\n    const svdCoefsMatrix = new SingularValueDecomposition(coefsMatrix);\n    const weightsMatrix = Matrix.from1DArray(3, 3, svdCoefsMatrix.rightSingularVectors.getColumn(8)).transpose();\n    const weightsArrays = weightsMatrix.to2DArray();\n    return weightsArrays;\n}\n", "import { newArrayMatrix, pasteArrayMatrix, arrayMatrixSize } from '@allmaps/stdlib';\nimport { BaseLinearWeightsTransformation } from './BaseLinearWeightsTransformation.js';\nimport { solveJointlyPseudoInverse } from '../shared/solve-functions.js';\n/**\n * 2D Helmert transformation (= similarity transformation)\n *\n * This transformation is a composition of a translation, rotation and scaling. There is no shearing.\n *\n * For this transformations, the system of equations is solved for x and y jointly.\n */\nexport class Helmert extends BaseLinearWeightsTransformation {\n    coefsArrayMatrices;\n    coefsArrayMatricesSize;\n    weightsArray;\n    weightsArrays;\n    constructor(sourcePoints, destinationPoints) {\n        super(sourcePoints, destinationPoints, 'helmert', 2);\n        this.coefsArrayMatrices = this.getCoefsArrayMatrices();\n        this.coefsArrayMatricesSize = this.coefsArrayMatrices.map((coefsArrayMatrix) => arrayMatrixSize(coefsArrayMatrix));\n    }\n    getDestinationPointsArrays() {\n        return [\n            this.destinationPoints.map((value) => value[0]),\n            this.destinationPoints.map((value) => value[1])\n        ];\n    }\n    getCoefsArrayMatrices() {\n        let coefsArrayMatrix0 = newArrayMatrix(this.pointCount, 4, 0);\n        let coefsArrayMatrix1 = newArrayMatrix(this.pointCount, 4, 0);\n        for (let i = 0; i < this.pointCount; i++) {\n            const sourcePointCoefsArrays = this.getSourcePointCoefsArrays(this.sourcePoints[i]);\n            coefsArrayMatrix0 = pasteArrayMatrix(coefsArrayMatrix0, i, 0, [\n                sourcePointCoefsArrays[0]\n            ]);\n            coefsArrayMatrix1 = pasteArrayMatrix(coefsArrayMatrix1, i, 0, [\n                sourcePointCoefsArrays[1]\n            ]);\n        }\n        return [coefsArrayMatrix0, coefsArrayMatrix1];\n    }\n    /**\n     * Get two 1x4 coefsArrays, populating the 2Nx4 coefsArrayMatrices\n     * 1 0 x0 -y0\n     * 1 0 x1 -y1\n     * ...\n     * 0 1 y0 x0\n     * 0 1 y1 x1\n     * ...\n     *\n     * @param sourcePoint\n     */\n    getSourcePointCoefsArrays(sourcePoint) {\n        return [\n            [1, 0, sourcePoint[0], -sourcePoint[1]],\n            [0, 1, sourcePoint[1], sourcePoint[0]]\n        ];\n    }\n    solve() {\n        this.weightsArray = solveJointlyPseudoInverse(this.coefsArrayMatrices, this.destinationPointsArrays);\n        this.weightsArrays = [this.weightsArray, this.weightsArray];\n    }\n    getMeasures() {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArray) {\n            throw new Error('Helmert weights not computed');\n        }\n        const measures = {};\n        measures.scale = Math.sqrt(this.weightsArray[2] ** 2 + this.weightsArray[3] ** 2);\n        measures.rotation = Math.atan2(this.weightsArray[3], this.weightsArray[2]);\n        measures.translation = [this.weightsArray[0], this.weightsArray[1]];\n        return measures;\n    }\n    evaluateFunction(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArray) {\n            throw new Error('Helmert weights not computed');\n        }\n        const newDestinationPoint = [\n            this.weightsArray[0] +\n                this.weightsArray[2] * newSourcePoint[0] -\n                this.weightsArray[3] * newSourcePoint[1],\n            this.weightsArray[1] +\n                this.weightsArray[2] * newSourcePoint[1] +\n                this.weightsArray[3] * newSourcePoint[0]\n        ];\n        // Alternatively, using derived helmert measures\n        // this.translation[0] +\n        //   this.scale * Math.cos(rotation) * newSourcePoint[0] -\n        //   this.scale * Math.sin(rotation) * newSourcePoint[1],\n        // this.translation[1] +\n        //   this.scale * Math.cos(rotation) * newSourcePoint[1] +\n        //   this.scale * Math.sin(rotation) * newSourcePoint[0]\n        return newDestinationPoint;\n    }\n    evaluatePartialDerivativeX(_newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArray) {\n            throw new Error('Helmert weights not computed');\n        }\n        const newDestinationPointPartDerX = [\n            this.weightsArray[2],\n            this.weightsArray[3]\n        ];\n        return newDestinationPointPartDerX;\n    }\n    evaluatePartialDerivativeY(_newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArray) {\n            throw new Error('Helmert weights not computed');\n        }\n        const newDestinationPointPartDerY = [\n            -this.weightsArray[3],\n            this.weightsArray[2]\n        ];\n        return newDestinationPointPartDerY;\n    }\n}\n", "import { Helmert } from './Helmert.js';\nimport { BaseTransformation } from './BaseTransformation.js';\nexport class Straight extends BaseTransformation {\n    weightsArrays;\n    constructor(sourcePoints, destinationPoints) {\n        super(sourcePoints, destinationPoints, 'straight', 2);\n    }\n    /** Solve the x and y components jointly.\n     *\n     * This computes the corresponding Helmert transform and get the scale from it.\n     */\n    solve() {\n        const helmertTransformation = new Helmert(this.sourcePoints, this.destinationPoints);\n        const scale = helmertTransformation.getMeasures().scale;\n        // Compute the centers of the source points and destination points\n        const sourcePointsCenter = this.sourcePoints\n            .reduce((center, point) => [center[0] + point[0], center[1] + point[1]])\n            .map((coordinate) => coordinate / this.pointCount);\n        const destinationPointsCenter = this.destinationPoints\n            .reduce((center, point) => [center[0] + point[0], center[1] + point[1]])\n            .map((coordinate) => coordinate / this.pointCount);\n        // Compute the translation vector from the (scaled) center of the source points to the center of the destination points\n        const translation = destinationPointsCenter.map((coord, i) => coord - sourcePointsCenter[i] * scale);\n        this.weightsArrays = {\n            scale,\n            sourcePointsCenter,\n            destinationPointsCenter,\n            translation\n        };\n    }\n    // Evaluate the transformation function at a new point\n    evaluateFunction(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        const newDestinationPoint = [\n            this.weightsArrays.translation[0] +\n                this.weightsArrays.scale * newSourcePoint[0],\n            this.weightsArrays.translation[1] +\n                this.weightsArrays.scale * newSourcePoint[1]\n        ];\n        return newDestinationPoint;\n    }\n    // Evaluate the transformation function's partial derivative to x at a new point\n    evaluatePartialDerivativeX(_newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        const newDestinationPointPartDerX = [this.weightsArrays.scale, 0];\n        return newDestinationPointPartDerX;\n    }\n    // Evaluate the transformation function's partial derivative to y at a new point\n    evaluatePartialDerivativeY(_newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        const newDestinationPointPartDerY = [0, this.weightsArrays.scale];\n        return newDestinationPointPartDerY;\n    }\n}\n", "import { BaseLinearWeightsTransformation } from './BaseLinearWeightsTransformation.js';\n/**\n * Base class for transformation that are a linear combination of weights,\n * where the system of equations for x and y are independent and can hence be solved separately.\n */\nexport class BaseIndependentLinearWeightsTransformation extends BaseLinearWeightsTransformation {\n    constructor(sourcePoints, destinationPoints, type, pointCountMinimum) {\n        super(sourcePoints, destinationPoints, type, pointCountMinimum);\n    }\n    getCoefsArrayMatrices() {\n        const coefsArrayMatrix = this.getCoefsArrayMatrix();\n        return [coefsArrayMatrix, coefsArrayMatrix];\n    }\n    getSourcePointCoefsArrays(sourcePoint) {\n        const sourcePointCoefsArray = this.getSourcePointCoefsArray(sourcePoint);\n        return [sourcePointCoefsArray, sourcePointCoefsArray];\n    }\n}\n", "import { arrayMatrixSize, newArrayMatrix, pasteArrayMatrix } from '@allmaps/stdlib';\nimport { BaseIndependentLinearWeightsTransformation } from './BaseIndependentLinearWeightsTransformation.js';\nimport { solveIndependentlyPseudoInverse } from '../shared/solve-functions.js';\nexport class BasePolynomialTransformation extends BaseIndependentLinearWeightsTransformation {\n    coefsArrayMatrices;\n    coefsArrayMatrix;\n    coefsArrayMatricesSize;\n    coefsArrayMatrixSize;\n    order;\n    weightsArrays;\n    constructor(sourcePoints, destinationPoints, order) {\n        order = order || 1;\n        const pointsCountMinimum = ((order + 1) * (order + 2)) / 2;\n        // If there are less control points than there are coefficients to be determined (for each dimension),\n        // the system can not be solved\n        super(sourcePoints, destinationPoints, ('polynomial' + order), pointsCountMinimum);\n        this.order = order;\n        if (this.order < 1 || this.order > 3) {\n            throw new Error('Only polynomial transformations of order 1, 2 or 3 are supported');\n        }\n        this.coefsArrayMatrices = this.getCoefsArrayMatrices();\n        this.coefsArrayMatrix = this.coefsArrayMatrices[0];\n        this.coefsArrayMatricesSize = this.coefsArrayMatrices.map((coefsArrayMatrix) => arrayMatrixSize(coefsArrayMatrix));\n        this.coefsArrayMatrixSize = arrayMatrixSize(this.coefsArrayMatrix);\n    }\n    getDestinationPointsArrays() {\n        return [\n            this.destinationPoints.map((value) => value[0]),\n            this.destinationPoints.map((value) => value[1])\n        ];\n    }\n    getCoefsArrayMatrix() {\n        let coefsArrayArray = newArrayMatrix(this.pointCount, this.pointCountMinimum, 0);\n        for (let i = 0; i < this.pointCount; i++) {\n            coefsArrayArray = pasteArrayMatrix(coefsArrayArray, i, 0, [\n                this.getSourcePointCoefsArray(this.sourcePoints[i])\n            ]);\n        }\n        return coefsArrayArray;\n    }\n    solve() {\n        this.weightsArrays = solveIndependentlyPseudoInverse(this.coefsArrayMatrix, this.destinationPointsArrays);\n    }\n}\n", "import { BasePolynomialTransformation } from './BasePolynomialTransformation.js';\n/**\n * 2D First-order Polynomial transformation\n *\n * This transformation is a composition of a translation, rotation, scaling and shearing.\n */\nexport class Polynomial1 extends BasePolynomialTransformation {\n    constructor(sourcePoints, destinationPoints) {\n        super(sourcePoints, destinationPoints, 1);\n    }\n    getSourcePointCoefsArray(sourcePoint) {\n        return Polynomial1.getPolynomial1SourcePointCoefsArray(sourcePoint);\n    }\n    /**\n     * Get 1x3 coefsArray, populating the Nx3 coefsArrayMatrix\n     * 1 x0 y0\n     * 1 x1 y1\n     * 1 x2 y2\n     * ...\n     *\n     * @param sourcePoint\n     */\n    static getPolynomial1SourcePointCoefsArray(sourcePoint) {\n        return [1, sourcePoint[0], sourcePoint[1]];\n    }\n    getHomogeneousTransform() {\n        if (!this.weightsArrays) {\n            return undefined;\n        }\n        return [\n            this.weightsArrays[0][1],\n            this.weightsArrays[1][1],\n            this.weightsArrays[0][2],\n            this.weightsArrays[1][2],\n            this.weightsArrays[0][0],\n            this.weightsArrays[1][0]\n        ];\n    }\n    setWeightsArraysFromHomogeneousTransform(homogeneousTransform) {\n        this.weightsArrays = [\n            [\n                homogeneousTransform[4],\n                homogeneousTransform[0],\n                homogeneousTransform[2]\n            ],\n            [\n                homogeneousTransform[5],\n                homogeneousTransform[1],\n                homogeneousTransform[3]\n            ]\n        ];\n    }\n    getMeasures() {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        const measures = {};\n        // From: https://stackoverflow.com/questions/12469770/get-skew-or-rotation-value-from-affine-transformation-matrix\n        measures.translation = [this.weightsArrays[0][0], this.weightsArrays[1][0]];\n        const a = this.weightsArrays[0][1];\n        const b = this.weightsArrays[1][1];\n        const c = this.weightsArrays[0][2];\n        const d = this.weightsArrays[1][2];\n        const delta = a * d - b * c;\n        // Apply the QR-like decomposition.\n        if (a != 0 || b != 0) {\n            const r = Math.sqrt(a * a + b * b);\n            measures.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\n            measures.scales = [r, delta / r];\n            measures.shears = [Math.atan((a * c + b * d) / (r * r)), 0];\n        }\n        else if (c != 0 || d != 0) {\n            const s = Math.sqrt(c * c + d * d);\n            measures.rotation =\n                Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\n            measures.scales = [delta / s, s];\n            measures.shears = [0, Math.atan((a * c + b * d) / (s * s))];\n        }\n        else {\n            // a = b = c = d = 0\n        }\n        return measures;\n    }\n    evaluateFunction(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        const newDestinationPoint = [0, 0];\n        for (let i = 0; i < 2; i++) {\n            newDestinationPoint[i] +=\n                this.weightsArrays[i][0] +\n                    this.weightsArrays[i][1] * newSourcePoint[0] +\n                    this.weightsArrays[i][2] * newSourcePoint[1];\n        }\n        return newDestinationPoint;\n    }\n    evaluatePartialDerivativeX(_newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        const newDestinationPointPartDerX = [0, 0];\n        for (let i = 0; i < 2; i++) {\n            newDestinationPointPartDerX[i] += this.weightsArrays[i][1];\n        }\n        return newDestinationPointPartDerX;\n    }\n    evaluatePartialDerivativeY(_newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        const newDestinationPointPartDerY = [0, 0];\n        for (let i = 0; i < 2; i++) {\n            newDestinationPointPartDerY[i] += this.weightsArrays[i][2];\n        }\n        return newDestinationPointPartDerY;\n    }\n}\n", "import { BasePolynomialTransformation } from './BasePolynomialTransformation.js';\n/**\n * 2D Second-order Polynomial transformation\n */\nexport class Polynomial2 extends BasePolynomialTransformation {\n    constructor(sourcePoints, destinationPoints) {\n        super(sourcePoints, destinationPoints, 2);\n    }\n    getSourcePointCoefsArray(sourcePoint) {\n        return Polynomial2.getPolynomial2SourcePointCoefsArray(sourcePoint);\n    }\n    /**\n     * Get 1x3 coefsArray, populating the Nx3 coefsArrayMatrix\n     * 1 x0 y0 x0^2 y0^2 x0*y0\n     * ...\n     *\n     * @param sourcePoint\n     */\n    static getPolynomial2SourcePointCoefsArray(sourcePoint) {\n        return [\n            1,\n            sourcePoint[0],\n            sourcePoint[1],\n            sourcePoint[0] ** 2,\n            sourcePoint[1] ** 2,\n            sourcePoint[0] * sourcePoint[1]\n        ];\n    }\n    // Evaluate the transformation function at a new point\n    evaluateFunction(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        // Apply the helmert coefficients to the input point\n        const newDestinationPoint = [0, 0];\n        for (let i = 0; i < 2; i++) {\n            newDestinationPoint[i] +=\n                this.weightsArrays[i][0] +\n                    this.weightsArrays[i][1] * newSourcePoint[0] +\n                    this.weightsArrays[i][2] * newSourcePoint[1] +\n                    this.weightsArrays[i][3] * newSourcePoint[0] ** 2 +\n                    this.weightsArrays[i][4] * newSourcePoint[1] ** 2 +\n                    this.weightsArrays[i][5] * newSourcePoint[0] * newSourcePoint[1];\n        }\n        return newDestinationPoint;\n    }\n    // Evaluate the transformation function's partial derivative to x at a new point\n    evaluatePartialDerivativeX(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        // Apply the helmert coefficients to the input point\n        const newDestinationPointPartDerX = [0, 0];\n        for (let i = 0; i < 2; i++) {\n            newDestinationPointPartDerX[i] +=\n                this.weightsArrays[i][1] +\n                    2 * this.weightsArrays[i][3] * newSourcePoint[0] +\n                    this.weightsArrays[i][5] * newSourcePoint[1];\n        }\n        return newDestinationPointPartDerX;\n    }\n    // Evaluate the transformation function's partial derivative to x at a new point\n    evaluatePartialDerivativeY(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        // Apply the helmert coefficients to the input point\n        const newDestinationPointPartDerY = [0, 0];\n        for (let i = 0; i < 2; i++) {\n            newDestinationPointPartDerY[i] +=\n                this.weightsArrays[i][2] +\n                    2 * this.weightsArrays[i][4] * newSourcePoint[1] +\n                    this.weightsArrays[i][5] * newSourcePoint[0];\n        }\n        return newDestinationPointPartDerY;\n    }\n}\n", "import { BasePolynomialTransformation } from './BasePolynomialTransformation.js';\n/**\n * 2D Third-order Polynomial transformation\n */\nexport class Polynomial3 extends BasePolynomialTransformation {\n    constructor(sourcePoints, destinationPoints) {\n        super(sourcePoints, destinationPoints, 3);\n    }\n    getSourcePointCoefsArray(sourcePoint) {\n        return Polynomial3.getPolynomial3SourcePointCoefsArray(sourcePoint);\n    }\n    /**\n     * Get 1x3 coefsArray, populating the Nx3 coefsArrayMatrix\n     * 1 x0 y0 x0^2 y0^2 x0*y0 x0^3 y0^3 x0^2*y0 x0*y0^2\n     * ...\n     *\n     * @param sourcePoint\n     */\n    static getPolynomial3SourcePointCoefsArray(sourcePoint) {\n        return [\n            1,\n            sourcePoint[0],\n            sourcePoint[1],\n            sourcePoint[0] ** 2,\n            sourcePoint[1] ** 2,\n            sourcePoint[0] * sourcePoint[1],\n            sourcePoint[0] ** 3,\n            sourcePoint[1] ** 3,\n            sourcePoint[0] ** 2 * sourcePoint[1],\n            sourcePoint[0] * sourcePoint[1] ** 2\n        ];\n    }\n    // Evaluate the transformation function at a new point\n    evaluateFunction(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        // Apply the helmert coefficients to the input point\n        const newDestinationPoint = [0, 0];\n        for (let i = 0; i < 2; i++) {\n            newDestinationPoint[i] +=\n                this.weightsArrays[i][0] +\n                    this.weightsArrays[i][1] * newSourcePoint[0] +\n                    this.weightsArrays[i][2] * newSourcePoint[1] +\n                    this.weightsArrays[i][3] * newSourcePoint[0] ** 2 +\n                    this.weightsArrays[i][4] * newSourcePoint[1] ** 2 +\n                    this.weightsArrays[i][5] * newSourcePoint[0] * newSourcePoint[1] +\n                    this.weightsArrays[i][6] * newSourcePoint[0] ** 3 +\n                    this.weightsArrays[i][7] * newSourcePoint[1] ** 3 +\n                    this.weightsArrays[i][8] * newSourcePoint[0] ** 2 * newSourcePoint[1] +\n                    this.weightsArrays[i][9] * newSourcePoint[0] * newSourcePoint[1] ** 2;\n        }\n        return newDestinationPoint;\n    }\n    // Evaluate the transformation function's partial derivative to x at a new point\n    evaluatePartialDerivativeX(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        // Apply the helmert coefficients to the input point\n        const newDestinationPointPartDerX = [0, 0];\n        for (let i = 0; i < 2; i++) {\n            newDestinationPointPartDerX[i] +=\n                this.weightsArrays[i][1] +\n                    2 * this.weightsArrays[i][3] * newSourcePoint[0] +\n                    this.weightsArrays[i][5] * newSourcePoint[1] +\n                    3 * this.weightsArrays[i][6] * newSourcePoint[0] ** 2 +\n                    2 * this.weightsArrays[i][8] * newSourcePoint[0] * newSourcePoint[1] +\n                    this.weightsArrays[i][9] * newSourcePoint[1] ** 2;\n        }\n        return newDestinationPointPartDerX;\n    }\n    // Evaluate the transformation function's partial derivative to x at a new point\n    evaluatePartialDerivativeY(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        // Apply the helmert coefficients to the input point\n        const newDestinationPointPartDerY = [0, 0];\n        for (let i = 0; i < 2; i++) {\n            newDestinationPointPartDerY[i] +=\n                this.weightsArrays[i][2] +\n                    2 * this.weightsArrays[i][4] * newSourcePoint[1] +\n                    this.weightsArrays[i][5] * newSourcePoint[0] +\n                    3 * this.weightsArrays[i][7] * newSourcePoint[1] ** 2 +\n                    this.weightsArrays[i][8] * newSourcePoint[0] ** 2 +\n                    2 * this.weightsArrays[i][9] * newSourcePoint[0] * newSourcePoint[1];\n        }\n        return newDestinationPointPartDerY;\n    }\n}\n", "import { newArrayMatrix } from '@allmaps/stdlib';\nimport { BaseTransformation } from './BaseTransformation.js';\nimport { solveJointlySvd } from '../shared/solve-functions.js';\n/**\n * 2D projective (= perspective) transformation\n *\n * For this transformations, the system of equations is solved for x and y jointly.\n *\n * See for more information:\n * Dubrofsky, Elan. \"Homography estimation.\" Diplomov\u00E1 pr\u00E1ce. Vancouver: Univerzita Britsk\u00E9 Kolumbie 5 (2009).\n * https://citeseerx.ist.psu.edu/doc/10.1.1.186.4411\n * https://www.cs.ubc.ca/sites/default/files/2022-12/Dubrofsky_Elan.pdf\n */\nexport class Projective extends BaseTransformation {\n    coefsArrayMatrices;\n    weightsArrays;\n    constructor(sourcePoints, destinationPoints) {\n        super(sourcePoints, destinationPoints, 'projective', 4);\n        // Construct two Nx9 Matrix projectiveCoefsMatrix\n        // \u2212x0 \u2212y0 \u22121  0   0   0  x'0x0 x'0y0 x'0\n        // ...\n        // 0   0   0   \u2212x0 \u2212y0 \u22121 y'0x0 y'0y0 y'0\n        // ...\n        this.coefsArrayMatrices = [\n            newArrayMatrix(this.pointCount, 9, 0),\n            newArrayMatrix(this.pointCount, 9, 0)\n        ];\n        for (let i = 0; i < this.pointCount; i++) {\n            this.coefsArrayMatrices[0][i][0] = -sourcePoints[i][0];\n            this.coefsArrayMatrices[0][i][1] = -sourcePoints[i][1];\n            this.coefsArrayMatrices[0][i][2] = -1;\n            this.coefsArrayMatrices[0][i][3] = 0;\n            this.coefsArrayMatrices[0][i][4] = 0;\n            this.coefsArrayMatrices[0][i][5] = 0;\n            this.coefsArrayMatrices[0][i][6] =\n                destinationPoints[i][0] * sourcePoints[i][0];\n            this.coefsArrayMatrices[0][i][7] =\n                destinationPoints[i][0] * sourcePoints[i][1];\n            this.coefsArrayMatrices[0][i][8] = destinationPoints[i][0];\n            this.coefsArrayMatrices[1][i][0] = 0;\n            this.coefsArrayMatrices[1][i][1] = 0;\n            this.coefsArrayMatrices[1][i][2] = 0;\n            this.coefsArrayMatrices[1][i][3] = -sourcePoints[i][0];\n            this.coefsArrayMatrices[1][i][4] = -sourcePoints[i][1];\n            this.coefsArrayMatrices[1][i][5] = -1;\n            this.coefsArrayMatrices[1][i][6] =\n                destinationPoints[i][1] * sourcePoints[i][0];\n            this.coefsArrayMatrices[1][i][7] =\n                destinationPoints[i][1] * sourcePoints[i][1];\n            this.coefsArrayMatrices[1][i][8] = destinationPoints[i][1];\n        }\n    }\n    solve() {\n        this.weightsArrays = solveJointlySvd(this.coefsArrayMatrices, this.pointCount);\n    }\n    evaluateFunction(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        const c = this.weightsArrays[0][2] * newSourcePoint[0] +\n            this.weightsArrays[1][2] * newSourcePoint[1] +\n            this.weightsArrays[2][2];\n        const num1 = this.weightsArrays[0][0] * newSourcePoint[0] +\n            this.weightsArrays[1][0] * newSourcePoint[1] +\n            this.weightsArrays[2][0];\n        const num2 = this.weightsArrays[0][1] * newSourcePoint[0] +\n            this.weightsArrays[1][1] * newSourcePoint[1] +\n            this.weightsArrays[2][1];\n        const newDestinationPoint = [num1 / c, num2 / c];\n        return newDestinationPoint;\n    }\n    evaluatePartialDerivativeX(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        const c = this.weightsArrays[0][2] * newSourcePoint[0] +\n            this.weightsArrays[1][2] * newSourcePoint[1] +\n            this.weightsArrays[2][2];\n        const num1 = this.weightsArrays[0][0] * newSourcePoint[0] +\n            this.weightsArrays[1][0] * newSourcePoint[1] +\n            this.weightsArrays[2][0];\n        const num2 = this.weightsArrays[0][1] * newSourcePoint[0] +\n            this.weightsArrays[1][1] * newSourcePoint[1] +\n            this.weightsArrays[2][1];\n        const newDestinationPointPartDerX = [\n            (c * this.weightsArrays[0][0] - this.weightsArrays[0][2] * num1) / c ** 2,\n            (c * this.weightsArrays[0][1] - this.weightsArrays[0][2] * num2) / c ** 2\n        ];\n        return newDestinationPointPartDerX;\n    }\n    evaluatePartialDerivativeY(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        const c = this.weightsArrays[0][2] * newSourcePoint[0] +\n            this.weightsArrays[1][2] * newSourcePoint[1] +\n            this.weightsArrays[2][2];\n        const num1 = this.weightsArrays[0][0] * newSourcePoint[0] +\n            this.weightsArrays[1][0] * newSourcePoint[1] +\n            this.weightsArrays[2][0];\n        const num2 = this.weightsArrays[0][1] * newSourcePoint[0] +\n            this.weightsArrays[1][1] * newSourcePoint[1] +\n            this.weightsArrays[2][1];\n        const newDestinationPointPartDerY = [\n            (c * this.weightsArrays[1][0] - this.weightsArrays[1][2] * num1) / c ** 2,\n            (c * this.weightsArrays[1][1] - this.weightsArrays[1][2] * num2) / c ** 2\n        ];\n        return newDestinationPointPartDerY;\n    }\n}\n", "import { arrayMatrixSize, newArrayMatrix, newBlockArrayMatrix, pasteArrayMatrix, transposeArrayMatrix } from '@allmaps/stdlib';\nimport { Polynomial1 } from './Polynomial1.js';\nimport { BaseIndependentLinearWeightsTransformation } from './BaseIndependentLinearWeightsTransformation.js';\nimport { solveIndependentlyInverse } from '../shared/solve-functions.js';\n/**\n * 2D Radial Basis Functions transformation\n *\n * See notebook https://observablehq.com/d/0b57d3b587542794 for code source and explanation\n */\nexport class RBF extends BaseIndependentLinearWeightsTransformation {\n    kernelFunction;\n    normFunction;\n    epsilon;\n    coefsArrayMatrices;\n    coefsArrayMatrix;\n    coefsArrayMatricesSize;\n    coefsArrayMatrixSize;\n    weightsArrays;\n    rbfWeightsArrays;\n    affineWeightsArrays;\n    constructor(sourcePoints, destinationPoints, kernelFunction, normFunction, type, epsilon) {\n        super(sourcePoints, destinationPoints, type, 3);\n        this.kernelFunction = kernelFunction;\n        this.normFunction = normFunction;\n        this.epsilon = epsilon;\n        // Note: getCoefsArrayMatrices can not be moved to the parent class's constructor\n        // since for this class it uses properties (normFunction, kernelFunction, epsilon)\n        // which are only defined after super()\n        this.coefsArrayMatrices = this.getCoefsArrayMatrices();\n        this.coefsArrayMatrix = this.coefsArrayMatrices[0];\n        this.coefsArrayMatricesSize = this.coefsArrayMatrices.map((coefsArrayMatrix) => arrayMatrixSize(coefsArrayMatrix));\n        this.coefsArrayMatrixSize = arrayMatrixSize(this.coefsArrayMatrix);\n    }\n    getDestinationPointsArrays() {\n        return [\n            [...this.destinationPoints, [0, 0], [0, 0], [0, 0]].map((value) => value[0]),\n            [...this.destinationPoints, [0, 0], [0, 0], [0, 0]].map((value) => value[1])\n        ];\n    }\n    getCoefsArrayMatrix() {\n        // Pre-compute kernelsArrayMatrix: fill normsArrayMatrix\n        // with the point to point distances between all control points\n        const normsArrayMatrix = newArrayMatrix(this.pointCount, this.pointCount, 0);\n        for (let i = 0; i < this.pointCount; i++) {\n            for (let j = 0; j < this.pointCount; j++) {\n                normsArrayMatrix[i][j] = this.normFunction(this.sourcePoints[i], this.sourcePoints[j]);\n            }\n        }\n        // If it's not provided, and if it's an input to the kernelFunction,\n        // compute epsilon as the average distance between the control points\n        if (this.epsilon === undefined) {\n            const normsSum = normsArrayMatrix\n                .map((row) => row.reduce((a, c) => a + c, 0))\n                .reduce((a, c) => a + c, 0);\n            this.epsilon = normsSum / (Math.pow(this.pointCount, 2) - this.pointCount);\n        }\n        // Finish the computation of kernelsArrayMatrix by applying the requested kernel function\n        const kernelCoefsArrayMatrix = newArrayMatrix(this.pointCount, this.pointCount, 0);\n        for (let i = 0; i < this.pointCount; i++) {\n            for (let j = 0; j < this.pointCount; j++) {\n                kernelCoefsArrayMatrix[i][j] = this.kernelFunction(normsArrayMatrix[i][j], {\n                    epsilon: this.epsilon\n                });\n            }\n        }\n        // Construct Nx3 affineCoefsArrayMatrix\n        // 1 x0 y0\n        // 1 x1 y1\n        // 1 x2 y2\n        // ...\n        let affineCoefsArrayMatrix = newArrayMatrix(this.pointCount, 3, 0);\n        for (let i = 0; i < this.pointCount; i++) {\n            affineCoefsArrayMatrix = pasteArrayMatrix(affineCoefsArrayMatrix, i, 0, [\n                Polynomial1.getPolynomial1SourcePointCoefsArray(this.sourcePoints[i])\n            ]);\n        }\n        // Construct 3x3 zerosArrayMatrix\n        const zerosArrayMatrix = newArrayMatrix(3, 3, 0);\n        // Combine kernelsArrayMatrix and affineCoefsArrayMatrix\n        // into new coefsArrayMatrix, to include the affine transformation\n        const coefsArrayMatrix = newBlockArrayMatrix([\n            [kernelCoefsArrayMatrix, affineCoefsArrayMatrix],\n            [transposeArrayMatrix(affineCoefsArrayMatrix), zerosArrayMatrix]\n        ]);\n        return coefsArrayMatrix;\n    }\n    /**\n     * Get 1x(N+3) coefsArray, populating the (N+3)x(N+3) coefsArrayMatrix\n     *\n     * The coefsArray has a 1xN kernel part and a 1x3 affine part.\n     *\n     * @param sourcePoint\n     */\n    getSourcePointCoefsArray(sourcePoint) {\n        return [\n            ...this.getRbfKernelSourcePointCoefsArray(sourcePoint),\n            ...Polynomial1.getPolynomial1SourcePointCoefsArray(sourcePoint)\n        ];\n    }\n    getRbfKernelSourcePointCoefsArray(sourcePoint) {\n        const kernelSourcePointCoefsArray = [];\n        for (let i = 0; i < this.pointCount; i++) {\n            kernelSourcePointCoefsArray.push(this.kernelFunction(this.normFunction(this.sourcePoints[i], sourcePoint), {\n                epsilon: this.epsilon\n            }));\n        }\n        return kernelSourcePointCoefsArray;\n    }\n    setWeightsArrays(weightsArrays, epsilon) {\n        if (epsilon) {\n            this.epsilon = epsilon;\n        }\n        super.setWeightsArrays(weightsArrays);\n    }\n    /**\n     * Solve the x and y components independently.\n     *\n     * This uses the exact inverse to compute (for each component, using the same coefs for both)\n     * the exact solution for the system of linear equations\n     * which is (in general) invertable to an exact solution.\n     *\n     * This wil result in a weights array for each component with rbf weights and affine weights.\n     */\n    solve() {\n        this.weightsArrays = solveIndependentlyInverse(this.coefsArrayMatrix, this.destinationPointsArrays);\n        this.processWeightsArrays();\n    }\n    processWeightsArrays() {\n        if (!this.weightsArrays) {\n            throw new Error('Weights not computed');\n        }\n        this.rbfWeightsArrays = this.weightsArrays.map((array) => array.slice(0, this.pointCount));\n        this.affineWeightsArrays = this.weightsArrays.map((array) => array.slice(this.pointCount));\n    }\n    evaluateFunction(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.rbfWeightsArrays || !this.affineWeightsArrays) {\n            throw new Error('RBF weights not computed');\n        }\n        const rbfWeights = this.rbfWeightsArrays;\n        const affineWeights = this.affineWeightsArrays;\n        // Compute the distances of that point to all control points\n        const newDistances = this.sourcePoints.map((sourcePoint) => this.normFunction(newSourcePoint, sourcePoint));\n        // Sum the weighted contributions of the input point\n        const newDestinationPoint = [0, 0];\n        for (let i = 0; i < 2; i++) {\n            // Apply the weights to the new distances\n            newDestinationPoint[i] = newDistances.reduce((sum, dist, index) => sum +\n                this.kernelFunction(dist, { epsilon: this.epsilon }) *\n                    rbfWeights[i][index], 0);\n            // Add the affine part\n            newDestinationPoint[i] +=\n                affineWeights[i][0] +\n                    affineWeights[i][1] * newSourcePoint[0] +\n                    affineWeights[i][2] * newSourcePoint[1];\n        }\n        return newDestinationPoint;\n    }\n    evaluatePartialDerivativeX(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.rbfWeightsArrays || !this.affineWeightsArrays) {\n            throw new Error('RBF weights not computed');\n        }\n        const rbfWeights = this.rbfWeightsArrays;\n        const affineWeights = this.affineWeightsArrays;\n        // Compute the distances of that point to all control points\n        const newDistances = this.sourcePoints.map((sourcePoint) => this.normFunction(newSourcePoint, sourcePoint));\n        // Sum the weighted contributions of the input point\n        const newDestinationPointPartDerX = [0, 0];\n        for (let i = 0; i < 2; i++) {\n            // Apply the weights to the new distances\n            newDestinationPointPartDerX[i] = newDistances.reduce((sum, dist, index) => sum +\n                (dist === 0\n                    ? 0\n                    : this.kernelFunction(dist, {\n                        derivative: 1,\n                        epsilon: this.epsilon\n                    }) *\n                        ((newSourcePoint[0] - this.sourcePoints[index][0]) / dist) *\n                        rbfWeights[i][index]), 0);\n            // Add the affine part\n            newDestinationPointPartDerX[i] += affineWeights[i][1];\n        }\n        return newDestinationPointPartDerX;\n    }\n    evaluatePartialDerivativeY(newSourcePoint) {\n        if (!this.weightsArrays) {\n            this.solve();\n        }\n        if (!this.rbfWeightsArrays || !this.affineWeightsArrays) {\n            throw new Error('RBF weights not computed');\n        }\n        const rbfWeights = this.rbfWeightsArrays;\n        const affineWeights = this.affineWeightsArrays;\n        // Compute the distances of that point to all control points\n        const newDistances = this.sourcePoints.map((sourcePoint) => this.normFunction(newSourcePoint, sourcePoint));\n        // Sum the weighted contributions of the input point\n        const newDestinationPointPartDerY = [0, 0];\n        for (let i = 0; i < 2; i++) {\n            // Apply the weights to the new distances\n            newDestinationPointPartDerY[i] = newDistances.reduce((sum, dist, index) => sum +\n                (dist === 0\n                    ? 0\n                    : this.kernelFunction(dist, {\n                        derivative: 1,\n                        epsilon: this.epsilon\n                    }) *\n                        ((newSourcePoint[1] - this.sourcePoints[index][1]) / dist) *\n                        rbfWeights[i][index]), 0);\n            // Add the affine part\n            newDestinationPointPartDerY[i] += affineWeights[i][2];\n        }\n        return newDestinationPointPartDerY;\n    }\n}\n", "/**\n * Linear kernel\n *\n * @param r - Radius\n * @param options - Kernel Function Options\n * @returns Evaluated kernel\n */\nexport function linearKernel(r, options) {\n    if (!options.derivative) {\n        return r;\n    }\n    else if (options.derivative === 1) {\n        return 1;\n    }\n    else {\n        throw new Error('Derivate of order ' + options.derivative + ' not implemented');\n    }\n}\n/**\n * Cubic kernel\n *\n * @param r - Radius\n * @param options - Kernel Function Options\n * @returns Evaluated kernel\n */\nexport function cubicKernel(r, options) {\n    if (!options.derivative) {\n        return Math.pow(r, 3);\n    }\n    else if (options.derivative === 1) {\n        return 3 * Math.pow(r, 2);\n    }\n    else {\n        throw new Error('Derivate of order ' + options.derivative + ' not implemented');\n    }\n}\n/**\n * Quintic kernel\n *\n * @param r - Radius\n * @param options - Kernel Function Options\n * @returns Evaluated kernel\n */\nexport function quinticKernel(r, options) {\n    if (!options.derivative) {\n        return Math.pow(r, 5);\n    }\n    else if (options.derivative === 1) {\n        return 5 * Math.pow(r, 4);\n    }\n    else {\n        throw new Error('Derivate of order ' + options.derivative + ' not implemented');\n    }\n}\n/**\n * Thin Plate Spline\n *\n * @param r - Radius\n * @param options - Kernel Function Options\n * @returns Evaluated kernel\n */\nexport function thinPlateKernel(r, options) {\n    if (!options.derivative) {\n        if (r === 0) {\n            return 0;\n        }\n        return Math.pow(r, 2) * Math.log(r);\n    }\n    else if (options.derivative === 1) {\n        if (r === 0) {\n            return 0;\n        }\n        return r + 2 * r * Math.log(r);\n    }\n    else {\n        throw new Error('Derivate of order ' + options.derivative + ' not implemented');\n    }\n}\n/**\n * Guassian kernel\n *\n * @param r - Radius\n * @param options - Kernel Function Options\n * @returns Evaluated kernel\n */\nexport function gaussianKernel(r, options) {\n    options.epsilon = options.epsilon || 1;\n    if (!options.derivative) {\n        return Math.exp(-Math.pow(r / options.epsilon, 2));\n    }\n    else if (options.derivative === 1) {\n        return (((-2 * r) / options.epsilon ** 2) *\n            Math.exp(-Math.pow(r / options.epsilon, 2)));\n    }\n    else {\n        throw new Error('Derivate of order ' + options.derivative + ' not implemented');\n    }\n}\n/**\n * Inverse Multiquadratic kernel\n *\n * @param r - Radius\n * @param options - Kernel Function Options\n * @returns Evaluated kernel\n */\nexport function inverseMultiquadricKernel(r, options) {\n    options.epsilon = options.epsilon || 1;\n    if (!options.derivative) {\n        return 1.0 / Math.sqrt(Math.pow(r / options.epsilon, 2) + 1);\n    }\n    else if (options.derivative === 1) {\n        return (-r /\n            (options.epsilon ** 2 *\n                Math.pow(Math.pow(r / options.epsilon, 2) + 1, 3 / 2)));\n    }\n    else {\n        throw new Error('Derivate of order ' + options.derivative + ' not implemented');\n    }\n}\n/**\n * Multiquadratic kernel\n *\n * @param r - Radius\n * @param options - Kernel Function Options\n * @returns Evaluated kernel\n */\nexport function multiquadricKernel(r, options) {\n    options.epsilon = options.epsilon || 1;\n    if (!options.derivative) {\n        return Math.sqrt(Math.pow(r / options.epsilon, 2) + 1);\n    }\n    else if (options.derivative === 1) {\n        return (r /\n            (options.epsilon ** 2 * Math.sqrt(Math.pow(r / options.epsilon, 2) + 1)));\n    }\n    else {\n        throw new Error('Derivate of order ' + options.derivative + ' not implemented');\n    }\n}\n", "export function euclideanNorm(point0, point1) {\n    const sub = [point1[0] - point0[0], point1[1] - point0[1]];\n    const norm = Math.sqrt(sub[0] ** 2 + sub[1] ** 2);\n    return norm;\n}\n", "import { midPoint, distance, squaredDistance, conformLineString, conformRing, bboxToRectangle } from '@allmaps/stdlib';\n// About Refinement Functions:\n//\n// Refinement function are used both in forward and backward transformation\n// and are the generalised approach to refine lineStrings, rings etc.\n// when they are transformed using a (forward or backward) 'refinement function'.\n//\n// See the way refinement methods are called:\n// with a different refinementFunction and refinementOptions for the forward and backward case.\n//\n// The concepts of 'source' and 'destination' for refinement methods\n// might therefore differ from the from the transform methods that called them.\n// For forward transform methods, 'source' and 'destination' in the refinement context\n// are the same as in their original transform context.\n// For backward transform methods, they are inversed.\n// Hence, in the refinement contect we always act source > destination.\nexport const defaultRefinementOptions = {\n    maxDepth: 0,\n    minOffsetRatio: 0,\n    minOffsetDistance: Infinity,\n    minLineDistance: Infinity,\n    sourceMidPointFunction: midPoint,\n    destinationMidPointFunction: midPoint,\n    destinationDistanceFunction: distance\n};\n// Refine Geometries\nexport function refineLineString(lineString, refinementFunction, refinementOptions) {\n    lineString = conformLineString(lineString);\n    const gcps = lineString.map((point) => ({\n        source: point,\n        destination: refinementFunction(point)\n    }));\n    const gcpLines = gcpsToGcpLines(gcps, false);\n    const refinedGcpLines = gcpLines\n        .map((gcpLine) => splitGcpLineRecursively(gcpLine, refinementFunction, refinementOptions, 0))\n        .flat(1);\n    return gcpLinesToGcps(refinedGcpLines, true);\n}\nexport function refineRing(ring, refinementFunction, refinementOptions) {\n    ring = conformRing(ring);\n    const gcps = ring.map((point) => ({\n        source: point,\n        destination: refinementFunction(point)\n    }));\n    const gcpLines = gcpsToGcpLines(gcps, true);\n    const refinedGcpLines = gcpLines\n        .map((line) => splitGcpLineRecursively(line, refinementFunction, refinementOptions, 0))\n        .flat(1);\n    return gcpLinesToGcps(refinedGcpLines, false);\n}\nfunction splitGcpLineRecursively(gcpLine, refinementFunction, refinementOptions, depth) {\n    const newMidGcp = newMidGcpIfShouldSplitGcpLine(gcpLine, refinementFunction, refinementOptions, depth);\n    if (newMidGcp) {\n        return [\n            splitGcpLineRecursively([gcpLine[0], newMidGcp], refinementFunction, refinementOptions, depth + 1),\n            splitGcpLineRecursively([newMidGcp, gcpLine[1]], refinementFunction, refinementOptions, depth + 1)\n        ].flat(1);\n    }\n    else {\n        return [gcpLine];\n    }\n}\n// Should split line\n// This function checks if a GcpLine should be splits\n// and returns the new midGcp if so, or undefined otherwise\nexport function newMidGcpIfShouldSplitGcpLine(gcpLine, refinementFunction, refinementOptions, depth) {\n    if (depth >= refinementOptions.maxDepth || refinementOptions.maxDepth <= 0) {\n        return undefined;\n    }\n    const { sourceMidPoint, destinationMidPointFromRefinementFunction, destinationMidPointsDistance, destinationLineDistance, destinationRefinedLineDistance } = splitGcpLinePointInfo(gcpLine, refinementFunction, refinementOptions);\n    const shouldSplit = shouldSplitGcpLine({\n        destinationMidPointsDistance,\n        destinationLineDistance,\n        destinationRefinedLineDistance\n    }, refinementOptions);\n    return shouldSplit\n        ? {\n            source: sourceMidPoint,\n            destination: destinationMidPointFromRefinementFunction\n        }\n        : undefined;\n}\nfunction splitGcpLinePointInfo(gcpLine, refinementFunction, refinementOptions) {\n    const sourceMidPoint = refinementOptions.sourceMidPointFunction(gcpLine[0].source, gcpLine[1].source);\n    const destinationMidPoint = refinementOptions.destinationMidPointFunction(gcpLine[0].destination, gcpLine[1].destination);\n    const destinationMidPointFromRefinementFunction = refinementFunction(sourceMidPoint);\n    const destinationLineDistance = refinementOptions.destinationDistanceFunction(gcpLine[0].destination, gcpLine[1].destination);\n    const destinationRefinedLineDistance = refinementOptions.destinationDistanceFunction(refinementFunction(gcpLine[0].source), refinementFunction(gcpLine[1].source));\n    const destinationMidPointsDistance = refinementOptions.destinationDistanceFunction(destinationMidPoint, destinationMidPointFromRefinementFunction);\n    return {\n        sourceMidPoint,\n        destinationMidPointFromRefinementFunction,\n        destinationMidPointsDistance,\n        destinationLineDistance,\n        destinationRefinedLineDistance\n    };\n}\nfunction shouldSplitGcpLine({ destinationMidPointsDistance, destinationLineDistance, destinationRefinedLineDistance }, refinementOptions) {\n    return (destinationMidPointsDistance / destinationLineDistance >\n        refinementOptions.minOffsetRatio ||\n        destinationMidPointsDistance > refinementOptions.minOffsetDistance ||\n        destinationRefinedLineDistance > refinementOptions.minLineDistance);\n}\n// Get source refinement resolution\nexport function getSourceRefinementResolution(sourceBbox, refinementFunction, refinementOptions) {\n    const sourceRectangle = bboxToRectangle(sourceBbox);\n    const sourcePointNE = sourceRectangle[2];\n    const sourcePointNW = sourceRectangle[3];\n    const sourcePointSE = sourceRectangle[1];\n    const sourcePointSW = sourceRectangle[0];\n    const sourcePointCE = refinementOptions.sourceMidPointFunction(sourcePointNE, sourcePointSE);\n    const sourcePointCW = refinementOptions.sourceMidPointFunction(sourcePointNW, sourcePointSW);\n    const sourcePointNC = refinementOptions.sourceMidPointFunction(sourcePointNE, sourcePointNW);\n    const sourcePointSC = refinementOptions.sourceMidPointFunction(sourcePointSE, sourcePointSW);\n    // Get horizontal and vertical lines from points\n    const sourceHorizontalLine = [sourcePointCE, sourcePointCW];\n    const sourceVerticalLine = [sourcePointNC, sourcePointSC];\n    // Refine lines\n    const sourceRefinedHorizontalLineString = refineLineString(sourceHorizontalLine, refinementFunction, refinementOptions).map((generalGcp) => generalGcp.source);\n    const sourceRefinedVerticalLineString = refineLineString(sourceVerticalLine, refinementFunction, refinementOptions).map((generalGcp) => generalGcp.source);\n    if (sourceRefinedHorizontalLineString.length === 2 &&\n        sourceRefinedVerticalLineString.length === 2) {\n        return undefined;\n    }\n    // Compute minimal line length of refinement\n    const sourceMinHorizontalLineSquaredLengths = [];\n    for (let i = 0; i < sourceRefinedHorizontalLineString.length - 1; i++) {\n        sourceMinHorizontalLineSquaredLengths.push(squaredDistance(sourceRefinedHorizontalLineString[i], sourceRefinedHorizontalLineString[i + 1]));\n    }\n    const sourceMinHorizontalLineLength = Math.sqrt(Math.min(...sourceMinHorizontalLineSquaredLengths));\n    const sourceMinVerticalLineSquaredLengths = [];\n    for (let i = 0; i < sourceRefinedVerticalLineString.length - 1; i++) {\n        sourceMinVerticalLineSquaredLengths.push(squaredDistance(sourceRefinedVerticalLineString[i], sourceRefinedVerticalLineString[i + 1]));\n    }\n    const sourceMinVerticalLineLength = Math.sqrt(Math.min(...sourceMinVerticalLineSquaredLengths));\n    // Compute cols and rows by comparing minimal line length to original length\n    // Note: Tried to acchieve this by working with unflattened refined line and computing depth\n    // but that proved difficult for TypeScript\n    const sourceMinLineLength = Math.min(sourceMinHorizontalLineLength, sourceMinVerticalLineLength);\n    return sourceMinLineLength;\n}\n// Convert\nexport function gcpsToGcpLines(gcps, close = false) {\n    const lineCount = gcps.length - (close ? 0 : 1);\n    const lines = [];\n    for (let index = 0; index < lineCount; index++) {\n        lines.push([gcps[index], gcps[(index + 1) % gcps.length]]);\n    }\n    return lines;\n}\nexport function gcpLinesToGcps(lines, close = false) {\n    const gcps = lines.map((line) => line[0]);\n    if (close) {\n        gcps.push(lines[lines.length - 1][1]);\n    }\n    return gcps;\n}\n", "// TODO: consider implementing these functions in stdlib instead of using dependencies\nimport getWorldMidpoint from '@turf/midpoint';\nimport getWorldDistance from '@turf/distance';\nimport { mergeOptions } from '@allmaps/stdlib';\nimport { defaultRefinementOptions } from './refinement-functions.js';\n// Options\nexport const defaultGeneralGcpTransformOptions = {\n    maxDepth: 0,\n    minOffsetRatio: 0,\n    minOffsetDistance: Infinity,\n    minLineDistance: Infinity,\n    sourceIsGeographic: false,\n    destinationIsGeographic: false,\n    isMultiGeometry: false,\n    distortionMeasures: [],\n    referenceScale: 1,\n    preForward: (point) => point,\n    postForward: (point) => point,\n    preBackward: (point) => point,\n    postBackward: (point) => point\n};\nexport const defaultGeneralGcpTransformerOptions = {\n    differentHandedness: false,\n    ...defaultGeneralGcpTransformOptions\n};\nexport function gcpTransformOptionsToGeneralGcpTransformOptions(gcpTransformOptions) {\n    if (gcpTransformOptions === undefined) {\n        return {};\n    }\n    const generalGcpTransformOptions = gcpTransformOptions;\n    if (gcpTransformOptions.geoIsGeographic) {\n        generalGcpTransformOptions.destinationIsGeographic =\n            gcpTransformOptions.geoIsGeographic;\n    }\n    if (gcpTransformOptions.postToGeo) {\n        generalGcpTransformOptions.postForward = gcpTransformOptions.postToGeo;\n    }\n    if (gcpTransformOptions.preToResource) {\n        generalGcpTransformOptions.preBackward = gcpTransformOptions.preToResource;\n    }\n    return generalGcpTransformOptions;\n}\nexport function gcpTransformerOptionsToGeneralGcpTransformerOptions(gcpTransformerOptions) {\n    if (gcpTransformerOptions === undefined) {\n        return {};\n    }\n    // Note: None of the transformer options need to be adapted\n    // only the transform options that could be included in them\n    const generalGcpTransformerOptions = gcpTransformOptionsToGeneralGcpTransformOptions(gcpTransformerOptions);\n    return generalGcpTransformerOptions;\n}\nexport function generalGcpTransformOptionsToGcpTransformOptions(generalGcpTransformOptions) {\n    if (generalGcpTransformOptions === undefined) {\n        return {};\n    }\n    const gcpTransformOptions = generalGcpTransformOptions;\n    if (generalGcpTransformOptions.destinationIsGeographic) {\n        gcpTransformOptions.geoIsGeographic =\n            generalGcpTransformOptions.destinationIsGeographic;\n    }\n    if (generalGcpTransformOptions.postForward) {\n        gcpTransformOptions.postToGeo = generalGcpTransformOptions.postForward;\n    }\n    if (generalGcpTransformOptions.preBackward) {\n        gcpTransformOptions.preToResource = generalGcpTransformOptions.preBackward;\n    }\n    return gcpTransformOptions;\n}\nexport function generalGcpTransformerOptionsToGcpTransformerOptions(generalGcpTransformerOptions) {\n    if (generalGcpTransformerOptions == undefined) {\n        return {};\n    }\n    const gcpTransformerOptions = generalGcpTransformerOptions;\n    return gcpTransformerOptions;\n}\nexport const defaultGcpTransformOptions = generalGcpTransformOptionsToGcpTransformOptions(defaultGeneralGcpTransformOptions);\nexport const defaultGcpTransformerOptions = generalGcpTransformerOptionsToGcpTransformerOptions(defaultGeneralGcpTransformerOptions);\nexport function refinementOptionsFromForwardTransformOptions(generalGcpTransformOptions) {\n    const refinementOptions = mergeOptions(defaultRefinementOptions, {\n        minOffsetRatio: generalGcpTransformOptions.minOffsetRatio,\n        minOffsetDistance: generalGcpTransformOptions.minOffsetDistance,\n        minLineDistance: generalGcpTransformOptions.minLineDistance,\n        maxDepth: generalGcpTransformOptions.maxDepth\n    });\n    if (generalGcpTransformOptions.sourceIsGeographic) {\n        refinementOptions.sourceMidPointFunction = (point0, point1) => getWorldMidpoint(point0, point1).geometry.coordinates;\n    }\n    if (generalGcpTransformOptions.destinationIsGeographic) {\n        refinementOptions.destinationMidPointFunction = (point0, point1) => getWorldMidpoint(point0, point1).geometry.coordinates;\n        refinementOptions.destinationDistanceFunction = getWorldDistance;\n    }\n    return refinementOptions;\n}\nexport function refinementOptionsFromBackwardTransformOptions(generalGcpTransformOptions) {\n    const refinementOptions = mergeOptions(defaultRefinementOptions, {\n        minOffsetRatio: generalGcpTransformOptions.minOffsetRatio,\n        minOffsetDistance: generalGcpTransformOptions.minOffsetDistance,\n        minLineDistance: generalGcpTransformOptions.minLineDistance,\n        maxDepth: generalGcpTransformOptions.maxDepth\n    });\n    if (generalGcpTransformOptions.destinationIsGeographic) {\n        refinementOptions.sourceMidPointFunction = (point0, point1) => getWorldMidpoint(point0, point1).geometry.coordinates;\n    }\n    if (generalGcpTransformOptions.sourceIsGeographic) {\n        refinementOptions.destinationMidPointFunction = (point0, point1) => getWorldMidpoint(point0, point1).geometry.coordinates;\n        refinementOptions.destinationDistanceFunction = getWorldDistance;\n    }\n    return refinementOptions;\n}\n", "// Invert\nexport function invertGeneralGcp(generalGcp) {\n    return { source: generalGcp.destination, destination: generalGcp.source };\n}\nexport function invertGcp(gcp) {\n    return { resource: gcp.geo, geo: gcp.resource };\n}\n// Select\nexport function generalGcpToPointForForward(generalGcp) {\n    return generalGcp.destination;\n}\nexport function generalGcpToPointForBackward(generalGcp) {\n    return generalGcp.source;\n}\nexport function gcpToPointForToGeo(gcp) {\n    return gcp.geo;\n}\nexport function gcpToPointForToResource(gcp) {\n    return gcp.resource;\n}\n// GeneralGcp <> G\nexport function generalGcpToGcp(generalGcp) {\n    return {\n        resource: generalGcp.source,\n        geo: generalGcp.destination,\n        partialDerivativeX: generalGcp.partialDerivativeX,\n        partialDerivativeY: generalGcp.partialDerivativeY,\n        distortions: generalGcp.distortions,\n        distortion: generalGcp.distortion\n    };\n}\nexport function gcpToGeneralGcp(gcp) {\n    return {\n        source: gcp.resource,\n        destination: gcp.geo,\n        partialDerivativeX: gcp.partialDerivativeX,\n        partialDerivativeY: gcp.partialDerivativeY,\n        distortions: gcp.distortions,\n        distortion: gcp.distortion\n    };\n}\n", "import { isPoint, isLineString, isPolygon, isMultiPoint, isMultiLineString, isMultiPolygon, flipY, mergeOptions } from '@allmaps/stdlib';\nimport { computeDistortionsFromPartialDerivatives } from '../shared/distortion.js';\nimport { Straight } from '../transformation-types/Straight.js';\nimport { Helmert } from '../transformation-types/Helmert.js';\nimport { Polynomial1 } from '../transformation-types/Polynomial1.js';\nimport { Polynomial2 } from '../transformation-types/Polynomial2.js';\nimport { Polynomial3 } from '../transformation-types/Polynomial3.js';\nimport { Projective } from '../transformation-types/Projective.js';\nimport { RBF } from '../transformation-types/RBF.js';\nimport { linearKernel, thinPlateKernel } from '../shared/kernel-functions.js';\nimport { euclideanNorm } from '../shared/norm-functions.js';\nimport { defaultGeneralGcpTransformerOptions, refinementOptionsFromBackwardTransformOptions, refinementOptionsFromForwardTransformOptions } from '../shared/transform-functions.js';\nimport { refineLineString, refineRing, getSourceRefinementResolution } from '../shared/refinement-functions.js';\nimport { generalGcpToPointForForward, generalGcpToPointForBackward, invertGeneralGcp } from '../shared/conversion-functions.js';\n/**\n * Abstract class for Ground Control Point Transformers.\n *\n * This class contains all logic to transform geometries\n * made available trough the GeneralGcpTransform and GcpTransform classes.\n *\n * The extending GeneralGcpTransform class handles the general case where:\n * - We read in Ground Control Points using the GeneralGcp type, with `source` and `destination` fields.\n * - We use the terms 'forward' and 'backward' for the two transformations.\n * - Both source and destination space are exected to be 2D cartesian spaces with the same handedness (x- and y-axes have the same orientations).\n *\n * The extending GcpTransform class handles the typical Allmaps case where:\n * - We read in Ground Control Points using the Gcp type, with `resource` and `geo` fields.\n * - We use the terms 'toGeo' for the 'forward' transformation and 'toResource' for the 'backward' transformation.\n * - The `differentHandedness` setting is `true` by default, since we expect the resource coordinates to identify pixels on an image, with origin in the top left and the y-axis pointing down.\n * */\nexport class BaseGcpTransformer {\n    generalGcpsInternal;\n    sourcePointsInternal;\n    destinationPointsInternal;\n    type;\n    transformerOptions;\n    forwardTransformation;\n    backwardTransformation;\n    /**\n     * Create a BaseGcpTransformer\n     *\n     * @param generalGcps - An array of General Ground Control Points (GCPs)\n     * @param type - The transformation type\n     * @param partialGeneralGcpTransformerOptions - General GCP Transformer options\n     */ constructor(generalGcps, type = 'polynomial', partialGeneralGcpTransformerOptions) {\n        this.transformerOptions = mergeOptions(defaultGeneralGcpTransformerOptions, partialGeneralGcpTransformerOptions);\n        if (generalGcps.length === 0) {\n            throw new Error('No control points');\n        }\n        this.generalGcpsInternal = generalGcps;\n        this.sourcePointsInternal = this.generalGcpsInternal.map((generalGcp) => {\n            const source = this.transformerOptions.differentHandedness\n                ? flipY(generalGcp.source)\n                : generalGcp.source;\n            return this.transformerOptions.preForward(source);\n        });\n        this.destinationPointsInternal = this.generalGcpsInternal.map((generalGcp) => this.transformerOptions.preBackward(generalGcp.destination));\n        this.type = type;\n    }\n    /**\n     * Get the forward transformation. Create if it doesn't exist yet.\n     */\n    getForwardTransformationInternal() {\n        if (!this.forwardTransformation) {\n            this.forwardTransformation = this.createTransformation(this.sourcePointsInternal, this.destinationPointsInternal);\n        }\n        return this.forwardTransformation;\n    }\n    /**\n     * Get the backward transformation. Create if it doesn't exist yet.\n     */\n    getBackwardTransformationInternal() {\n        if (!this.backwardTransformation) {\n            this.backwardTransformation = this.createTransformation(this.destinationPointsInternal, this.sourcePointsInternal);\n        }\n        return this.backwardTransformation;\n    }\n    /**\n     * Create the (forward or backward) transformation.\n     *\n     * Results in forward transformation if source and destination points are entered as such.\n     * Results in backward if source points are entered for destination points and vice versa.\n     *\n     * Results in a transformation of this instance's transformation type.\n     *\n     * @param sourcePoints - source points\n     * @param destinationPoints - destination points\n     * @returns Transformation\n     */\n    createTransformation(sourcePoints, destinationPoints) {\n        if (this.type === 'straight') {\n            return new Straight(sourcePoints, destinationPoints);\n        }\n        else if (this.type === 'helmert') {\n            return new Helmert(sourcePoints, destinationPoints);\n        }\n        else if (this.type === 'polynomial1' || this.type === 'polynomial') {\n            return new Polynomial1(sourcePoints, destinationPoints);\n        }\n        else if (this.type === 'polynomial2') {\n            return new Polynomial2(sourcePoints, destinationPoints);\n        }\n        else if (this.type === 'polynomial3') {\n            return new Polynomial3(sourcePoints, destinationPoints);\n        }\n        else if (this.type === 'projective') {\n            return new Projective(sourcePoints, destinationPoints);\n        }\n        else if (this.type === 'thinPlateSpline') {\n            return new RBF(sourcePoints, destinationPoints, thinPlateKernel, euclideanNorm, 'thinPlateSpline');\n        }\n        else if (this.type === 'linear') {\n            return new RBF(sourcePoints, destinationPoints, linearKernel, euclideanNorm, 'linear');\n        }\n        else {\n            throw new Error(`Unsupported transformation type: ${this.type}`);\n        }\n    }\n    /**\n     * Get the resolution of the forward transformation in source space, within a given bbox.\n     *\n     * This informs you in how fine the warping is, in source space.\n     * It can be useful e.g. to create a triangulation in source space\n     * that is fine enough for this warping.\n     *\n     * It is obtained by transforming forward two linestring,\n     * namely the horizontal and vertical midlines of the given bbox.\n     * The forward transformation will refine these lines:\n     * it will break them in small enough pieces to obtain a near continuous result.\n     * Returned in the length of the shortest piece, measured in source coordinates.\n     *\n     * @param sourceBbox - BBox in source space where the resolution is requested\n     * @param partialGeneralGcpTransformOptions - General GCP Transform options to consider during the transformation\n     * @returns Resolution of the forward transformation in source space\n     */\n    getForwardTransformationResolutionInternal(sourceBbox, partialGeneralGcpTransformOptions) {\n        const transformOptions = mergeOptions(this.transformerOptions, partialGeneralGcpTransformOptions);\n        return getSourceRefinementResolution(sourceBbox, (p) => this.transformForwardInternal(p, transformOptions), refinementOptionsFromForwardTransformOptions(transformOptions));\n    }\n    /**\n     * Get the resolution of the backward transformation in destination space, within a given bbox.\n     *\n     * This informs you in how fine the warping is, in destination space.\n     * It can be useful e.g. to create a triangulation in destination space\n     * that is fine enough for this warping.\n     *\n     * It is obtained by transforming backward two linestring,\n     * namely the horizontal and vertical midlines of the given bbox.\n     * The backward transformation will refine these lines:\n     * it will break them in small enough pieces to obtain a near continuous result.\n     * Returned in the length of the shortest piece, measured in destination coordinates.\n     *\n     * @param destinationBbox - BBox in destination space where the resolution is requested\n     * @param partialGeneralGcpTransformOptions - General GCP Transform options to consider during the transformation\n     * @returns Resolution of the backward transformation in destination space\n     */\n    getBackwardTransformationResolutionInternal(destinationBbox, partialGeneralGcpTransformOptions) {\n        const transformOptions = mergeOptions(this.transformerOptions, partialGeneralGcpTransformOptions);\n        return getSourceRefinementResolution(destinationBbox, (p) => this.transformBackwardInternal(p, transformOptions), refinementOptionsFromBackwardTransformOptions(transformOptions));\n    }\n    /**\n     * Transform a geometry forward\n     *\n     * @param geometry - Geometry to transform\n     * @param partialGeneralGcpTransformOptions - General GCP Transform options\n     * @param generalGcpToP - Return type function\n     * @returns Forward transform of input geometry\n     */\n    transformForwardInternal(geometry, partialGeneralGcpTransformOptions, generalGcpToP = generalGcpToPointForForward) {\n        const transformOptions = mergeOptions(this.transformerOptions, partialGeneralGcpTransformOptions);\n        if (!transformOptions.isMultiGeometry) {\n            if (isPoint(geometry)) {\n                return this.transformPointForwardInternal(geometry, transformOptions, generalGcpToP);\n            }\n            else if (isLineString(geometry)) {\n                return this.transformLineStringForwardInternal(geometry, transformOptions, generalGcpToP);\n            }\n            else if (isPolygon(geometry)) {\n                return this.transformPolygonForwardInternal(geometry, transformOptions, generalGcpToP);\n            }\n            else {\n                throw new Error('Geometry type not supported');\n            }\n        }\n        else {\n            if (partialGeneralGcpTransformOptions) {\n                partialGeneralGcpTransformOptions.isMultiGeometry = false; // false for piecewise single geometries\n            }\n            if (isMultiPoint(geometry)) {\n                return geometry.map((element) => this.transformForwardInternal(element, partialGeneralGcpTransformOptions, generalGcpToP));\n            }\n            else if (isMultiLineString(geometry)) {\n                return geometry.map((element) => this.transformForwardInternal(element, partialGeneralGcpTransformOptions, generalGcpToP));\n            }\n            else if (isMultiPolygon(geometry)) {\n                return geometry.map((element) => this.transformForwardInternal(element, partialGeneralGcpTransformOptions, generalGcpToP));\n            }\n            else {\n                throw new Error('Geometry type not supported');\n            }\n        }\n    }\n    /**\n     * Transform a geometry backward\n     *\n     * @param geometry - Geometry to transform\n     * @param partialGeneralGcpTransformOptions - General GCP Transform options\n     * @param generalGcpToP - Return type function\n     * @returns Backward transform of input geometry\n     */\n    transformBackwardInternal(geometry, partialGeneralGcpTransformOptions, generalGcpToP = generalGcpToPointForBackward) {\n        const transformOptions = mergeOptions(this.transformerOptions, partialGeneralGcpTransformOptions);\n        if (!transformOptions.isMultiGeometry) {\n            if (isPoint(geometry)) {\n                return this.transformPointBackwardInternal(geometry, transformOptions, generalGcpToP);\n            }\n            else if (isLineString(geometry)) {\n                return this.transformLineStringBackwardInternal(geometry, transformOptions, generalGcpToP);\n            }\n            else if (isPolygon(geometry)) {\n                return this.transformPolygonBackwardInternal(geometry, transformOptions, generalGcpToP);\n            }\n            else {\n                throw new Error('Geometry type not supported');\n            }\n        }\n        else {\n            if (partialGeneralGcpTransformOptions) {\n                partialGeneralGcpTransformOptions.isMultiGeometry = false; // false for piecewise single geometries\n            }\n            if (isMultiPoint(geometry)) {\n                return geometry.map((element) => this.transformBackwardInternal(element, partialGeneralGcpTransformOptions, generalGcpToP));\n            }\n            else if (isMultiLineString(geometry)) {\n                return geometry.map((element) => this.transformBackwardInternal(element, partialGeneralGcpTransformOptions, generalGcpToP));\n            }\n            else if (isMultiPolygon(geometry)) {\n                return geometry.map((element) => this.transformBackwardInternal(element, partialGeneralGcpTransformOptions, generalGcpToP));\n            }\n            else {\n                throw new Error('Geometry type not supported');\n            }\n        }\n    }\n    // Handle specific geometries\n    transformPointForwardInternal(point, generalGcpTransformOptions, generalGcpToP = generalGcpToPointForForward) {\n        const forwardTransformation = this.getForwardTransformationInternal();\n        let source = this.transformerOptions.differentHandedness\n            ? flipY(point)\n            : point;\n        source = generalGcpTransformOptions.preForward(source);\n        let destination = forwardTransformation.evaluateFunction(source);\n        destination = generalGcpTransformOptions.postForward(destination);\n        let partialDerivativeX = undefined;\n        let partialDerivativeY = undefined;\n        let distortions = new Map();\n        if (generalGcpTransformOptions.distortionMeasures.length > 0) {\n            partialDerivativeX =\n                forwardTransformation.evaluatePartialDerivativeX(source);\n            partialDerivativeY =\n                forwardTransformation.evaluatePartialDerivativeY(source);\n            distortions = computeDistortionsFromPartialDerivatives(generalGcpTransformOptions.distortionMeasures, partialDerivativeX, partialDerivativeY, generalGcpTransformOptions.referenceScale);\n        }\n        return generalGcpToP({\n            source: point, // don't apply differentHandedness here, this is only internally.\n            destination,\n            partialDerivativeX,\n            partialDerivativeY,\n            distortions\n        });\n    }\n    transformPointBackwardInternal(point, generalGcpTransformOptions, generalGcpToP = generalGcpToPointForBackward) {\n        const backwardTransformation = this.getBackwardTransformationInternal();\n        const destination = generalGcpTransformOptions.preBackward(point);\n        let source = backwardTransformation.evaluateFunction(destination);\n        // apply differentHandedness here again, so it has been applied twice in total and is undone now.\n        source = generalGcpTransformOptions.postBackward(source);\n        source = this.transformerOptions.differentHandedness\n            ? flipY(source)\n            : source;\n        let partialDerivativeX = undefined;\n        let partialDerivativeY = undefined;\n        let distortions = new Map();\n        if (generalGcpTransformOptions.distortionMeasures.length > 0) {\n            partialDerivativeX =\n                backwardTransformation.evaluatePartialDerivativeX(destination);\n            partialDerivativeX = this.transformerOptions.differentHandedness\n                ? flipY(partialDerivativeX)\n                : partialDerivativeX;\n            partialDerivativeY =\n                backwardTransformation.evaluatePartialDerivativeY(destination);\n            partialDerivativeY = this.transformerOptions.differentHandedness\n                ? flipY(partialDerivativeY)\n                : partialDerivativeY;\n            distortions = computeDistortionsFromPartialDerivatives(generalGcpTransformOptions.distortionMeasures, partialDerivativeX, partialDerivativeY, generalGcpTransformOptions.referenceScale);\n        }\n        return generalGcpToP({\n            source,\n            destination,\n            partialDerivativeX,\n            partialDerivativeY,\n            distortions\n        });\n    }\n    transformLineStringForwardInternal(lineString, generalGcpTransformOptions, generalGcpToP) {\n        return refineLineString(lineString, (p) => this.transformPointForwardInternal(p, generalGcpTransformOptions), refinementOptionsFromForwardTransformOptions(generalGcpTransformOptions)).map((generalGcp) => generalGcpToP(generalGcp));\n    }\n    transformLineStringBackwardInternal(lineString, generalGcpTransformOptions, generalGcpToP) {\n        return refineLineString(lineString, (p) => this.transformPointBackwardInternal(p, generalGcpTransformOptions), refinementOptionsFromBackwardTransformOptions(generalGcpTransformOptions)).map((generalGcp) => generalGcpToP(invertGeneralGcp(generalGcp)));\n    }\n    transformRingForwardInternal(ring, generalGcpTransformOptions, generalGcpToP) {\n        return refineRing(ring, (p) => this.transformPointForwardInternal(p, generalGcpTransformOptions), refinementOptionsFromForwardTransformOptions(generalGcpTransformOptions)).map((generalGcp) => generalGcpToP(generalGcp));\n    }\n    transformRingBackwardInternal(ring, generalGcpTransformOptions, generalGcpToP) {\n        return refineRing(ring, (p) => this.transformPointBackwardInternal(p, generalGcpTransformOptions), refinementOptionsFromBackwardTransformOptions(generalGcpTransformOptions)).map((generalGcp) => generalGcpToP(invertGeneralGcp(generalGcp)));\n    }\n    transformPolygonForwardInternal(polygon, generalGcpTransformOptions, generalGcpToP) {\n        return polygon.map((ring) => {\n            return this.transformRingForwardInternal(ring, generalGcpTransformOptions, generalGcpToP);\n        });\n    }\n    transformPolygonBackwardInternal(polygon, generalGcpTransformOptions, generalGcpToP) {\n        return polygon.map((ring) => {\n            return this.transformRingBackwardInternal(ring, generalGcpTransformOptions, generalGcpToP);\n        });\n    }\n}\n", "import { geojsonGeometryToGeometry, geojsonGeometriesToGeojsonFeatureCollection, geojsonFeatureCollectionToGeojsonGeometries, geometryToGeojsonGeometry, geometryToSvgGeometry, stringToSvgGeometriesGenerator, svgGeometriesToSvgString, svgGeometryToGeometry, mergePartialOptions, mergeOptions } from '@allmaps/stdlib';\nimport { BaseGcpTransformer } from './BaseGcpTransformer.js';\nimport { gcpTransformerOptionsToGeneralGcpTransformerOptions, gcpTransformOptionsToGeneralGcpTransformOptions } from '../shared/transform-functions.js';\nimport { gcpToGeneralGcp, gcpToPointForToGeo, gcpToPointForToResource, generalGcpToGcp } from '../shared/conversion-functions.js';\n/**\n * Class for Ground Control Point Transformers.\n *\n * A GCP Transformer can transform input geometries between 'resource' and 'geo' spaces.\n *\n * It does this using a transformation (of a certain type) built from\n * a set of Ground Control Points (with coordinates in\n * resource and geo space) and a transformation type.\n *\n * It has a method to transform 'toGeo' (from resource to geo space)\n * and 'toResource' (from geo to resource space),\n *\n * This class differs from the GeneralGcpTransformer class in that\n * it specifically handles the typical Allmaps case where:\n * - We read in Ground Control Points using the Gcp type, with `resource` and `geo` fields.\n * - We use the terms 'toGeo' for the 'forward' transformation and 'toResource' for the 'backward' transformation.\n * - The `differentHandedness` setting is `true` by default, since we expect the resource coordinates to identify pixels on an image, with origin in the top left and the y-axis pointing down.\n * */\nexport class GcpTransformer extends BaseGcpTransformer {\n    /**\n     * Create a GcpTransformer\n     *\n     * @param gcps - An array of Ground Control Points (GCPs)\n     * @param type - The transformation type\n     * @param partialGcpTransformerOptions - GCP Transformer options\n     */ constructor(gcps, type = 'polynomial', partialGcpTransformerOptions) {\n        const generalGcps = gcps.map(gcpToGeneralGcp);\n        partialGcpTransformerOptions = mergePartialOptions({ differentHandedness: true }, partialGcpTransformerOptions);\n        super(generalGcps, type, gcpTransformerOptionsToGeneralGcpTransformerOptions(partialGcpTransformerOptions));\n    }\n    get gcps() {\n        return this.generalGcpsInternal.map(generalGcpToGcp);\n    }\n    /**\n     * Get the forward transformation. Create if it doesn't exist yet.\n     */\n    getToGeoTransformation() {\n        return super.getForwardTransformationInternal();\n    }\n    /**\n     * Get the backward transformation. Create if it doesn't exist yet.\n     */\n    getToResourceTransformation() {\n        return super.getBackwardTransformationInternal();\n    }\n    /**\n     * Get the resolution of the toGeo transformation in resource space, within a given bbox.\n     *\n     * This informs you in how fine the warping is, in resource space.\n     * It can be useful e.g. to create a triangulation in resource space\n     * that is fine enough for this warping.\n     *\n     * It is obtained by transforming toGeo two linestring,\n     * namely the horizontal and vertical midlines of the given bbox.\n     * The toGeo transformation will refine these lines:\n     * it will break them in small enough pieces to obtain a near continuous result.\n     * Returned in the length of the shortest piece, measured in resource coordinates.\n     *\n     * @param resourceBbox - BBox in resource space where the resolution is requested\n     * @param partialGcpTransformOptions - GCP Transform options to consider during the transformation\n     * @returns Resolution of the toGeo transformation in resource space\n     */\n    getToGeoTransformationResolution(resourceBbox, partialGcpTransformOptions) {\n        const partialGeneralGcpTransformOptions = gcpTransformOptionsToGeneralGcpTransformOptions(partialGcpTransformOptions);\n        return super.getForwardTransformationResolutionInternal(resourceBbox, partialGeneralGcpTransformOptions);\n    }\n    /**\n     * Get the resolution of the toResource transformation in geo space, within a given bbox.\n     *\n     * This informs you in how fine the warping is, in geo space.\n     * It can be useful e.g. to create a triangulation in geo space\n     * that is fine enough for this warping.\n     *\n     * It is obtained by transforming toResource two linestring,\n     * namely the horizontal and vertical midlines of the given bbox.\n     * The toResource transformation will refine these lines:\n     * it will break them in small enough pieces to obtain a near continuous result.\n     * Returned in the length of the shortest piece, measured in geo coordinates.\n     *\n     * @param geoBbox - BBox in geo space where the resolution is requested\n     * @param partialGcpTransformOptions - GCP Transform options to consider during the transformation\n     * @returns Resolution of the toResource transformation in geo space\n     */\n    getToResourceTransformationResolution(geoBbox, partialGcpTransformOptions) {\n        const generalGcpTransformOptions = gcpTransformOptionsToGeneralGcpTransformOptions(partialGcpTransformOptions);\n        return super.getBackwardTransformationResolutionInternal(geoBbox, generalGcpTransformOptions);\n    }\n    /**\n     * Get the transformer options.\n     */\n    getTransformerOptions() {\n        return this.transformerOptions;\n    }\n    /**\n     * Set the transformer options.\n     *\n     * Use with caution, especially for options that have effects in the constructor.\n     */\n    setTransformerOptionsInternal(partialGcpTransformerOptions) {\n        this.transformerOptions = mergeOptions(this.transformerOptions, gcpTransformerOptionsToGeneralGcpTransformerOptions(partialGcpTransformerOptions));\n    }\n    /**\n     * Transform a geometry to geo space\n     *\n     * @param geometry - Geometry to transform\n     * @param partialGcpTransformOptions - GCP Transform options\n     * @param gcpToP - Return type function\n     * @returns Input geometry transformed to geo space\n     */\n    transformToGeo(geometry, partialGcpTransformOptions, gcpToP = gcpToPointForToGeo) {\n        const generalGcpToP = (generalGcp) => gcpToP(generalGcpToGcp(generalGcp));\n        const partialGeneralGcpTransformOptions = partialGcpTransformOptions\n            ? gcpTransformOptionsToGeneralGcpTransformOptions(partialGcpTransformOptions)\n            : undefined;\n        return super.transformForwardInternal(geometry, partialGeneralGcpTransformOptions, generalGcpToP);\n    }\n    /**\n     * Transform a geometry to resource space\n     *\n     * @param geometry - Geometry to transform\n     * @param partialGcpTransformOptions - GCP Transform options\n     * @param gcpToP - Return type function\n     * @returns Input geometry transformed to resource space\n     */\n    transformToResource(geometry, partialGcpTransformOptions, gcpToP = gcpToPointForToResource) {\n        const generalGcpToP = (generalGcp) => gcpToP(generalGcpToGcp(generalGcp));\n        const partialGeneralGcpTransformOptions = partialGcpTransformOptions\n            ? gcpTransformOptionsToGeneralGcpTransformOptions(partialGcpTransformOptions)\n            : undefined;\n        return super.transformBackwardInternal(geometry, partialGeneralGcpTransformOptions, generalGcpToP);\n    }\n    /**\n     * Transform an SVG geometry to geo space as a GeoJSON Geometry\n     *\n     * This is a shortcut method, available as static method in order not to overpopulate intellisense suggestions\n     * Note: since this converts to GeoJSON we assume geo-space is in lon-lat WGS84 and automatically set `destinationIsGeographic` to use geographically computed midpoints.\n     * Note: Multi-geometries are not supported\n     *\n     * @param transformer - A GCP Transformer defining the transformation\n     * @param geometry - SVG geometry to transform\n     * @param partialGcpTransformOptions - GCP Transform options\n     * @returns Input SVG geometry transformed to geo space, as a GeoJSON Geometry\n     */\n    static transformSvgToGeojson(transformer, svgGeometry, partialGcpTransformOptions) {\n        partialGcpTransformOptions = mergePartialOptions({ geoIsGeographic: true }, partialGcpTransformOptions);\n        // This middle step is needed to make typescript happy\n        const transformedGeometry = transformer.transformToGeo(svgGeometryToGeometry(svgGeometry), partialGcpTransformOptions);\n        return geometryToGeojsonGeometry(transformedGeometry);\n    }\n    /**\n     * Transform an SVG string to geo space to a GeoJSON FeatureCollection\n     *\n     * This is a shortcut method, available as static method in order not to overpopulate intellisense suggestions\n     * Note: since this converts to GeoJSON we assume geo-space is in lon-lat WGS84 and automatically set `destinationIsGeographic` to use geographically computed midpoints.\n     * Note: Multi-geometries are not supported\n     *\n     * @param transformer - A GCP Transformer defining the transformation\n     * @param svg - An SVG string to transform\n     * @param partialGcpTransformOptions - GCP Transform options\n     * @returns Input SVG string transformed to geo space, as a GeoJSON FeatureCollection\n     */\n    static transformSvgStringToGeojsonFeatureCollection(transformer, svg, partialGcpTransformOptions) {\n        const geojsonGeometries = [];\n        for (const svgGeometry of stringToSvgGeometriesGenerator(svg)) {\n            const geojsonGeometry = this.transformSvgToGeojson(transformer, svgGeometry, partialGcpTransformOptions);\n            geojsonGeometries.push(geojsonGeometry);\n        }\n        return geojsonGeometriesToGeojsonFeatureCollection(geojsonGeometries);\n    }\n    /**\n     * Transform a GeoJSON Geometry to resource space to a SVG geometry\n     *\n     * This is a shortcut method, available as static method in order not to overpopulate intellisense suggestions\n     * Note: since this converts from GeoJSON we assume geo-space is in lon-lat WGS84 and automatically set `destinationIsGeographic` to use geographically computed midpoints.\n     * Note: Multi-geometries are not supported\n     *\n     * @param transformer - A GCP Transformer defining the transformation\n     * @param geojsonGeometry - GeoJSON Geometry to transform\n     * @param partialGcpTransformOptions - GCP Transform options\n     * @returns Input GeoJSON Geometry transform to resource space, as SVG geometry\n     */\n    static transformGeojsonToSvg(transformer, geojsonGeometry, partialGcpTransformOptions) {\n        partialGcpTransformOptions = mergePartialOptions({ geoIsGeographic: true }, partialGcpTransformOptions);\n        // This middle step is needed to make typescript happy\n        const transformedGeometry = transformer.transformToResource(geojsonGeometryToGeometry(geojsonGeometry), partialGcpTransformOptions);\n        return geometryToSvgGeometry(transformedGeometry);\n    }\n    /**\n     * Transform a GeoJSON FeatureCollection to resource space to a SVG string\n     *\n     * This is a shortcut method, available as static method in order not to overpopulate intellisense suggestions\n     * Note: since this converts from GeoJSON we assume geo-space is in lon-lat WGS84 and automatically set `destinationIsGeographic` to use geographically computed midpoints.\n     * Note: Multi-geometries are not supported\n     *\n     * @param transformer - A GCP Transformer defining the transformation\n     * @param geojson - GeoJSON FeatureCollection to transform\n     * @param partialGcpTransformOptions - GCP Transform options\n     * @returns Input GeoJSON FeaturesCollection transformed to resource space, as SVG string\n     */\n    static transformGeojsonFeatureCollectionToSvgString(transformer, geojson, partialGcpTransformOptions) {\n        const svgGeometries = [];\n        for (const geojsonGeometry of geojsonFeatureCollectionToGeojsonGeometries(geojson)) {\n            const svgGeometry = this.transformGeojsonToSvg(transformer, geojsonGeometry, partialGcpTransformOptions);\n            svgGeometries.push(svgGeometry);\n        }\n        return svgGeometriesToSvgString(svgGeometries);\n    }\n    /**\n     * Create a Projected GCP Transformer from a Georeferenced Map\n     *\n     * @param georeferencedMap - A Georeferenced Map\n     * @param options - Options, including GCP Transformer Options, and a transformation type to overrule the type defined in the Georeferenced Map\n     * @returns A Projected GCP Transformer\n     */\n    static fromGeoreferencedMap(georeferencedMap, options) {\n        return new GcpTransformer(georeferencedMap.gcps, options?.transformationType || georeferencedMap.transformation?.type, options);\n    }\n}\n", "import { BaseGcpTransformer } from './BaseGcpTransformer.js';\nimport { generalGcpToPointForForward, generalGcpToPointForBackward } from '../shared/conversion-functions.js';\n/**\n * Class for General Ground Control Point Transformers.\n *\n * A General GCP Transformer can transform input geometries between 'source' and 'destination' spaces.\n *\n * It does this using a transformation (of a certain type) built from\n * a set of General Ground Control Points (with coordinates in\n * source and destination space) and a transformation type.\n *\n * It has a method to transform 'Forward' (from source to destination space)\n * and 'Backward' (from destination to source space),\n *\n * The extending GeneralGcpTransform class handles the general case where:\n * - We read in Ground Control Points using the GeneralGcp type, with `source` and `destination` fields.\n * - We use the terms 'forward' and 'backward' for the two transformations.\n * - Both source and destination space are exected to be 2D cartesian spaces with the same handedness (x- and y-axes have the same orientations).\n * */\nexport class GeneralGcpTransformer extends BaseGcpTransformer {\n    /**\n     * Create a GeneralGcpTransformer\n     *\n     * @param generalGcps - An array of General Ground Control Points (GCPs)\n     * @param type - The transformation type\n     * @param partialGeneralGcpTransformerOptions - General GCP Transformer options\n     */ constructor(generalGcps, type = 'polynomial', partialGeneralGcpTransformerOptions) {\n        super(generalGcps, type, partialGeneralGcpTransformerOptions);\n    }\n    get generalGcps() {\n        return this.generalGcpsInternal;\n    }\n    /**\n     * Get the forward transformation. Create if it doesn't exist yet.\n     */\n    getForwardTransformation() {\n        return super.getForwardTransformationInternal();\n    }\n    /**\n     * Get the backward transformation. Create if it doesn't exist yet.\n     */\n    getBackwardTransformation() {\n        return super.getBackwardTransformationInternal();\n    }\n    /**\n     * Get the resolution of the forward transformation in source space, within a given bbox.\n     *\n     * This informs you in how fine the warping is, in source space.\n     * It can be useful e.g. to create a triangulation in source space\n     * that is fine enough for this warping.\n     *\n     * It is obtained by transforming forward two linestring,\n     * namely the horizontal and vertical midlines of the given bbox.\n     * The forward transformation will refine these lines:\n     * it will break them in small enough pieces to obtain a near continuous result.\n     * Returned in the length of the shortest piece, measured in source coordinates.\n     *\n     * @param sourceBbox - BBox in source space where the resolution is requested\n     * @param partialGeneralGcpTransformOptions - General GCP Transform options to consider during the transformation\n     * @returns Resolution of the forward transformation in source space\n     */\n    getForwardTransformationResolution(sourceBbox, partialGeneralGcpTransformOptions) {\n        return super.getForwardTransformationResolutionInternal(sourceBbox, partialGeneralGcpTransformOptions);\n    }\n    /**\n     * Get the resolution of the backward transformation in destination space, within a given bbox.\n     *\n     * This informs you in how fine the warping is, in destination space.\n     * It can be useful e.g. to create a triangulation in destination space\n     * that is fine enough for this warping.\n     *\n     * It is obtained by transforming backward two linestring,\n     * namely the horizontal and vertical midlines of the given bbox.\n     * The backward transformation will refine these lines:\n     * it will break them in small enough pieces to obtain a near continuous result.\n     * Returned in the length of the shortest piece, measured in destination coordinates.\n     *\n     * @param destinationBbox - BBox in destination space where the resolution is requested\n     * @param partialGeneralGcpTransformOptions - General GCP Transform options to consider during the transformation\n     * @returns Resolution of the backward transformation in destination space\n     */\n    getBackwardTransformationResolution(destinationBbox, partialGeneralGcpTransformOptions) {\n        return super.getBackwardTransformationResolutionInternal(destinationBbox, partialGeneralGcpTransformOptions);\n    }\n    /**\n     * Transform a geometry forward\n     *\n     * @param geometry - Geometry to transform\n     * @param partialGeneralGcpTransformOptions - General GCP Transform options\n     * @param generalGcpToP - Return type function\n     * @returns Forward transform of input geometry\n     */\n    transformForward(geometry, partialGeneralGcpTransformOptions, generalGcpToP = generalGcpToPointForForward) {\n        return super.transformForwardInternal(geometry, partialGeneralGcpTransformOptions, generalGcpToP);\n    }\n    /**\n     * Transform a geometry backward\n     *\n     * @param geometry - Geometry to transform\n     * @param partialGeneralGcpTransformOptions - General GCP Transform options\n     * @param generalGcpToP - Return type function\n     * @returns Backward transform of input geometry\n     */\n    transformBackward(geometry, partialGeneralGcpTransformOptions, generalGcpToP = generalGcpToPointForBackward) {\n        return super.transformBackwardInternal(geometry, partialGeneralGcpTransformOptions, generalGcpToP);\n    }\n}\n", "export const supportedtransformationTypes = [\n    'straight',\n    'helmert',\n    'polynomial', // Note: no 'polynomial1' here\n    'polynomial2',\n    'polynomial3',\n    'thinPlateSpline',\n    'projective'\n];\n", "export { GcpTransformer } from './transformers/GcpTransformer.js';\nexport { GeneralGcpTransformer } from './transformers/GeneralGcpTransformer.js';\nexport { BaseIndependentLinearWeightsTransformation } from './transformation-types/BaseIndependentLinearWeightsTransformation.js';\nexport { BaseLinearWeightsTransformation } from './transformation-types/BaseLinearWeightsTransformation.js';\nexport { BasePolynomialTransformation } from './transformation-types/BasePolynomialTransformation.js';\nexport { BaseTransformation } from './transformation-types/BaseTransformation.js';\nexport { Helmert } from './transformation-types/Helmert.js';\nexport { Polynomial1 } from './transformation-types/Polynomial1.js';\nexport { Polynomial2 } from './transformation-types/Polynomial2.js';\nexport { Polynomial3 } from './transformation-types/Polynomial3.js';\nexport { Projective } from './transformation-types/Projective.js';\nexport { RBF } from './transformation-types/RBF.js';\nexport { Straight } from './transformation-types/Straight.js';\nexport { supportedtransformationTypes } from './shared/types.js';\nexport { supportedDistortionMeasures, computeDistortionsFromPartialDerivatives } from './shared/distortion.js';\nexport { defaultGeneralGcpTransformerOptions, defaultGcpTransformerOptions, defaultGeneralGcpTransformOptions, defaultGcpTransformOptions } from './shared/transform-functions.js';\nexport { solveIndependentlyInverse, solveIndependentlyPseudoInverse, solveJointlyPseudoInverse, solveJointlySvd } from './shared/solve-functions.js';\n", "// Generated from Luuks color scheme with\n// https://www.colors.tools/tints-and-shades/\nconst black = '#222222';\nconst white = '#ffffff';\nconst inherit = 'inherit';\nconst current = 'currentColor';\nconst transparent = 'transparent';\n// Original color from Luuk's design\nexport const originalColorIndex = 4;\nconst blueShades = [\n    '#dff7fa',\n    '#c0eff5',\n    '#a1e7f0',\n    '#82dfeb',\n    '#63d8e6', // Original color\n    '#4facb8',\n    '#3b818a',\n    '#27565c',\n    '#132b2d'\n];\nconst darkblueShades = [\n    '#d7d9ee',\n    '#b0b4de',\n    '#898ecd',\n    '#6269bd',\n    '#3b44ad', // Original color\n    '#2f368a',\n    '#232867',\n    '#171b45',\n    '#0b0d22'\n];\n// TODO: add dark blue background color\n// '#101655'\nconst purpleShades = [\n    '#f3dcf0',\n    '#e7b9e1',\n    '#dc97d2',\n    '#d074c3',\n    '#c552b5', // Original color\n    '#9d4190',\n    '#76316c',\n    '#4e2048',\n    '#271024'\n];\nconst pinkShades = [\n    '#ffddf1',\n    '#ffbbe3',\n    '#ff99d5',\n    '#ff77c7',\n    '#ff56ba', // Original color\n    '#cc4494',\n    '#99336f',\n    '#66224a',\n    '#321125'\n];\nconst orangeShades = [\n    '#ffe3d0',\n    '#ffc7a1',\n    '#ffab72',\n    '#ff8f43',\n    '#ff7415', // Original color\n    '#cc5c10',\n    '#99450c',\n    '#662e08',\n    '#321704'\n];\nconst redShades = [\n    '#fededf',\n    '#febebf',\n    '#fe9e9f',\n    '#fe7e7f',\n    '#fe5e60', // Original color\n    '#cb4b4c',\n    '#983839',\n    '#652526',\n    '#321213'\n];\nconst greenShades = [\n    '#e0f2e8',\n    '#c1e6d2',\n    '#a2d9bb',\n    '#83cda5',\n    '#64c18f', // Original color\n    '#509a72',\n    '#3c7355',\n    '#284d39',\n    '#13261c'\n];\nconst yellowShades = [\n    '#fff3d9',\n    '#ffe8b3',\n    '#ffdd8d',\n    '#ffd267',\n    '#ffc742', // Original color\n    '#cc9f34',\n    '#997727',\n    '#664f1a',\n    '#32270d'\n];\nconst grayShades = [\n    '#efefef',\n    '#e0e0e0',\n    '#d0d0d0',\n    '#c1c1c1',\n    '#b2b2b2',\n    '#8e8e8e',\n    '#6a6a6a',\n    '#474747',\n    '#232323'\n];\nexport const shades = {\n    blue: blueShades,\n    darkblue: darkblueShades,\n    purple: purpleShades,\n    pink: pinkShades,\n    orange: orangeShades,\n    red: redShades,\n    green: greenShades,\n    yellow: yellowShades,\n    gray: grayShades\n};\nconst blue = blueShades[originalColorIndex];\nconst darkblue = darkblueShades[originalColorIndex];\nconst purple = purpleShades[originalColorIndex];\nconst pink = pinkShades[originalColorIndex];\nconst orange = orangeShades[originalColorIndex];\nconst red = redShades[originalColorIndex];\nconst green = greenShades[originalColorIndex];\nconst yellow = yellowShades[originalColorIndex];\nconst gray = grayShades[originalColorIndex];\nexport { blue, darkblue, purple, pink, orange, red, green, yellow, gray, black, white, inherit, current, transparent };\n", "import { blue, darkblue, purple, pink, orange, red, green, yellow, gray, black, white, inherit, current, transparent, shades } from './colors.js';\nfunction flattenShades(color, shades) {\n    return shades.reduce((flattened, hex, index) => {\n        const shade = (index + 1) * 100;\n        const key = `${color}-${shade}`;\n        flattened[key] = hex;\n        return flattened;\n    }, {});\n}\nexport const themeColors = {\n    blue,\n    darkblue,\n    purple,\n    pink,\n    orange,\n    red,\n    green,\n    yellow,\n    gray,\n    black,\n    white,\n    inherit,\n    current,\n    transparent,\n    // Add shades\n    ...flattenShades('blue', shades.blue),\n    ...flattenShades('darkblue', shades.darkblue),\n    ...flattenShades('purple', shades.purple),\n    ...flattenShades('pink', shades.pink),\n    ...flattenShades('orange', shades.orange),\n    ...flattenShades('red', shades.red),\n    ...flattenShades('green', shades.green),\n    ...flattenShades('yellow', shades.yellow),\n    ...flattenShades('gray', shades.gray)\n};\n", "import { themeColors } from './theme-colors.js';\nexport const theme = {\n    extend: {\n        textColor: {\n            DEFAULT: themeColors.black\n        },\n        transitionDuration: {\n            0: '0ms'\n        }\n    },\n    colors: themeColors,\n    fontFamily: {\n        sans: ['Geograph', 'sans-serif'],\n        // Consider using https://tosche.net/fonts/codelia\n        mono: ['DM Mono', 'monospace']\n    }\n};\n", "export { themeColors } from './theme-colors.js';\nexport { theme } from './theme.js';\nexport { \n// Colors:\nblue, darkblue, purple, pink, orange, red, green, yellow, gray, black, white, inherit, current, transparent, \n// Other variables:\nshades, originalColorIndex } from './colors.js';\n", "export enum WarpedMapEventType {\n  GEOREFERENCEANNOTATIONADDED = 'georeferenceannotationadded',\n  GEOREFERENCEANNOTATIONREMOVED = 'georeferenceannotationremoved',\n\n  WARPEDMAPADDED = 'warpedmapadded',\n  WARPEDMAPREMOVED = 'warpedmapremoved',\n\n  WARPEDMAPENTER = 'warpedmapenter',\n  WARPEDMAPLEAVE = 'warpedmapleave',\n\n  IMAGEINFOLOADED = 'imageinfoloaded',\n\n  TILEFETCHED = 'tilefetched',\n  TILEFETCHERROR = 'tilefetcherror',\n  MAPTILELOADED = 'maptileloaded',\n  MAPTILEREMOVED = 'maptileremoved',\n  FIRSTMAPTILELOADED = 'firstmaptileloaded',\n  ALLREQUESTEDTILESLOADED = 'allrequestedtilesloaded',\n\n  TEXTURESUPDATED = 'texturesupdated',\n\n  PRECHANGE = 'prechange',\n  OPTIONSCHANGED = 'optionschanged',\n  ZINDICESCHANGED = 'zindiceschanged',\n  RESOURCEMASKCHANGED = 'resourcemaskchanged',\n  GCPSCHANGED = 'gcpschanged',\n  VISIBILITYCHANGED = 'visibilitychanged',\n  TRANSFORMATIONCHANGED = 'transformationchanged',\n  DISTORTIONCHANGED = 'distortionchanged',\n  INTERNALPROJECTIONCHANGED = 'internalprojectionchanged',\n  PROJECTIONCHANGED = 'projectionchanged',\n\n  CHANGED = 'changed',\n\n  CLEARED = 'cleared'\n}\n\nexport type WarpedMapTileEventDetail = {\n  mapId: string\n  tileUrl: string\n}\n\nexport class WarpedMapEvent extends Event {\n  data?: unknown\n\n  constructor(type: WarpedMapEventType, data?: unknown) {\n    super(type)\n\n    this.data = data\n  }\n}\n", "/**\n * Serializes any JavaScript type to a string. If the\n * type is an object, first sortthe object by its keys.\n *\n * @param obj - JavaScript type to serialize.\n * @returns `obj` serialized to a string.\n */\nexport function serialize(obj) {\n    if (Array.isArray(obj)) {\n        return `[${obj.map((i) => serialize(i)).join(',')}]`;\n    }\n    else if (typeof obj === 'number') {\n        return `${obj}`;\n    }\n    else if (typeof obj === 'string') {\n        return `\"${obj}\"`;\n    }\n    else if (typeof obj === 'object' && obj !== null) {\n        return Object.keys(obj)\n            .sort()\n            .map((key) => `${key}:${serialize(obj[key])}`)\n            .join('|');\n    }\n    return String(obj);\n}\n", "import { serialize } from './checksum.js';\nconst DEFAULT_LENGTH = 16;\n/**\n * Computes SHA-1 hash of input string.\n *\n * @param Input string.\n * @returns SHA-1 hash of `str`.\n */\nasync function generateHash(str) {\n    const hashBuffer = await crypto.subtle.digest('SHA-1', new TextEncoder().encode(str));\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray\n        .map((byte) => byte.toString(16).padStart(2, '0'))\n        .join('');\n    return hashHex;\n}\n/**\n * Generates an ID from a string using the SHA-1 algorithm. Given the same input, the ID will always be the same.\n *\n * @param str - Input string\n * @param length - Length of returned hash. The maximum length of the hash is 40 characters. The default length is 16.\n * @returns First `length` characters of the SHA-1 hash of `str`.\n */\nexport async function generateId(str, length = DEFAULT_LENGTH) {\n    const hash = await generateHash(String(str));\n    return hash.slice(0, length);\n}\n/**\n * Generates a random ID.\n *\n * @param length - Length of returned hash. The maximum length of the hash is 40 characters.\n * @returns First `length` characters of the SHA-1 hash of a random UUID.\n */\nexport async function generateRandomId(length = DEFAULT_LENGTH) {\n    const uuid = crypto.randomUUID();\n    const id = await generateId(uuid, length);\n    return id;\n}\n/**\n * Generates a checksum of a JSON object.\n *\n * @param obj - JSON object.\n * @param length - Length of returned hash. The maximum length of the hash is 40 characters.\n * @returns First `length` characters of the SHA-1 hash of sorted and serialized version of `obj`.\n */\nexport async function generateChecksum(obj, length = DEFAULT_LENGTH) {\n    const checksum = await generateId(serialize(obj), length);\n    return checksum;\n}\n", "export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n", "import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                const firstEl = sub.path[0];\n                fieldErrors[firstEl] = fieldErrors[firstEl] || [];\n                fieldErrors[firstEl].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n", "import { ZodIssueCode } from \"../ZodError.js\";\nimport { util, ZodParsedType } from \"../helpers/util.js\";\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"bigint\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nexport default errorMap;\n", "import defaultErrorMap from \"./locales/en.js\";\nlet overrideErrorMap = defaultErrorMap;\nexport { defaultErrorMap };\nexport function setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexport function getErrorMap() {\n    return overrideErrorMap;\n}\n", "import { getErrorMap } from \"../errors.js\";\nimport defaultErrorMap from \"../locales/en.js\";\nexport const makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexport const EMPTY_PATH = [];\nexport function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === defaultErrorMap ? undefined : defaultErrorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexport class ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexport const INVALID = Object.freeze({\n    status: \"aborted\",\n});\nexport const DIRTY = (value) => ({ status: \"dirty\", value });\nexport const OK = (value) => ({ status: \"valid\", value });\nexport const isAborted = (x) => x.status === \"aborted\";\nexport const isDirty = (x) => x.status === \"dirty\";\nexport const isValid = (x) => x.status === \"valid\";\nexport const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n", "export {};\n", "export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n", "import { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        if (!header)\n            return false;\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n", "export * from \"./errors.js\";\nexport * from \"./helpers/parseUtil.js\";\nexport * from \"./helpers/typeAliases.js\";\nexport * from \"./helpers/util.js\";\nexport * from \"./types.js\";\nexport * from \"./ZodError.js\";\n", "import * as z from \"./v3/external.js\";\nexport * from \"./v3/external.js\";\nexport { z };\nexport default z;\n", "import { z } from 'zod';\nexport function ensureArray(val) {\n    if (val) {\n        return Array.isArray(val) ? val : [val];\n    }\n}\n// Copied from presentation.3.ts in @allmaps/iiif-parser\nconst SingleValueSchema = z.union([z.string(), z.number(), z.boolean()]);\nexport const LanguageValueSchema = z.record(z.string(), SingleValueSchema.array());\nexport const PointSchema = z.tuple([z.number(), z.number()]);\nexport const PointGeometrySchema = z.object({\n    type: z.literal('Point'),\n    coordinates: PointSchema\n});\nexport const ResourceMaskSchema = PointSchema.array().min(3);\nconst ImageServices = [\n    'ImageService1',\n    'ImageService2',\n    'ImageService3'\n];\nconst ResourceTypes = [...ImageServices, ...['Canvas']];\nexport const ImageServiceSchema = z.enum(ImageServices);\nexport const ResourceTypeSchema = z.enum(ResourceTypes);\n// partOf can recursively contain nested partOfs\n// From: https://github.com/colinhacks/zod#recursive-types\nconst basePartOfItemSchema = z.object({\n    id: z.string().url(),\n    type: z.string(),\n    label: LanguageValueSchema.optional()\n});\nexport const PartOfItemSchema = basePartOfItemSchema.extend({\n    partOf: z.lazy(() => PartOfItemSchema.array()).optional()\n});\nexport const PartOfSchema = z\n    .union([PartOfItemSchema.array(), PartOfItemSchema])\n    .transform(ensureArray);\nconst ValidTransformationSchema = z.object({\n    type: z.enum(['helmert', 'polynomial', 'thinPlateSpline', 'projective']),\n    options: z.object({}).passthrough().optional()\n});\nfunction parseInvalidTransformation(val) {\n    // Also allow values like:\n    // - thin-plate-spline\n    // - thinplatespline\n    // - polynomial1\n    const valLowerCase = val.toLowerCase();\n    if (valLowerCase === 'thinplatespline' ||\n        valLowerCase === 'thin-plate-spline') {\n        return {\n            type: 'thinPlateSpline'\n        };\n    }\n    else if (valLowerCase === 'polynomial1') {\n        return {\n            type: 'polynomial',\n            options: { order: 1 }\n        };\n    }\n    else if (valLowerCase === 'polynomial2') {\n        return {\n            type: 'polynomial',\n            options: { order: 2 }\n        };\n    }\n}\nexport const TransformationSchema = z\n    .union([\n    ValidTransformationSchema,\n    // Catchall for unknown transformation types\n    z.unknown()\n])\n    .transform((val) => {\n    const { success, data } = ValidTransformationSchema.safeParse(val);\n    if (success) {\n        return data;\n    }\n    else if (val === 'string') {\n        return parseInvalidTransformation(val);\n    }\n    else if (val &&\n        typeof val === 'object' &&\n        'type' in val &&\n        typeof val.type === 'string') {\n        return parseInvalidTransformation(val.type);\n    }\n});\nexport const ProjectionSchema = z.object({\n    name: z.string().optional(),\n    definition: z.union([z.string(), z.unknown()])\n});\nexport const ContextSchema = z.union([\n    z.string().url().array(),\n    z.string().url()\n]);\n", "import { z } from 'zod';\nimport { PointSchema, ResourceTypeSchema, PointGeometrySchema, TransformationSchema, ContextSchema } from '../shared.js';\nconst svg = /^<svg\\s+width=\"\\d+\"\\s+height=\"\\d+\"\\s*>\\s*<polygon\\s+points=\"\\s*(-?\\d+(\\.\\d+)?,-?\\d+(\\.\\d+)?\\s+){2,}-?\\d+(\\.\\d+)?,-?\\d+(\\.\\d+)?\\s*\"\\s*\\/>\\s*<\\/svg>$/;\nexport const SvgSelectorSchema = z.object({\n    type: z.literal('SvgSelector'),\n    value: z.string().regex(svg)\n});\nexport const TargetSchema = z.object({\n    source: z.string().url(),\n    service: z\n        .array(z.object({\n        '@id': z.string().url(),\n        type: ResourceTypeSchema\n    }))\n        .length(1),\n    selector: SvgSelectorSchema\n});\nexport const FeaturePropertiesSchema = z.object({\n    pixelCoords: PointSchema\n});\nexport const BodySchema = z.object({\n    type: z.literal('FeatureCollection'),\n    transformation: TransformationSchema.optional(),\n    features: z.array(z.object({\n        type: z.literal('Feature'),\n        properties: FeaturePropertiesSchema,\n        geometry: PointGeometrySchema\n    }))\n});\nexport const AnnotationSchema = z.object({\n    id: z.string().optional(),\n    type: z.literal('Annotation'),\n    '@context': ContextSchema.optional(),\n    motivation: z.string().default('georeferencing').optional(),\n    target: TargetSchema,\n    body: BodySchema\n});\nexport const AnnotationPageSchema = z.object({\n    id: z.string().optional(),\n    type: z.literal('AnnotationPage'),\n    '@context': ContextSchema.optional(),\n    items: z.array(AnnotationSchema)\n});\n", "import { z } from 'zod';\nimport { PointSchema, ImageServiceSchema, PartOfSchema, PointGeometrySchema, TransformationSchema, ProjectionSchema, ContextSchema } from '../shared.js';\nconst polygonRegex = /<polygon\\s+points=\"\\s*(-?\\d+(\\.\\d+)?,-?\\d+(\\.\\d+)?\\s+){2,}-?\\d+(\\.\\d+)?,-?\\d+(\\.\\d+)?\\s*\"\\s*\\/>/;\nconst svgWidthHeightRegex = new RegExp(`^<svg\\\\s+width=\"\\\\d+\"\\\\s+height=\"\\\\d+\"\\\\s*>\\\\s*${polygonRegex.source}\\\\s*</svg>$`);\nconst svgHeightWidthRegex = new RegExp(`^<svg\\\\s+height=\"\\\\d+\"\\\\s+width=\"\\\\d+\"\\\\s*>\\\\s*${polygonRegex.source}\\\\s*</svg>$`);\nconst svgRegex = new RegExp(`^<svg\\\\s*>\\\\s*${polygonRegex.source}\\\\s*</svg>$`);\nconst SvgRegexSchema = z.string().regex(svgRegex);\nconst SvgWidthHeightRegexSchema = z.string().regex(svgWidthHeightRegex);\nconst SvgHeightWidthRegexSchema = z.string().regex(svgHeightWidthRegex);\nexport const SvgSelectorSchema = z.object({\n    type: z.literal('SvgSelector'),\n    value: z.union([\n        SvgRegexSchema,\n        SvgWidthHeightRegexSchema,\n        SvgHeightWidthRegexSchema\n    ])\n});\n// const regionRegex = /^\\d+,\\d+,\\d+,\\d+$/\n// const sizeRegex = /^\\d+,\\d+$/\n// export const ImageApiSelectorSchema = z.object({\n//   type: z.literal('ImageApiSelector'),\n//   region: z.string().regex(regionRegex),\n//   size: z.string().regex(sizeRegex)\n// })\nexport const Source1Schema = z.object({\n    '@id': z.string().url(),\n    type: ImageServiceSchema,\n    height: z.number().positive(),\n    width: z.number().positive(),\n    partOf: PartOfSchema.optional()\n});\nexport const Source2Schema = z.object({\n    id: z.string().url(),\n    type: ImageServiceSchema,\n    height: z.number().positive().optional(),\n    width: z.number().positive().optional(),\n    partOf: PartOfSchema.optional()\n});\nexport const Canvas3Schema = z.object({\n    id: z.string().url(),\n    type: z.literal('Canvas'),\n    height: z.number().positive().optional(),\n    width: z.number().positive().optional(),\n    partOf: PartOfSchema.optional()\n});\nexport const SourceSchema = z.union([\n    Source1Schema,\n    Source2Schema,\n    Canvas3Schema\n]);\nexport const TargetSchema = z.object({\n    type: z.literal('SpecificResource'),\n    source: SourceSchema,\n    // selector: z.union([SvgSelectorSchema, ImageApiSelectorSchema])\n    selector: SvgSelectorSchema\n});\nexport const FeaturePropertiesSchema = z.object({\n    resourceCoords: PointSchema\n});\nexport const BodySchema = z.object({\n    type: z.literal('FeatureCollection'),\n    transformation: TransformationSchema.optional(),\n    resourceCrs: ProjectionSchema.optional(),\n    features: z.array(z.object({\n        type: z.literal('Feature'),\n        properties: FeaturePropertiesSchema,\n        geometry: PointGeometrySchema\n    }))\n});\nexport const AnnotationSchema = z.object({\n    id: z.string().optional(),\n    type: z.literal('Annotation'),\n    '@context': ContextSchema.optional(),\n    motivation: z.string().default('georeferencing').optional(),\n    created: z.string().datetime().optional(),\n    modified: z.string().datetime().optional(),\n    target: TargetSchema,\n    body: BodySchema\n});\nexport const AnnotationPageSchema = z.object({\n    id: z.string().optional(),\n    type: z.literal('AnnotationPage'),\n    '@context': ContextSchema.optional(),\n    items: z.array(AnnotationSchema)\n});\n", "import { z } from 'zod';\nimport { AnnotationSchema as Annotation0Schema, AnnotationPageSchema as AnnotationPage0Schema, FeaturePropertiesSchema as Annotation0FeaturePropertiesSchema, SvgSelectorSchema as SvgSelector0Schema } from './annotation/annotation.0.js';\nimport { AnnotationSchema as Annotation1Schema, AnnotationPageSchema as AnnotationPage1Schema, FeaturePropertiesSchema as Annotation1FeaturePropertiesSchema, SvgSelectorSchema as SvgSelector1Schema, TargetSchema as Target1Schema, SourceSchema as Source1Schema } from './annotation/annotation.1.js';\nimport { ResourceTypeSchema, PointGeometrySchema, ImageServiceSchema, TransformationSchema, PartOfSchema } from './shared.js';\nconst DefaultAnnotationSchema = Annotation1Schema;\nconst DefaultAnnotationPageSchema = AnnotationPage1Schema;\nconst DefaultFeaturePropertiesSchema = Annotation1FeaturePropertiesSchema;\nconst DefaultTargetSchema = Target1Schema;\nconst DefaultSourceSchema = Source1Schema;\nconst DefaultSvgSelectorSchema = SvgSelector1Schema;\nconst AnnotationAllVersionsSchema = z.union([\n    Annotation0Schema,\n    Annotation1Schema\n]);\nconst AnnotationPageAllVersionsSchema = z.union([\n    AnnotationPage0Schema,\n    AnnotationPage1Schema\n]);\nconst FeaturePropertiesAllVersionsSchema = z.union([\n    Annotation0FeaturePropertiesSchema,\n    Annotation1FeaturePropertiesSchema\n]);\nexport { Annotation0Schema, AnnotationPage0Schema, Annotation0FeaturePropertiesSchema, Annotation1Schema, AnnotationPage1Schema, Annotation1FeaturePropertiesSchema, SvgSelector0Schema, \n// Default schemas\nDefaultAnnotationSchema as AnnotationSchema, DefaultAnnotationPageSchema as AnnotationPageSchema, DefaultFeaturePropertiesSchema as FeaturePropertiesSchema, DefaultSvgSelectorSchema as SvgSelectorSchema, DefaultTargetSchema as TargetSchema, DefaultSourceSchema as SourceSchema, \n// All versions\nAnnotationAllVersionsSchema, AnnotationPageAllVersionsSchema, FeaturePropertiesAllVersionsSchema, \n// Shared schemas\nPointGeometrySchema, ImageServiceSchema, TransformationSchema, PartOfSchema, ResourceTypeSchema };\n", "export function isGeoreferencedMapsBeforeParse(mapOrMaps) {\n    return Array.isArray(mapOrMaps);\n}\nexport function isAnnotationPageBeforeParse(annotation) {\n    if (annotation &&\n        typeof annotation === 'object' &&\n        'type' in annotation &&\n        annotation.type === 'AnnotationPage' &&\n        'items' in annotation) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function isGeoreferencedMap2BeforeParse(georeferencedMap) {\n    if (georeferencedMap &&\n        typeof georeferencedMap === 'object' &&\n        'type' in georeferencedMap &&\n        georeferencedMap.type === 'GeoreferencedMap') {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function isAnnotation0BeforeParse(annotation) {\n    if (annotation &&\n        typeof annotation === 'object' &&\n        'target' in annotation &&\n        annotation.target &&\n        typeof annotation.target === 'object' &&\n        'source' in annotation.target &&\n        typeof annotation.target.source === 'string') {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n", "// Type guard that checks if georeferencedMap is v2 GeoreferencedMap\nexport function isGeoreferencedMap2(georeferencedMap) {\n    return ('type' in georeferencedMap && georeferencedMap.type === 'GeoreferencedMap');\n}\n// Type guard that checks if annotation is v1 Georeference Annotation\nexport function isAnnotation1(annotation) {\n    return ('source' in annotation.target &&\n        typeof annotation.target.source === 'object');\n}\n", "import { Annotation0Schema, Annotation1Schema, AnnotationPage0Schema, AnnotationPage1Schema } from './schemas/annotation.js';\nimport { isAnnotationPageBeforeParse, isAnnotation0BeforeParse } from './before-parse.js';\nimport { isAnnotation1 } from './guards.js';\nfunction parseResource(annotation) {\n    return {\n        id: parseImageId(annotation),\n        ...parseImageDimensions(annotation),\n        type: parseResourceType(annotation),\n        partOf: parsePartOf(annotation)\n    };\n}\nfunction parseImageId(annotation) {\n    if (isAnnotation1(annotation)) {\n        const source = annotation.target.source;\n        if ('id' in source) {\n            return source.id;\n        }\n        else {\n            return source['@id'];\n        }\n    }\n    else {\n        return annotation.target.service[0]['@id'];\n    }\n}\nfunction parseResourceType(annotation) {\n    if ('service' in annotation.target) {\n        return annotation.target.service[0].type;\n    }\n    else {\n        return annotation.target.source.type;\n    }\n}\nfunction parsePartOf(annotation) {\n    if (isAnnotation1(annotation)) {\n        return annotation.target.source.partOf;\n    }\n}\nfunction parseResourceCoords(properties) {\n    if ('pixelCoords' in properties) {\n        return properties.pixelCoords;\n    }\n    else {\n        return properties.resourceCoords;\n    }\n}\nfunction parseGcps(annotation) {\n    return annotation.body.features.map((gcpFeature) => ({\n        resource: parseResourceCoords(gcpFeature.properties),\n        geo: gcpFeature.geometry.coordinates\n    }));\n}\nfunction parseDates(annotation) {\n    if (isAnnotation1(annotation)) {\n        return {\n            created: annotation.created,\n            modified: annotation.modified\n        };\n    }\n}\nfunction parseImageDimensions(annotation) {\n    if (isAnnotation1(annotation)) {\n        return {\n            width: annotation.target.source.width,\n            height: annotation.target.source.height\n        };\n    }\n    const selector = annotation.target.selector;\n    const svg = selector.value;\n    const widthResult = /width=\"(?<width>\\d+)\"/.exec(svg);\n    const heightResult = /height=\"(?<height>\\d+)\"/.exec(svg);\n    const width = widthResult?.groups?.width;\n    const height = heightResult?.groups?.height;\n    if (!width || !height) {\n        throw new Error('Could not parse image dimensions');\n    }\n    return {\n        width: parseInt(width),\n        height: parseInt(height)\n    };\n}\nfunction parseResourceMask(annotation) {\n    const selector = annotation.target.selector;\n    const svg = selector.value;\n    const result = /points=\"(?<points>.+)\"/.exec(svg);\n    const groups = result?.groups;\n    if (groups && groups.points) {\n        const pointStrings = groups.points.trim().split(/\\s+/);\n        // Resource masks are not round-trip: they don't repeat the first point at the end of the list of points.\n        // According to their spec, SVG polygons are not supposed to be round-trip either.\n        // Here we deal with inputs that are round-trip by removing the last point\n        if (pointStrings[0] === pointStrings[pointStrings.length - 1]) {\n            pointStrings.splice(-1);\n        }\n        if (pointStrings.length >= 3) {\n            return pointStrings.map((point) => {\n                const numberStrings = point.split(',');\n                if (numberStrings.length === 2) {\n                    return [parseFloat(numberStrings[0]), parseFloat(numberStrings[1])];\n                }\n                else {\n                    throw new Error('Could not parse resource mask');\n                }\n            });\n        }\n        else {\n            throw new Error('Could not parse resource mask');\n        }\n    }\n    else {\n        throw new Error('Could not parse resource mask');\n    }\n}\nfunction getGeoreferencedMap(annotation) {\n    let resourceCrs;\n    if ('resourceCrs' in annotation.body) {\n        resourceCrs = annotation.body.resourceCrs;\n    }\n    return {\n        '@context': 'https://schemas.allmaps.org/map/2/context.json',\n        type: 'GeoreferencedMap',\n        id: annotation.id,\n        ...parseDates(annotation),\n        resource: parseResource(annotation),\n        gcps: parseGcps(annotation),\n        resourceMask: parseResourceMask(annotation),\n        transformation: annotation.body.transformation,\n        resourceCrs\n    };\n}\n/**\n * Parses a Georeference Annotation or an Annotation Page containing multiple Georeference Annotations\n * and returns an array of Georeferenced Maps.\n * @param {Annotation | AnnotationPage} annotation - Georeference Annotation or Annotation Page containing multiple Georeference Annotations\n * @returns {Map[]} Array of maps\n * @example\n * ```js\n * import fs from 'fs'\n * import { parseAnnotation } from '@allmaps/annotation'\n *\n * const annotation = JSON.parse(fs.readFileSync('./examples/annotation.example.json'))\n * const maps = parseAnnotation(annotation)\n * ```\n */\nexport function parseAnnotation(annotation) {\n    if (isAnnotationPageBeforeParse(annotation)) {\n        // Seperate .parse for different versions for better Zod errors\n        let parsedAnnotationPage;\n        if ('items' in annotation &&\n            Array.isArray(annotation.items) &&\n            isAnnotation0BeforeParse(annotation.items[0])) {\n            parsedAnnotationPage = AnnotationPage0Schema.parse(annotation);\n        }\n        else {\n            parsedAnnotationPage = AnnotationPage1Schema.parse(annotation);\n        }\n        return parsedAnnotationPage.items.map((parsedAnnotation) => getGeoreferencedMap(parsedAnnotation));\n    }\n    else {\n        // Seperate .parse for different versions for better Zod errors\n        let parsedAnnotation;\n        if (isAnnotation0BeforeParse(annotation)) {\n            parsedAnnotation = Annotation0Schema.parse(annotation);\n        }\n        else {\n            parsedAnnotation = Annotation1Schema.parse(annotation);\n        }\n        return [getGeoreferencedMap(parsedAnnotation)];\n    }\n}\n", "import { z } from 'zod';\nimport { PointSchema, ImageServiceSchema, ResourceMaskSchema, TransformationSchema } from '../shared.js';\nexport const GCPSchema = z.object({\n    image: PointSchema,\n    world: PointSchema\n});\nexport const ImageSchema = z.object({\n    uri: z.string().url(),\n    width: z.number(),\n    height: z.number(),\n    type: ImageServiceSchema\n});\nexport const GeoreferencedMapSchema = z.object({\n    id: z.string().optional(),\n    version: z.number().min(1).max(1).default(1),\n    image: ImageSchema,\n    gcps: GCPSchema.array(),\n    pixelMask: ResourceMaskSchema,\n    transformation: TransformationSchema.optional()\n});\nexport const GeoreferencedMapsSchema = z.array(GeoreferencedMapSchema);\n", "import { z } from 'zod';\nimport { PointSchema, ResourceTypeSchema, PartOfSchema, ResourceMaskSchema, TransformationSchema, ProjectionSchema } from '../shared.js';\nexport const GCPSchema = z.object({\n    resource: PointSchema,\n    geo: PointSchema\n});\nexport const ResourceSchema = z.object({\n    id: z.string().url(),\n    height: z.number().positive().optional(),\n    width: z.number().positive().optional(),\n    type: ResourceTypeSchema,\n    partOf: PartOfSchema.optional()\n});\nexport const GeoreferencedMapSchema = z.object({\n    '@context': z\n        .literal('https://schemas.allmaps.org/map/2/context.json')\n        .optional(),\n    type: z.literal('GeoreferencedMap'),\n    id: z.string().optional(),\n    created: z.string().datetime().optional(),\n    modified: z.string().datetime().optional(),\n    resource: ResourceSchema,\n    gcps: GCPSchema.array(),\n    resourceMask: ResourceMaskSchema,\n    transformation: TransformationSchema.optional(),\n    resourceCrs: ProjectionSchema.optional()\n});\nexport const GeoreferencedMapsSchema = z.array(GeoreferencedMapSchema);\n", "import { z } from 'zod';\nimport { GeoreferencedMapSchema as GeoreferencedMap1Schema, GeoreferencedMapsSchema as GeoreferencedMaps1Schema, GCPSchema as GeoreferencedMap1GCPSchema, ImageSchema as GeoreferencedMap1ImageSchema } from './georeferenced-map/georeferenced-map.1.js';\nimport { GeoreferencedMapSchema as GeoreferencedMap2Schema, GeoreferencedMapsSchema as GeoreferencedMaps2Schema, GCPSchema as GeoreferencedMap2GCPSchema, ResourceSchema as GeoreferencedMap2ResourceSchema } from './georeferenced-map/georeferenced-map.2.js';\nimport { PartOfSchema, ResourceMaskSchema, TransformationSchema } from './shared.js';\nconst DefaultGeoreferencedMapSchema = GeoreferencedMap2Schema;\nconst DefaultGeoreferencedMapsSchema = GeoreferencedMaps2Schema;\nconst DefaultGCPSchema = GeoreferencedMap2GCPSchema;\nconst DefaultResourceSchema = GeoreferencedMap2ResourceSchema;\nconst GeoreferencedMapAllVersionsSchema = z.union([\n    GeoreferencedMap1Schema,\n    GeoreferencedMap2Schema\n]);\nconst GeoreferencedMapsAllVersionsSchema = z.union([\n    GeoreferencedMaps1Schema,\n    GeoreferencedMaps2Schema\n]);\nconst GCPAllVersionsSchema = z.union([\n    GeoreferencedMap1GCPSchema,\n    GeoreferencedMap2GCPSchema\n]);\nexport { GeoreferencedMap1Schema, GeoreferencedMaps1Schema, GeoreferencedMap1GCPSchema, GeoreferencedMap1ImageSchema, GeoreferencedMap2Schema, GeoreferencedMaps2Schema, GeoreferencedMap2GCPSchema, GeoreferencedMap2ResourceSchema, \n// Default schemas\nDefaultGeoreferencedMapSchema as GeoreferencedMapSchema, DefaultGeoreferencedMapsSchema as GeoreferencedMapsSchema, DefaultGCPSchema as GCPSchema, DefaultResourceSchema as ResourceSchema, \n// All versions\nGeoreferencedMapAllVersionsSchema, GeoreferencedMapsAllVersionsSchema, GCPAllVersionsSchema, \n// Shared schemas\nPartOfSchema, ResourceMaskSchema, TransformationSchema };\n", "import { GeoreferencedMap1Schema, GeoreferencedMap2Schema, GeoreferencedMaps1Schema, GeoreferencedMaps2Schema } from './schemas/georeferenced-map.js';\nimport { isGeoreferencedMapsBeforeParse, isGeoreferencedMap2BeforeParse } from './before-parse.js';\nimport { isGeoreferencedMap2 } from './guards.js';\nfunction generateSvgSelector(georeferencedMap) {\n    let width;\n    let height;\n    let resourceMask;\n    if (isGeoreferencedMap2(georeferencedMap)) {\n        width = georeferencedMap.resource.width;\n        height = georeferencedMap.resource.height;\n        resourceMask = georeferencedMap.resourceMask;\n    }\n    else {\n        width = georeferencedMap.image.width;\n        height = georeferencedMap.image.height;\n        resourceMask = georeferencedMap.pixelMask;\n    }\n    let svg = `<svg>`;\n    if (width && height) {\n        svg = `<svg width=\"${width}\" height=\"${height}\">`;\n    }\n    return {\n        type: 'SvgSelector',\n        value: `${svg}<polygon points=\"${resourceMask\n            .map((point) => point.join(','))\n            .join(' ')}\" /></svg>`\n    };\n}\nfunction generateSource(georeferencedMap) {\n    let id;\n    let type;\n    let width;\n    let height;\n    let partOf;\n    if (isGeoreferencedMap2(georeferencedMap)) {\n        if (georeferencedMap.resource.type === 'Canvas') {\n            // TODO: Don't know why TypeScript complains if I don't do this\n            const source = {\n                id: georeferencedMap.resource.id,\n                type: georeferencedMap.resource.type,\n                height: georeferencedMap.resource.height,\n                width: georeferencedMap.resource.width,\n                partOf: georeferencedMap.resource.partOf\n            };\n            return source;\n        }\n        else {\n            id = georeferencedMap.resource.id;\n            type = georeferencedMap.resource.type;\n            width = georeferencedMap.resource.width;\n            height = georeferencedMap.resource.height;\n            partOf = georeferencedMap.resource.partOf;\n        }\n    }\n    else {\n        id = georeferencedMap.image.uri;\n        type = georeferencedMap.image.type;\n        width = georeferencedMap.image.width;\n        height = georeferencedMap.image.height;\n    }\n    return {\n        id,\n        type,\n        height,\n        width,\n        partOf\n    };\n}\nfunction generateDates(georeferencedMap) {\n    if (isGeoreferencedMap2(georeferencedMap)) {\n        return {\n            created: georeferencedMap.created,\n            modified: georeferencedMap.modified\n        };\n    }\n}\nfunction generateContext() {\n    return [\n        'http://iiif.io/api/extension/georef/1/context.json',\n        'http://iiif.io/api/presentation/3/context.json'\n    ];\n}\nfunction generateFeature(gcp) {\n    let resourceCoords;\n    let geoCoords;\n    if ('resource' in gcp) {\n        resourceCoords = gcp.resource;\n        geoCoords = gcp.geo;\n    }\n    else {\n        resourceCoords = gcp.image;\n        geoCoords = gcp.world;\n    }\n    return {\n        type: 'Feature',\n        properties: {\n            resourceCoords\n        },\n        geometry: {\n            type: 'Point',\n            coordinates: geoCoords\n        }\n    };\n}\nfunction generateGeoreferenceAnnotation(georeferencedMap) {\n    const target = {\n        type: 'SpecificResource',\n        source: generateSource(georeferencedMap),\n        selector: generateSvgSelector(georeferencedMap)\n    };\n    let resourceCrs;\n    if ('resourceCrs' in georeferencedMap) {\n        resourceCrs = georeferencedMap.resourceCrs;\n    }\n    const body = {\n        type: 'FeatureCollection',\n        transformation: georeferencedMap.transformation,\n        resourceCrs,\n        features: georeferencedMap.gcps.map((gcp) => generateFeature(gcp))\n    };\n    return {\n        id: georeferencedMap.id,\n        type: 'Annotation',\n        '@context': generateContext(),\n        ...generateDates(georeferencedMap),\n        motivation: 'georeferencing',\n        target,\n        body\n    };\n}\n/**\n * Generates a Georeference Annotation from a single Georeferenced Map or\n * an Annotation Page containing multiple Georeference Annotations from an array of Georeferenced Maps.\n * @param mapOrMaps - Single Georeferenced Map, or an array of Georeferenced Maps\n * @returns Georeference Annotation or Annotation Page\n * @example\n * ```js\n * import fs from 'fs'\n * import { generateAnnotation } from '@allmaps/annotation'\n *\n * const map = JSON.parse(fs.readFileSync('./examples/map.example.json'))\n * const annotation = generateAnnotation(map)\n * ```\n */\nexport function generateAnnotation(mapOrMaps) {\n    if (isGeoreferencedMapsBeforeParse(mapOrMaps)) {\n        // Seperate .parse for different versions for better Zod errors\n        let parsedGeoreferencedMaps;\n        if (isGeoreferencedMap2BeforeParse(mapOrMaps[0])) {\n            parsedGeoreferencedMaps = GeoreferencedMaps2Schema.parse(mapOrMaps);\n        }\n        else {\n            parsedGeoreferencedMaps = GeoreferencedMaps1Schema.parse(mapOrMaps);\n        }\n        const annotations = parsedGeoreferencedMaps.map((parsedGeoreferencedMap) => generateGeoreferenceAnnotation(parsedGeoreferencedMap));\n        return {\n            type: 'AnnotationPage',\n            '@context': 'http://www.w3.org/ns/anno.jsonld',\n            items: annotations\n        };\n    }\n    else {\n        // Seperate .parse for different versions for better Zod errors\n        let parsedGeoreferencedMap;\n        if (isGeoreferencedMap2BeforeParse(mapOrMaps)) {\n            parsedGeoreferencedMap = GeoreferencedMap2Schema.parse(mapOrMaps);\n        }\n        else {\n            parsedGeoreferencedMap = GeoreferencedMap1Schema.parse(mapOrMaps);\n        }\n        return generateGeoreferenceAnnotation(parsedGeoreferencedMap);\n    }\n}\n", "import { parseAnnotation } from './parser.js';\nimport { generateAnnotation } from './generator.js';\nimport { isAnnotation1, isGeoreferencedMap2 } from './guards.js';\nexport function toAnnotation1(annotation) {\n    if (isAnnotation1(annotation)) {\n        return annotation;\n    }\n    else {\n        const convertedAnnotation = generateAnnotation(parseAnnotation(annotation));\n        if ('items' in convertedAnnotation) {\n            return convertedAnnotation.items[0];\n        }\n        else {\n            return convertedAnnotation;\n        }\n    }\n}\nexport function toAnnotationPage1(annotationPage) {\n    return {\n        ...annotationPage,\n        items: annotationPage.items.map(toAnnotation1)\n    };\n}\nexport function toGeoreferencedMap2(georeferencedMap) {\n    if (isGeoreferencedMap2(georeferencedMap)) {\n        return georeferencedMap;\n    }\n    else {\n        const convertedMap = parseAnnotation(generateAnnotation(georeferencedMap));\n        return convertedMap[0];\n    }\n}\nexport function toGeoreferencedMaps2(georeferencedMap) {\n    return georeferencedMap.map(toGeoreferencedMap2);\n}\n", "import { Annotation0Schema, Annotation1Schema, AnnotationPage0Schema, AnnotationPage1Schema } from './schemas/annotation.js';\nimport { GeoreferencedMap1Schema, GeoreferencedMaps1Schema, GeoreferencedMap2Schema, GeoreferencedMaps2Schema } from './schemas/georeferenced-map.js';\nimport { toAnnotation1, toAnnotationPage1, toGeoreferencedMap2, toGeoreferencedMaps2 } from './convert.js';\nimport { isAnnotationPageBeforeParse, isAnnotation0BeforeParse, isGeoreferencedMapsBeforeParse, isGeoreferencedMap2BeforeParse } from './before-parse.js';\nexport function validateAnnotation(annotation) {\n    if (isAnnotationPageBeforeParse(annotation)) {\n        // Seperate .parse for different versions for better Zod errors\n        let parsedAnnotationPage;\n        if ('items' in annotation &&\n            Array.isArray(annotation.items) &&\n            isAnnotation0BeforeParse(annotation.items[0])) {\n            parsedAnnotationPage = AnnotationPage0Schema.parse(annotation);\n        }\n        else {\n            parsedAnnotationPage = AnnotationPage1Schema.parse(annotation);\n        }\n        return toAnnotationPage1(parsedAnnotationPage);\n    }\n    else {\n        // Seperate .parse for different versions for better Zod errors\n        let parsedAnnotation;\n        if (isAnnotation0BeforeParse(annotation)) {\n            parsedAnnotation = Annotation0Schema.parse(annotation);\n        }\n        else {\n            parsedAnnotation = Annotation1Schema.parse(annotation);\n        }\n        return toAnnotation1(parsedAnnotation);\n    }\n}\nexport function validateGeoreferencedMap(mapOrMaps) {\n    if (isGeoreferencedMapsBeforeParse(mapOrMaps)) {\n        // Seperate .parse for different versions for better Zod errors\n        let parsedGeoreferencedMaps;\n        if (isGeoreferencedMap2BeforeParse(mapOrMaps[0])) {\n            parsedGeoreferencedMaps = GeoreferencedMaps2Schema.parse(mapOrMaps);\n        }\n        else {\n            parsedGeoreferencedMaps = GeoreferencedMaps1Schema.parse(mapOrMaps);\n        }\n        return toGeoreferencedMaps2(parsedGeoreferencedMaps);\n    }\n    else {\n        // Seperate .parse for different versions for better Zod errors\n        let parsedGeoreferencedMap;\n        if (isGeoreferencedMap2BeforeParse(mapOrMaps)) {\n            parsedGeoreferencedMap = GeoreferencedMap2Schema.parse(mapOrMaps);\n        }\n        else {\n            parsedGeoreferencedMap = GeoreferencedMap1Schema.parse(mapOrMaps);\n        }\n        return toGeoreferencedMap2(parsedGeoreferencedMap);\n    }\n}\n", "export { parseAnnotation } from './parser.js';\nexport { generateAnnotation } from './generator.js';\nexport { validateAnnotation, validateGeoreferencedMap } from './validator.js';\nexport { GeoreferencedMap1Schema, GeoreferencedMaps1Schema, GeoreferencedMap1GCPSchema, GeoreferencedMap1ImageSchema, GeoreferencedMap2Schema, GeoreferencedMaps2Schema, GeoreferencedMap2GCPSchema, GeoreferencedMap2ResourceSchema, \n// Default schemas\nGeoreferencedMapSchema, GeoreferencedMapsSchema, GCPSchema, ResourceSchema, \n// All versions\nGeoreferencedMapAllVersionsSchema, GeoreferencedMapsAllVersionsSchema, GCPAllVersionsSchema } from './schemas/georeferenced-map.js';\nexport { Annotation0Schema, AnnotationPage0Schema, Annotation0FeaturePropertiesSchema, Annotation1Schema, AnnotationPage1Schema, Annotation1FeaturePropertiesSchema, SvgSelector0Schema, \n// Default schemas\nAnnotationSchema, AnnotationPageSchema, FeaturePropertiesSchema, SvgSelectorSchema, \n// All versions\nAnnotationAllVersionsSchema, AnnotationPageAllVersionsSchema, FeaturePropertiesAllVersionsSchema } from './schemas/annotation.js';\nexport { PartOfSchema, ResourceMaskSchema, TransformationSchema } from './schemas/shared.js';\n", "export default function (defs) {\n  defs('EPSG:4326', '+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees');\n  defs('EPSG:4269', '+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees');\n  defs('EPSG:3857', '+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs');\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), '+proj=utm +zone=' + i + ' +datum=WGS84 +units=m');\n    defs('EPSG:' + (32700 + i), '+proj=utm +zone=' + i + ' +south +datum=WGS84 +units=m');\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n", "export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0; // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314; // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI / 2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI / 4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n", "var primeMeridian = {};\n\nprimeMeridian.greenwich = 0.0; // \"0dE\",\nprimeMeridian.lisbon = -9.131906111111; // \"9d07'54.862\\\"W\",\nprimeMeridian.paris = 2.337229166667; // \"2d20'14.025\\\"E\",\nprimeMeridian.bogota = -74.080916666667; // \"74d04'51.3\\\"W\",\nprimeMeridian.madrid = -3.687938888889; // \"3d41'16.58\\\"W\",\nprimeMeridian.rome = 12.452333333333; // \"12d27'8.4\\\"E\",\nprimeMeridian.bern = 7.439583333333; // \"7d26'22.5\\\"E\",\nprimeMeridian.jakarta = 106.807719444444; // \"106d48'27.79\\\"E\",\nprimeMeridian.ferro = -17.666666666667; // \"17d40'W\",\nprimeMeridian.brussels = 4.367975; // \"4d22'4.71\\\"E\",\nprimeMeridian.stockholm = 18.058277777778; // \"18d3'29.8\\\"E\",\nprimeMeridian.athens = 23.7163375; // \"23d42'58.815\\\"E\",\nprimeMeridian.oslo = 10.722916666667; // \"10d43'22.5\\\"E\"\n\nexport default primeMeridian;\n", "export default {\n  mm: { to_meter: 0.001 },\n  cm: { to_meter: 0.01 },\n  ft: { to_meter: 0.3048 },\n  'us-ft': { to_meter: 1200 / 3937 },\n  fath: { to_meter: 1.8288 },\n  kmi: { to_meter: 1852 },\n  'us-ch': { to_meter: 20.1168402336805 },\n  'us-mi': { to_meter: 1609.34721869444 },\n  km: { to_meter: 1000 },\n  'ind-ft': { to_meter: 0.30479841 },\n  'ind-yd': { to_meter: 0.91439523 },\n  mi: { to_meter: 1609.344 },\n  yd: { to_meter: 0.9144 },\n  ch: { to_meter: 20.1168 },\n  link: { to_meter: 0.201168 },\n  dm: { to_meter: 0.1 },\n  in: { to_meter: 0.0254 },\n  'ind-ch': { to_meter: 20.11669506 },\n  'us-in': { to_meter: 0.025400050800101 },\n  'us-yd': { to_meter: 0.914401828803658 }\n};\n", "var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n", "import { D2R } from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\n/**\n * @param {string} defData\n * @returns {import('./defs').ProjectionDefinition}\n */\nexport default function (defData) {\n  /** @type {import('./defs').ProjectionDefinition} */\n  var self = {};\n  var paramObj = defData.split('+').map(function (v) {\n    return v.trim();\n  }).filter(function (a) {\n    return a;\n  }).reduce(function (p, a) {\n    /** @type {Array<?>} */\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function (v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function (v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function (v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function (v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function (v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function (v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function (v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function (v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function (v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function (v) {\n      self.rectified_grid_angle = parseFloat(v) * D2R;\n    },\n    lonc: function (v) {\n      self.longc = v * D2R;\n    },\n    x_0: function (v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function (v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function (v) {\n      self.a = parseFloat(v);\n    },\n    b: function (v) {\n      self.b = parseFloat(v);\n    },\n    r: function (v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function () {\n      self.R_A = true;\n    },\n    zone: function (v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function () {\n      self.utmSouth = true;\n    },\n    towgs84: function (v) {\n      self.datum_params = v.split(',').map(function (a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function (v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function (v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function (v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function (v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function (v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      } else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function (v) {\n      var legalAxis = 'ewnsud';\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function () {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      } else {\n        self[paramOutname] = paramVal;\n      }\n    } else {\n      self[paramName] = paramVal;\n    }\n  }\n  if (typeof self.datumCode === 'string' && self.datumCode !== 'WGS84') {\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n", "class PROJJSONBuilderBase {\n  static getId(node) {\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === 'ID');\n    if (idNode && idNode.length >= 3) {\n      return {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      };\n    }\n    return null;\n  }\n\n  static convertUnit(node, type = 'unit') {\n    if (!node || node.length < 3) {\n      return { type, name: 'unknown', conversion_factor: null };\n    }\n\n    const name = node[1];\n    const conversionFactor = parseFloat(node[2]) || null;\n\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === 'ID');\n    const id = idNode\n      ? {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      }\n      : null;\n\n    return {\n      type,\n      name,\n      conversion_factor: conversionFactor,\n      id,\n    };\n  }\n\n  static convertAxis(node) {\n    const name = node[1] || 'Unknown';\n\n    // Determine the direction\n    let direction;\n    const abbreviationMatch = name.match(/^\\((.)\\)$/); // Match abbreviations like \"(E)\" or \"(N)\"\n    if (abbreviationMatch) {\n      // Use the abbreviation to determine the direction\n      const abbreviation = abbreviationMatch[1].toUpperCase();\n      if (abbreviation === 'E') direction = 'east';\n      else if (abbreviation === 'N') direction = 'north';\n      else if (abbreviation === 'U') direction = 'up';\n      else throw new Error(`Unknown axis abbreviation: ${abbreviation}`);\n    } else {\n      // Use the explicit direction provided in the AXIS node\n      direction = node[2] ? node[2].toLowerCase() : 'unknown';\n    }\n\n    const orderNode = node.find((child) => Array.isArray(child) && child[0] === 'ORDER');\n    const order = orderNode ? parseInt(orderNode[1], 10) : null;\n\n    const unitNode = node.find(\n      (child) =>\n        Array.isArray(child) &&\n        (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')\n    );\n    const unit = this.convertUnit(unitNode);\n\n    return {\n      name,\n      direction, // Use the valid PROJJSON direction value\n      unit,\n      order,\n    };\n  }\n\n  static extractAxes(node) {\n    return node\n      .filter((child) => Array.isArray(child) && child[0] === 'AXIS')\n      .map((axis) => this.convertAxis(axis))\n      .sort((a, b) => (a.order || 0) - (b.order || 0)); // Sort by the \"order\" property\n  }\n\n  static convert(node, result = {}) {\n\n    switch (node[0]) {\n      case 'PROJCRS':\n        result.type = 'ProjectedCRS';\n        result.name = node[1];\n        result.base_crs = node.find((child) => Array.isArray(child) && child[0] === 'BASEGEOGCRS')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'BASEGEOGCRS'))\n          : null;\n        result.conversion = node.find((child) => Array.isArray(child) && child[0] === 'CONVERSION')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'CONVERSION'))\n          : null;\n\n        const csNode = node.find((child) => Array.isArray(child) && child[0] === 'CS');\n        if (csNode) {\n          result.coordinate_system = {\n            type: csNode[1],\n            axis: this.extractAxes(node),\n          };\n        }\n\n        const lengthUnitNode = node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT');\n        if (lengthUnitNode) {\n          const unit = this.convertUnit(lengthUnitNode);\n          result.coordinate_system.unit = unit; // Add unit to coordinate_system\n        }\n\n        result.id = this.getId(node);\n        break;\n\n      case 'BASEGEOGCRS':\n      case 'GEOGCRS':\n        result.type = 'GeographicCRS';\n        result.name = node[1];\n      \n        // Handle DATUM or ENSEMBLE\n        const datumOrEnsembleNode = node.find(\n          (child) => Array.isArray(child) && (child[0] === 'DATUM' || child[0] === 'ENSEMBLE')\n        );\n        if (datumOrEnsembleNode) {\n          const datumOrEnsemble = this.convert(datumOrEnsembleNode);\n          if (datumOrEnsembleNode[0] === 'ENSEMBLE') {\n            result.datum_ensemble = datumOrEnsemble;\n          } else {\n            result.datum = datumOrEnsemble;\n          }\n          const primem = node.find((child) => Array.isArray(child) && child[0] === 'PRIMEM');\n          if (primem && primem[1] !== 'Greenwich') {\n            datumOrEnsemble.prime_meridian = {\n              name: primem[1],\n              longitude: parseFloat(primem[2]),\n            }\n          }\n        }\n      \n        result.coordinate_system = {\n          type: 'ellipsoidal',\n          axis: this.extractAxes(node),\n        };\n      \n        result.id = this.getId(node);\n        break;\n\n      case 'DATUM':\n        result.type = 'GeodeticReferenceFrame';\n        result.name = node[1];\n        result.ellipsoid = node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID'))\n          : null;\n        break;\n      \n      case 'ENSEMBLE':\n        result.type = 'DatumEnsemble';\n        result.name = node[1];\n      \n        // Extract ensemble members\n        result.members = node\n          .filter((child) => Array.isArray(child) && child[0] === 'MEMBER')\n          .map((member) => ({\n            type: 'DatumEnsembleMember',\n            name: member[1],\n            id: this.getId(member), // Extract ID as { authority, code }\n          }));\n      \n        // Extract accuracy\n        const accuracyNode = node.find((child) => Array.isArray(child) && child[0] === 'ENSEMBLEACCURACY');\n        if (accuracyNode) {\n          result.accuracy = parseFloat(accuracyNode[1]);\n        }\n      \n        // Extract ellipsoid\n        const ellipsoidNode = node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID');\n        if (ellipsoidNode) {\n          result.ellipsoid = this.convert(ellipsoidNode); // Convert the ellipsoid node\n        }\n      \n        // Extract identifier for the ensemble\n        result.id = this.getId(node);\n        break;\n\n      case 'ELLIPSOID':\n        result.type = 'Ellipsoid';\n        result.name = node[1];\n        result.semi_major_axis = parseFloat(node[2]);\n        result.inverse_flattening = parseFloat(node[3]);\n        const units = node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT'), result)\n          : null;\n        break;\n\n      case 'CONVERSION':\n        result.type = 'Conversion';\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === 'METHOD')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'METHOD'))\n          : null;\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && child[0] === 'PARAMETER')\n          .map((param) => this.convert(param));\n        break;\n\n      case 'METHOD':\n        result.type = 'Method';\n        result.name = node[1];\n        result.id = this.getId(node);\n        break;\n\n      case 'PARAMETER':\n        result.type = 'Parameter';\n        result.name = node[1];\n        result.value = parseFloat(node[2]);\n        result.unit = this.convertUnit(\n          node.find(\n            (child) =>\n              Array.isArray(child) &&\n              (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')\n          )\n        );\n        result.id = this.getId(node);\n        break;\n\n      case 'BOUNDCRS':\n        result.type = 'BoundCRS';\n\n        // Process SOURCECRS\n        const sourceCrsNode = node.find((child) => Array.isArray(child) && child[0] === 'SOURCECRS');\n        if (sourceCrsNode) {\n          const sourceCrsContent = sourceCrsNode.find((child) => Array.isArray(child));\n          result.source_crs = sourceCrsContent ? this.convert(sourceCrsContent) : null;\n        }\n\n        // Process TARGETCRS\n        const targetCrsNode = node.find((child) => Array.isArray(child) && child[0] === 'TARGETCRS');\n        if (targetCrsNode) {\n          const targetCrsContent = targetCrsNode.find((child) => Array.isArray(child));\n          result.target_crs = targetCrsContent ? this.convert(targetCrsContent) : null;\n        }\n\n        // Process ABRIDGEDTRANSFORMATION\n        const transformationNode = node.find((child) => Array.isArray(child) && child[0] === 'ABRIDGEDTRANSFORMATION');\n        if (transformationNode) {\n          result.transformation = this.convert(transformationNode);\n        } else {\n          result.transformation = null;\n        }\n        break;\n\n      case 'ABRIDGEDTRANSFORMATION':\n        result.type = 'Transformation';\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === 'METHOD')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'METHOD'))\n          : null;\n\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && (child[0] === 'PARAMETER' || child[0] === 'PARAMETERFILE'))\n          .map((param) => {\n            if (param[0] === 'PARAMETER') {\n              return this.convert(param);\n            } else if (param[0] === 'PARAMETERFILE') {\n              return {\n                name: param[1],\n                value: param[2],\n                id: {\n                  'authority': 'EPSG',\n                  'code': 8656\n                }\n              };\n            }\n          });\n\n        // Adjust the Scale difference parameter if present\n        if (result.parameters.length === 7) {\n          const scaleDifference = result.parameters[6];\n          if (scaleDifference.name === 'Scale difference') {\n            scaleDifference.value = Math.round((scaleDifference.value - 1) * 1e12) / 1e6;\n          }\n        }\n\n        result.id = this.getId(node);\n        break;\n      \n      case 'AXIS':\n        if (!result.coordinate_system) {\n          result.coordinate_system = { type: 'unspecified', axis: [] };\n        }\n        result.coordinate_system.axis.push(this.convertAxis(node));\n        break;\n      \n      case 'LENGTHUNIT':\n        const unit = this.convertUnit(node, 'LinearUnit');\n        if (result.coordinate_system && result.coordinate_system.axis) {\n          result.coordinate_system.axis.forEach((axis) => {\n            if (!axis.unit) {\n              axis.unit = unit;\n            }\n          });\n        }\n        if (unit.conversion_factor && unit.conversion_factor !== 1) {\n          if (result.semi_major_axis) {\n            result.semi_major_axis = {\n              value: result.semi_major_axis,\n              unit,\n            }\n          }\n        }\n        break;\n\n      default:\n        result.keyword = node[0];\n        break;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilderBase;", "import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2015 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Skip `CS` and `USAGE` nodes for WKT2-2015\n    if (result.coordinate_system && result.coordinate_system.subtype === 'Cartesian') {\n      delete result.coordinate_system;\n    }\n    if (result.usage) {\n      delete result.usage;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2015;", "import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2019 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Handle `CS` node for WKT2-2019\n    const csNode = node.find((child) => Array.isArray(child) && child[0] === 'CS');\n    if (csNode) {\n      result.coordinate_system = {\n        subtype: csNode[1],\n        axis: this.extractAxes(node),\n      };\n    }\n\n    // Handle `USAGE` node for WKT2-2019\n    const usageNode = node.find((child) => Array.isArray(child) && child[0] === 'USAGE');\n    if (usageNode) {\n      const scope = usageNode.find((child) => Array.isArray(child) && child[0] === 'SCOPE');\n      const area = usageNode.find((child) => Array.isArray(child) && child[0] === 'AREA');\n      const bbox = usageNode.find((child) => Array.isArray(child) && child[0] === 'BBOX');\n      result.usage = {};\n      if (scope) {\n        result.usage.scope = scope[1];\n      }\n      if (area) {\n        result.usage.area = area[1];\n      }\n      if (bbox) {\n        result.usage.bbox = bbox.slice(1);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2019;", "import PROJJSONBuilder2015 from './PROJJSONBuilder2015.js';\nimport PROJJSONBuilder2019 from './PROJJSONBuilder2019.js';\n\n/**\n * Detects the WKT2 version based on the structure of the WKT.\n * @param {Array} root The root WKT array node.\n * @returns {string} The detected version (\"2015\" or \"2019\").\n */\nfunction detectWKT2Version(root) {\n  // Check for WKT2-2019-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === 'USAGE')) {\n    return '2019'; // `USAGE` is specific to WKT2-2019\n  }\n\n  // Check for WKT2-2015-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === 'CS')) {\n    return '2015'; // `CS` is valid in both, but default to 2015 unless `USAGE` is present\n  }\n\n  if (root[0] === 'BOUNDCRS' || root[0] === 'PROJCRS' || root[0] === 'GEOGCRS') {\n    return '2015'; // These are valid in both, but default to 2015\n  }\n\n  // Default to WKT2-2015 if no specific indicators are found\n  return '2015';\n}\n\n/**\n * Builds a PROJJSON object from a WKT array structure.\n * @param {Array} root The root WKT array node.\n * @returns {Object} The PROJJSON object.\n */\nexport function buildPROJJSON(root) {\n  const version = detectWKT2Version(root);\n  const builder = version === '2019' ? PROJJSONBuilder2019 : PROJJSONBuilder2015;\n  return builder.convert(root);\n}\n", "/**\n * Detects whether the WKT string is WKT1 or WKT2.\n * @param {string} wkt The WKT string.\n * @returns {string} The detected version (\"WKT1\" or \"WKT2\").\n */\nexport function detectWKTVersion(wkt) {\n  // Normalize the WKT string for easier keyword matching\n  const normalizedWKT = wkt.toUpperCase();\n\n  // Check for WKT2-specific keywords\n  if (\n    normalizedWKT.includes('PROJCRS') ||\n    normalizedWKT.includes('GEOGCRS') ||\n    normalizedWKT.includes('BOUNDCRS') ||\n    normalizedWKT.includes('VERTCRS') ||\n    normalizedWKT.includes('LENGTHUNIT') ||\n    normalizedWKT.includes('ANGLEUNIT') ||\n    normalizedWKT.includes('SCALEUNIT')\n  ) {\n    return 'WKT2';\n  }\n\n  // Check for WKT1-specific keywords\n  if (\n    normalizedWKT.includes('PROJCS') ||\n    normalizedWKT.includes('GEOGCS') ||\n    normalizedWKT.includes('LOCAL_CS') ||\n    normalizedWKT.includes('VERT_CS') ||\n    normalizedWKT.includes('UNIT')\n  ) {\n    return 'WKT1';\n  }\n\n  // Default to WKT1 if no specific indicators are found\n  return 'WKT1';\n}", "export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n", "\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n", "var D2R = 0.01745329251994329577;\n\nexport function d2r(input) {\n  return input * D2R;\n}\n\nexport function applyProjectionDefaults(wkt) {\n  // Normalize projName for WKT2 compatibility\n  const normalizedProjName = (wkt.projName || '').toLowerCase().replace(/_/g, ' ');\n\n  if (!wkt.long0 && wkt.longc && (normalizedProjName === 'albers conic equal area' || normalizedProjName === 'lambert azimuthal equal area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (normalizedProjName === 'stereographic south pole' || normalizedProjName === 'polar stereographic (variant b)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n    delete wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && (normalizedProjName === 'polar stereographic' || normalizedProjName === 'polar stereographic (variant a)')) {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n    delete wkt.lat1;\n  }\n}", "import { applyProjectionDefaults } from './util.js';\n\n// Helper function to process units and to_meter\nfunction processUnit(unit) {\n  let result = { units: null, to_meter: undefined };\n\n  if (typeof unit === 'string') {\n    result.units = unit.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    if (result.units === 'meter') {\n      result.to_meter = 1; // Only set to_meter if units are 'meter'\n    }\n  } else if (unit && unit.name) {\n    result.units = unit.name.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    result.to_meter = unit.conversion_factor;\n  }\n\n  return result;\n}\n\nfunction toValue(valueOrObject) {\n  if (typeof valueOrObject === 'object') {\n    return valueOrObject.value * valueOrObject.unit.conversion_factor;\n  }\n  return valueOrObject;\n}\n\nfunction calculateEllipsoid(value, result) {\n  if (value.ellipsoid.radius) {\n    result.a = value.ellipsoid.radius;\n    result.rf = 0;\n  } else {\n    result.a = toValue(value.ellipsoid.semi_major_axis);\n    if (value.ellipsoid.inverse_flattening !== undefined) {\n      result.rf = value.ellipsoid.inverse_flattening;\n    } else if (value.ellipsoid.semi_major_axis !== undefined && value.ellipsoid.semi_minor_axis !== undefined) {\n      result.rf = result.a / (result.a - toValue(value.ellipsoid.semi_minor_axis));\n    }\n  }\n}\n\nexport function transformPROJJSON(projjson, result = {}) {\n  if (!projjson || typeof projjson !== 'object') {\n    return projjson; // Return primitive values as-is\n  }\n\n  if (projjson.type === 'BoundCRS') {\n    transformPROJJSON(projjson.source_crs, result);\n\n    if (projjson.transformation) {\n      if (projjson.transformation.method && projjson.transformation.method.name === 'NTv2') {\n        // Set nadgrids to the filename from the parameterfile\n        result.nadgrids = projjson.transformation.parameters[0].value;\n      } else {\n        // Populate datum_params if no parameterfile is found\n        result.datum_params = projjson.transformation.parameters.map((param) => param.value);\n      }\n    }\n    return result; // Return early for BoundCRS\n  }\n\n  // Handle specific keys in PROJJSON\n  Object.keys(projjson).forEach((key) => {\n    const value = projjson[key];\n    if (value === null) {\n      return;\n    }\n\n    switch (key) {\n      case 'name':\n        if (result.srsCode) {\n          break;\n        }\n        result.name = value;\n        result.srsCode = value; // Map `name` to `srsCode`\n        break;\n\n      case 'type':\n        if (value === 'GeographicCRS') {\n          result.projName = 'longlat';\n        } else if (value === 'ProjectedCRS' && projjson.conversion && projjson.conversion.method) {\n          result.projName = projjson.conversion.method.name; // Retain original capitalization\n        }\n        break;\n\n      case 'datum':\n      case 'datum_ensemble': // Handle both datum and ensemble\n        if (value.ellipsoid) {\n          // Extract ellipsoid properties\n          result.ellps = value.ellipsoid.name;\n          calculateEllipsoid(value, result);\n        }\n        if (value.prime_meridian) {\n          result.from_greenwich = value.prime_meridian.longitude * Math.PI / 180; // Convert to radians\n        }\n        break;\n\n      case 'ellipsoid':\n        result.ellps = value.name;\n        calculateEllipsoid(value, result);\n        break;\n\n      case 'prime_meridian':\n        result.long0 = (value.longitude || 0) * Math.PI / 180; // Convert to radians\n        break;\n\n      case 'coordinate_system':\n        if (value.axis) {\n          result.axis = value.axis\n            .map((axis) => {\n              const direction = axis.direction;\n              if (direction === 'east') return 'e';\n              if (direction === 'north') return 'n';\n              if (direction === 'west') return 'w';\n              if (direction === 'south') return 's';\n              throw new Error(`Unknown axis direction: ${direction}`);\n            })\n            .join('') + 'u'; // Combine into a single string (e.g., \"enu\")\n\n          if (value.unit) {\n            const { units, to_meter } = processUnit(value.unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          } else if (value.axis[0] && value.axis[0].unit) {\n            const { units, to_meter } = processUnit(value.axis[0].unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          }\n        }\n        break;\n        \n      case 'id':\n        if (value.authority && value.code) {\n          result.title = value.authority + ':' + value.code;\n        }\n        break;\n\n      case 'conversion':\n        if (value.method && value.method.name) {\n          result.projName = value.method.name; // Retain original capitalization\n        }\n        if (value.parameters) {\n          value.parameters.forEach((param) => {\n            const paramName = param.name.toLowerCase().replace(/\\s+/g, '_');\n            const paramValue = param.value;\n            if (param.unit && param.unit.conversion_factor) {\n              result[paramName] = paramValue * param.unit.conversion_factor; // Convert to radians or meters\n            } else if (param.unit === 'degree') {\n              result[paramName] = paramValue * Math.PI / 180; // Convert to radians\n            } else {\n              result[paramName] = paramValue;\n            }\n          });\n        }\n        break;\n\n      case 'unit':\n        if (value.name) {\n          result.units = value.name.toLowerCase();\n          if (result.units === 'metre') {\n            result.units = 'meter';\n          }\n        }\n        if (value.conversion_factor) {\n          result.to_meter = value.conversion_factor;\n        }\n        break;\n\n      case 'base_crs':\n        transformPROJJSON(value, result); // Pass `result` directly\n        result.datumCode = value.id ? value.id.authority + '_' + value.id.code : value.name; // Set datumCode\n        break;\n\n      default:\n        // Ignore irrelevant or unneeded properties\n        break;\n    }\n  });\n\n  // Additional calculated properties\n  if (result.latitude_of_false_origin !== undefined) {\n    result.lat0 = result.latitude_of_false_origin; // Already in radians\n  }\n  if (result.longitude_of_false_origin !== undefined) {\n    result.long0 = result.longitude_of_false_origin;\n  }\n  if (result.latitude_of_standard_parallel !== undefined) {\n    result.lat0 = result.latitude_of_standard_parallel;\n    result.lat1 = result.latitude_of_standard_parallel;\n  }\n  if (result.latitude_of_1st_standard_parallel !== undefined) {\n    result.lat1 = result.latitude_of_1st_standard_parallel;\n  }\n  if (result.latitude_of_2nd_standard_parallel !== undefined) {\n    result.lat2 = result.latitude_of_2nd_standard_parallel; \n  }\n  if (result.latitude_of_projection_centre !== undefined) {\n    result.lat0 = result.latitude_of_projection_centre;\n  }\n  if (result.longitude_of_projection_centre !== undefined) {\n    result.longc = result.longitude_of_projection_centre;\n  }\n  if (result.easting_at_false_origin !== undefined) {\n    result.x0 = result.easting_at_false_origin;\n  }\n  if (result.northing_at_false_origin !== undefined) {\n    result.y0 = result.northing_at_false_origin;\n  }\n  if (result.latitude_of_natural_origin !== undefined) {\n    result.lat0 = result.latitude_of_natural_origin;\n  }\n  if (result.longitude_of_natural_origin !== undefined) {\n    result.long0 = result.longitude_of_natural_origin;\n  }\n  if (result.longitude_of_origin !== undefined) {\n    result.long0 = result.longitude_of_origin;\n  }\n  if (result.false_easting !== undefined) {\n    result.x0 = result.false_easting;\n  }\n  if (result.easting_at_projection_centre) {\n    result.x0 = result.easting_at_projection_centre;\n  }\n  if (result.false_northing !== undefined) {\n    result.y0 = result.false_northing;\n  }\n  if (result.northing_at_projection_centre) {\n    result.y0 = result.northing_at_projection_centre;\n  }\n  if (result.standard_parallel_1 !== undefined) {\n    result.lat1 = result.standard_parallel_1;\n  }\n  if (result.standard_parallel_2 !== undefined) {\n    result.lat2 = result.standard_parallel_2;\n  }\n  if (result.scale_factor_at_natural_origin !== undefined) {\n    result.k0 = result.scale_factor_at_natural_origin;\n  }\n  if (result.scale_factor_at_projection_centre !== undefined) {\n    result.k0 = result.scale_factor_at_projection_centre;\n  }\n  if (result.scale_factor_on_pseudo_standard_parallel !== undefined) {  \n    result.k0 = result.scale_factor_on_pseudo_standard_parallel;\n  }\n  if (result.azimuth !== undefined) {\n    result.alpha = result.azimuth;\n  }\n  if (result.azimuth_at_projection_centre !== undefined) {\n    result.alpha = result.azimuth_at_projection_centre;\n  }\n  if (result.angle_from_rectified_to_skew_grid) {\n    result.rectified_grid_angle = result.angle_from_rectified_to_skew_grid;\n  }\n\n  // Apply projection defaults\n  applyProjectionDefaults(result);\n\n  return result;\n}", "import { buildPROJJSON } from './buildPROJJSON.js';\nimport { detectWKTVersion } from './detectWKTVersion.js';\nimport parser from './parser.js';\nimport {sExpr} from './process.js';\nimport { transformPROJJSON } from './transformPROJJSON.js';\nimport { applyProjectionDefaults, d2r } from './util.js';\n\nvar knownTypes = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS',\n  'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction cleanWKT(wkt) {\n  var keys = Object.keys(wkt);\n  for (var i = 0, ii = keys.length; i <ii; ++i) {\n    var key = keys[i];\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    if (knownTypes.indexOf(key) !== -1) {\n      setPropertiesFromWkt(wkt[key]);\n    }\n    if (typeof wkt[key] === 'object') {\n      cleanWKT(wkt[key]);\n    }\n  }\n}\n\nfunction setPropertiesFromWkt(wkt) {\n  if (wkt.AUTHORITY) {\n    var authority = Object.keys(wkt.AUTHORITY)[0];\n    if (authority && authority in wkt.AUTHORITY) {\n      wkt.title = authority + ':' + wkt.AUTHORITY[authority];\n    }\n  }\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode === 'belge_1972') {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n  if (wkt.rectified_grid_angle) {\n    wkt.rectified_grid_angle = d2r(wkt.rectified_grid_angle);\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  applyProjectionDefaults(wkt);\n}\nexport default function(wkt) {\n  if (typeof wkt === 'object') {\n    return transformPROJJSON(wkt);\n  }\n  const version = detectWKTVersion(wkt);\n  var lisp = parser(wkt);\n  if (version === 'WKT2') {\n    const projjson = buildPROJJSON(lisp);\n    return transformPROJJSON(projjson);\n  }\n  var type = lisp[0];\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj[type];\n}\n", "import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\n/**\n * @typedef {Object} ProjectionDefinition\n * @property {string} title\n * @property {string} [projName]\n * @property {string} [ellps]\n * @property {import('./Proj.js').DatumDefinition} [datum]\n * @property {string} [datumName]\n * @property {number} [rf]\n * @property {number} [lat0]\n * @property {number} [lat1]\n * @property {number} [lat2]\n * @property {number} [lat_ts]\n * @property {number} [long0]\n * @property {number} [long1]\n * @property {number} [long2]\n * @property {number} [alpha]\n * @property {number} [longc]\n * @property {number} [x0]\n * @property {number} [y0]\n * @property {number} [k0]\n * @property {number} [a]\n * @property {number} [b]\n * @property {true} [R_A]\n * @property {number} [zone]\n * @property {true} [utmSouth]\n * @property {string|Array<number>} [datum_params]\n * @property {number} [to_meter]\n * @property {string} [units]\n * @property {number} [from_greenwich]\n * @property {string} [datumCode]\n * @property {string} [nadgrids]\n * @property {string} [axis]\n * @property {boolean} [sphere]\n * @property {number} [rectified_grid_angle]\n * @property {boolean} [approx]\n * @property {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} inverse\n * @property {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} forward\n */\n\n/**\n * @overload\n * @param {string} name\n * @param {string|ProjectionDefinition|import('./core.js').PROJJSONDefinition} projection\n * @returns {void}\n */\n/**\n * @overload\n * @param {Array<[string, string]>} name\n * @returns {Array<ProjectionDefinition|undefined>}\n */\n/**\n * @overload\n * @param {string} name\n * @returns {ProjectionDefinition}\n */\n\n/**\n * @param {string | Array<Array<string>> | Partial<Record<'EPSG'|'ESRI'|'IAU2000', ProjectionDefinition>>} name\n * @returns {ProjectionDefinition | Array<ProjectionDefinition|undefined> | void}\n */\nfunction defs(name) {\n  /* global console */\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[/** @type {string} */ (name)] = parseProj(arguments[1]);\n      } else {\n        defs[/** @type {string} */ (name)] = wkt(arguments[1]);\n      }\n    } else {\n      defs[/** @type {string} */ (name)] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          return defs.apply(that, v);\n        } else {\n          return defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n    return;\n  }\n}\nglobals(defs);\nexport default defs;\n", "import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code) {\n  return typeof code === 'string';\n}\nfunction testDef(code) {\n  return code in defs;\n}\nfunction testWKT(code) {\n  return (code.indexOf('+') !== 0 && code.indexOf('[') !== -1) || (typeof code === 'object' && !('srsCode' in code));\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code) {\n  return code[0] === '+';\n}\n/**\n * @param {string | import('./core').PROJJSONDefinition | import('./defs').ProjectionDefinition} code\n * @returns {import('./defs').ProjectionDefinition}\n */\nfunction parse(code) {\n  if (testObj(code)) {\n    // check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  } else if (!('projName' in code)) {\n    return wkt(code);\n  } else {\n    return code;\n  }\n}\n\nexport default parse;\n", "export default function (destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n", "export default function (eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n", "export default function (x) {\n  return x < 0 ? -1 : 1;\n}\n", "import { TWO_PI, SPI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n", "import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n", "import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  // console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n", "import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport { FORTPI, R2D, EPSLN, HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} e\n * @property {number} k\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if (!('x0' in this)) {\n    this.x0 = 0;\n  }\n  if (!('y0' in this)) {\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    } else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  } else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      } else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  -------------------------------------------------- */\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  } else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    } else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  -------------------------------------------------- */\nexport function inverse(p) {\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  } else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mercator', 'Popular Visualisation Pseudo Mercator', 'Mercator_1SP', 'Mercator_Auxiliary_Sphere', 'Mercator_Variant_A', 'merc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export function init() {\n  // no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport { identity as forward };\nexport { identity as inverse };\nexport var names = ['longlat', 'identity'];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n", "import merc from './projections/merc';\nimport longlat from './projections/longlat';\n/** @type {Array<Partial<import('./Proj').default>>} */\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\n/**\n * @param {import('./Proj').default} proj\n * @param {number} i\n */\nexport function add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function (n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport function getNormalizedProjName(n) {\n  return n.replace(/[-\\(\\)\\s]+/g, ' ').trim().replace(/ /g, '_');\n}\n\n/**\n * Get a projection by name.\n * @param {string} name\n * @returns {import('./Proj').default|false}\n */\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n  n = getNormalizedProjName(n);\n  if (n in names && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n", "var ellipsoids = {\n  MERIT: {\n    a: 6378137,\n    rf: 298.257,\n    ellipseName: 'MERIT 1983'\n  },\n  SGS85: {\n    a: 6378136,\n    rf: 298.257,\n    ellipseName: 'Soviet Geodetic System 85'\n  },\n  GRS80: {\n    a: 6378137,\n    rf: 298.257222101,\n    ellipseName: 'GRS 1980(IUGG, 1980)'\n  },\n  IAU76: {\n    a: 6378140,\n    rf: 298.257,\n    ellipseName: 'IAU 1976'\n  },\n  airy: {\n    a: 6377563.396,\n    b: 6356256.91,\n    ellipseName: 'Airy 1830'\n  },\n  APL4: {\n    a: 6378137,\n    rf: 298.25,\n    ellipseName: 'Appl. Physics. 1965'\n  },\n  NWL9D: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'Naval Weapons Lab., 1965'\n  },\n  mod_airy: {\n    a: 6377340.189,\n    b: 6356034.446,\n    ellipseName: 'Modified Airy'\n  },\n  andrae: {\n    a: 6377104.43,\n    rf: 300,\n    ellipseName: 'Andrae 1876 (Den., Iclnd.)'\n  },\n  aust_SA: {\n    a: 6378160,\n    rf: 298.25,\n    ellipseName: 'Australian Natl & S. Amer. 1969'\n  },\n  GRS67: {\n    a: 6378160,\n    rf: 298.247167427,\n    ellipseName: 'GRS 67(IUGG 1967)'\n  },\n  bessel: {\n    a: 6377397.155,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841'\n  },\n  bess_nam: {\n    a: 6377483.865,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841 (Namibia)'\n  },\n  clrk66: {\n    a: 6378206.4,\n    b: 6356583.8,\n    ellipseName: 'Clarke 1866'\n  },\n  clrk80: {\n    a: 6378249.145,\n    rf: 293.4663,\n    ellipseName: 'Clarke 1880 mod.'\n  },\n  clrk80ign: {\n    a: 6378249.2,\n    b: 6356515,\n    rf: 293.4660213,\n    ellipseName: 'Clarke 1880 (IGN)'\n  },\n  clrk58: {\n    a: 6378293.645208759,\n    rf: 294.2606763692654,\n    ellipseName: 'Clarke 1858'\n  },\n  CPM: {\n    a: 6375738.7,\n    rf: 334.29,\n    ellipseName: 'Comm. des Poids et Mesures 1799'\n  },\n  delmbr: {\n    a: 6376428,\n    rf: 311.5,\n    ellipseName: 'Delambre 1810 (Belgium)'\n  },\n  engelis: {\n    a: 6378136.05,\n    rf: 298.2566,\n    ellipseName: 'Engelis 1985'\n  },\n  evrst30: {\n    a: 6377276.345,\n    rf: 300.8017,\n    ellipseName: 'Everest 1830'\n  },\n  evrst48: {\n    a: 6377304.063,\n    rf: 300.8017,\n    ellipseName: 'Everest 1948'\n  },\n  evrst56: {\n    a: 6377301.243,\n    rf: 300.8017,\n    ellipseName: 'Everest 1956'\n  },\n  evrst69: {\n    a: 6377295.664,\n    rf: 300.8017,\n    ellipseName: 'Everest 1969'\n  },\n  evrstSS: {\n    a: 6377298.556,\n    rf: 300.8017,\n    ellipseName: 'Everest (Sabah & Sarawak)'\n  },\n  fschr60: {\n    a: 6378166,\n    rf: 298.3,\n    ellipseName: 'Fischer (Mercury Datum) 1960'\n  },\n  fschr60m: {\n    a: 6378155,\n    rf: 298.3,\n    ellipseName: 'Fischer 1960'\n  },\n  fschr68: {\n    a: 6378150,\n    rf: 298.3,\n    ellipseName: 'Fischer 1968'\n  },\n  helmert: {\n    a: 6378200,\n    rf: 298.3,\n    ellipseName: 'Helmert 1906'\n  },\n  hough: {\n    a: 6378270,\n    rf: 297,\n    ellipseName: 'Hough'\n  },\n  intl: {\n    a: 6378388,\n    rf: 297,\n    ellipseName: 'International 1909 (Hayford)'\n  },\n  kaula: {\n    a: 6378163,\n    rf: 298.24,\n    ellipseName: 'Kaula 1961'\n  },\n  lerch: {\n    a: 6378139,\n    rf: 298.257,\n    ellipseName: 'Lerch 1979'\n  },\n  mprts: {\n    a: 6397300,\n    rf: 191,\n    ellipseName: 'Maupertius 1738'\n  },\n  new_intl: {\n    a: 6378157.5,\n    b: 6356772.2,\n    ellipseName: 'New International 1967'\n  },\n  plessis: {\n    a: 6376523,\n    rf: 6355863,\n    ellipseName: 'Plessis 1817 (France)'\n  },\n  krass: {\n    a: 6378245,\n    rf: 298.3,\n    ellipseName: 'Krassovsky, 1942'\n  },\n  SEasia: {\n    a: 6378155,\n    b: 6356773.3205,\n    ellipseName: 'Southeast Asia'\n  },\n  walbeck: {\n    a: 6376896,\n    b: 6355834.8467,\n    ellipseName: 'Walbeck'\n  },\n  WGS60: {\n    a: 6378165,\n    rf: 298.3,\n    ellipseName: 'WGS 60'\n  },\n  WGS66: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'WGS 66'\n  },\n  WGS7: {\n    a: 6378135,\n    rf: 298.26,\n    ellipseName: 'WGS 72'\n  },\n  WGS84: {\n    a: 6378137,\n    rf: 298.257223563,\n    ellipseName: 'WGS 84'\n  },\n  sphere: {\n    a: 6370997,\n    b: 6370997,\n    ellipseName: 'Normal Sphere (r=6370997)'\n  }\n};\n\nexport default ellipsoids;\n", "import { SIXTH, RA4, RA6, EPSLN } from './constants/values';\nimport { default as Ellipsoid } from './constants/Ellipsoid';\nimport match from './match';\n\nconst WGS84 = Ellipsoid.WGS84; // default ellipsoid\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n", "var datums = {\n  wgs84: {\n    towgs84: '0,0,0',\n    ellipse: 'WGS84',\n    datumName: 'WGS84'\n  },\n  ch1903: {\n    towgs84: '674.374,15.056,405.346',\n    ellipse: 'bessel',\n    datumName: 'swiss'\n  },\n  ggrs87: {\n    towgs84: '-199.87,74.79,246.62',\n    ellipse: 'GRS80',\n    datumName: 'Greek_Geodetic_Reference_System_1987'\n  },\n  nad83: {\n    towgs84: '0,0,0',\n    ellipse: 'GRS80',\n    datumName: 'North_American_Datum_1983'\n  },\n  nad27: {\n    nadgrids: '@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat',\n    ellipse: 'clrk66',\n    datumName: 'North_American_Datum_1927'\n  },\n  potsdam: {\n    towgs84: '598.1,73.7,418.2,0.202,0.045,-2.455,6.7',\n    ellipse: 'bessel',\n    datumName: 'Potsdam Rauenberg 1950 DHDN'\n  },\n  carthage: {\n    towgs84: '-263.0,6.0,431.0',\n    ellipse: 'clark80',\n    datumName: 'Carthage 1934 Tunisia'\n  },\n  hermannskogel: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Hermannskogel'\n  },\n  mgi: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Militar-Geographische Institut'\n  },\n  osni52: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'airy',\n    datumName: 'Irish National'\n  },\n  ire65: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'mod_airy',\n    datumName: 'Ireland 1965'\n  },\n  rassadiran: {\n    towgs84: '-133.63,-157.5,-158.62',\n    ellipse: 'intl',\n    datumName: 'Rassadiran'\n  },\n  nzgd49: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993',\n    ellipse: 'intl',\n    datumName: 'New Zealand Geodetic Datum 1949'\n  },\n  osgb36: {\n    towgs84: '446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894',\n    ellipse: 'airy',\n    datumName: 'Ordnance Survey of Great Britain 1936'\n  },\n  s_jtsk: {\n    towgs84: '589,76,480',\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: '106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1',\n    ellipse: 'intl',\n    datumName: 'Reseau National Belge 1972'\n  },\n  EPSG_5451: {\n    towgs84: '6.41,-49.05,-11.28,1.5657,0.5242,6.9718,-5.7649'\n  },\n  IGNF_LURESG: {\n    towgs84: '-192.986,13.673,-39.309,-0.4099,-2.9332,2.6881,0.43'\n  },\n  EPSG_4614: {\n    towgs84: '-119.4248,-303.65872,-11.00061,1.164298,0.174458,1.096259,3.657065'\n  },\n  EPSG_4615: {\n    towgs84: '-494.088,-312.129,279.877,-1.423,-1.013,1.59,-0.748'\n  },\n  ESRI_37241: {\n    towgs84: '-76.822,257.457,-12.817,2.136,-0.033,-2.392,-0.031'\n  },\n  ESRI_37249: {\n    towgs84: '-440.296,58.548,296.265,1.128,10.202,4.559,-0.438'\n  },\n  ESRI_37245: {\n    towgs84: '-511.151,-181.269,139.609,1.05,2.703,1.798,3.071'\n  },\n  EPSG_4178: {\n    towgs84: '24.9,-126.4,-93.2,-0.063,-0.247,-0.041,1.01'\n  },\n  EPSG_4622: {\n    towgs84: '-472.29,-5.63,-304.12,0.4362,-0.8374,0.2563,1.8984'\n  },\n  EPSG_4625: {\n    towgs84: '126.93,547.94,130.41,-2.7867,5.1612,-0.8584,13.8227'\n  },\n  EPSG_5252: {\n    towgs84: '0.023,0.036,-0.068,0.00176,0.00912,-0.01136,0.00439'\n  },\n  EPSG_4314: {\n    towgs84: '597.1,71.4,412.1,0.894,0.068,-1.563,7.58'\n  },\n  EPSG_4282: {\n    towgs84: '-178.3,-316.7,-131.5,5.278,6.077,10.979,19.166'\n  },\n  EPSG_4231: {\n    towgs84: '-83.11,-97.38,-117.22,0.0276,-0.2167,0.2147,0.1218'\n  },\n  EPSG_4274: {\n    towgs84: '-230.994,102.591,25.199,0.633,-0.239,0.9,1.95'\n  },\n  EPSG_4134: {\n    towgs84: '-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006'\n  },\n  EPSG_4254: {\n    towgs84: '18.38,192.45,96.82,0.056,-0.142,-0.2,-0.0013'\n  },\n  EPSG_4159: {\n    towgs84: '-194.513,-63.978,-25.759,-3.4027,3.756,-3.352,-0.9175'\n  },\n  EPSG_4687: {\n    towgs84: '0.072,-0.507,-0.245,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_4227: {\n    towgs84: '-83.58,-397.54,458.78,-17.595,-2.847,4.256,3.225'\n  },\n  EPSG_4746: {\n    towgs84: '599.4,72.4,419.2,-0.062,-0.022,-2.723,6.46'\n  },\n  EPSG_4745: {\n    towgs84: '612.4,77,440.2,-0.054,0.057,-2.797,2.55'\n  },\n  EPSG_6311: {\n    towgs84: '8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926'\n  },\n  EPSG_4289: {\n    towgs84: '565.7381,50.4018,465.2904,-1.91514,1.60363,-9.09546,4.07244'\n  },\n  EPSG_4230: {\n    towgs84: '-68.863,-134.888,-111.49,-0.53,-0.14,0.57,-3.4'\n  },\n  EPSG_4154: {\n    towgs84: '-123.02,-158.95,-168.47'\n  },\n  EPSG_4156: {\n    towgs84: '570.8,85.7,462.8,4.998,1.587,5.261,3.56'\n  },\n  EPSG_4299: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4179: {\n    towgs84: '33.4,-146.6,-76.3,-0.359,-0.053,0.844,-0.84'\n  },\n  EPSG_4313: {\n    towgs84: '-106.8686,52.2978,-103.7239,0.3366,-0.457,1.8422,-1.2747'\n  },\n  EPSG_4194: {\n    towgs84: '163.511,127.533,-159.789'\n  },\n  EPSG_4195: {\n    towgs84: '105,326,-102.5'\n  },\n  EPSG_4196: {\n    towgs84: '-45,417,-3.5'\n  },\n  EPSG_4611: {\n    towgs84: '-162.619,-276.959,-161.764,0.067753,-2.243649,-1.158827,-1.094246'\n  },\n  EPSG_4633: {\n    towgs84: '137.092,131.66,91.475,-1.9436,-11.5993,-4.3321,-7.4824'\n  },\n  EPSG_4641: {\n    towgs84: '-408.809,366.856,-412.987,1.8842,-0.5308,2.1655,-121.0993'\n  },\n  EPSG_4643: {\n    towgs84: '-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7002'\n  },\n  EPSG_4300: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4188: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4660: {\n    towgs84: '982.6087,552.753,-540.873,32.39344,-153.25684,-96.2266,16.805'\n  },\n  EPSG_4662: {\n    towgs84: '97.295,-263.247,310.882,-1.5999,0.8386,3.1409,13.3259'\n  },\n  EPSG_3906: {\n    towgs84: '577.88891,165.22205,391.18289,4.9145,-0.94729,-13.05098,7.78664'\n  },\n  EPSG_4307: {\n    towgs84: '-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547'\n  },\n  EPSG_6892: {\n    towgs84: '-76.269,-16.683,68.562,-6.275,10.536,-4.286,-13.686'\n  },\n  EPSG_4690: {\n    towgs84: '221.597,152.441,176.523,2.403,1.3893,0.884,11.4648'\n  },\n  EPSG_4691: {\n    towgs84: '218.769,150.75,176.75,3.5231,2.0037,1.288,10.9817'\n  },\n  EPSG_4629: {\n    towgs84: '72.51,345.411,79.241,-1.5862,-0.8826,-0.5495,1.3653'\n  },\n  EPSG_4630: {\n    towgs84: '165.804,216.213,180.26,-0.6251,-0.4515,-0.0721,7.4111'\n  },\n  EPSG_4692: {\n    towgs84: '217.109,86.452,23.711,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_9333: {\n    towgs84: '0,0,0,-8.393,0.749,-10.276,0'\n  },\n  EPSG_9059: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4312: {\n    towgs84: '601.705,84.263,485.227,4.7354,1.3145,5.393,-2.3887'\n  },\n  EPSG_4123: {\n    towgs84: '-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496'\n  },\n  EPSG_4309: {\n    towgs84: '-124.45,183.74,44.64,-0.4384,0.5446,-0.9706,-2.1365'\n  },\n  ESRI_104106: {\n    towgs84: '-283.088,-70.693,117.445,-1.157,0.059,-0.652,-4.058'\n  },\n  EPSG_4281: {\n    towgs84: '-219.247,-73.802,269.529'\n  },\n  EPSG_4322: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4324: {\n    towgs84: '0,0,1.9'\n  },\n  EPSG_4284: {\n    towgs84: '43.822,-108.842,-119.585,1.455,-0.761,0.737,0.549'\n  },\n  EPSG_4277: {\n    towgs84: '446.448,-125.157,542.06,0.15,0.247,0.842,-20.489'\n  },\n  EPSG_4207: {\n    towgs84: '-282.1,-72.2,120,-1.529,0.145,-0.89,-4.46'\n  },\n  EPSG_4688: {\n    towgs84: '347.175,1077.618,2623.677,33.9058,-70.6776,9.4013,186.0647'\n  },\n  EPSG_4689: {\n    towgs84: '410.793,54.542,80.501,-2.5596,-2.3517,-0.6594,17.3218'\n  },\n  EPSG_4720: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4273: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  EPSG_4240: {\n    towgs84: '204.64,834.74,293.8'\n  },\n  EPSG_4817: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  ESRI_104131: {\n    towgs84: '426.62,142.62,460.09,4.98,4.49,-12.42,-17.1'\n  },\n  EPSG_4265: {\n    towgs84: '-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68'\n  },\n  EPSG_4263: {\n    towgs84: '-111.92,-87.85,114.5,1.875,0.202,0.219,0.032'\n  },\n  EPSG_4298: {\n    towgs84: '-689.5937,623.84046,-65.93566,-0.02331,1.17094,-0.80054,5.88536'\n  },\n  EPSG_4270: {\n    towgs84: '-253.4392,-148.452,386.5267,0.15605,0.43,-0.1013,-0.0424'\n  },\n  EPSG_4229: {\n    towgs84: '-121.8,98.1,-10.7'\n  },\n  EPSG_4220: {\n    towgs84: '-55.5,-348,-229.2'\n  },\n  EPSG_4214: {\n    towgs84: '12.646,-155.176,-80.863'\n  },\n  EPSG_4232: {\n    towgs84: '-345,3,223'\n  },\n  EPSG_4238: {\n    towgs84: '-1.977,-13.06,-9.993,0.364,0.254,0.689,-1.037'\n  },\n  EPSG_4168: {\n    towgs84: '-170,33,326'\n  },\n  EPSG_4131: {\n    towgs84: '199,931,318.9'\n  },\n  EPSG_4152: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_5228: {\n    towgs84: '572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378'\n  },\n  EPSG_8351: {\n    towgs84: '485.021,169.465,483.839,7.786342,4.397554,4.102655,0'\n  },\n  EPSG_4683: {\n    towgs84: '-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06'\n  },\n  EPSG_4133: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7373: {\n    towgs84: '0.819,-0.5762,-1.6446,-0.00378,-0.03317,0.00318,0.0693'\n  },\n  EPSG_9075: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9072: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9294: {\n    towgs84: '1.16835,-1.42001,-2.24431,-0.00822,-0.05508,0.01818,0.23388'\n  },\n  EPSG_4212: {\n    towgs84: '-267.434,173.496,181.814,-13.4704,8.7154,7.3926,14.7492'\n  },\n  EPSG_4191: {\n    towgs84: '-44.183,-0.58,-38.489,2.3867,2.7072,-3.5196,-8.2703'\n  },\n  EPSG_4237: {\n    towgs84: '52.684,-71.194,-13.975,-0.312,-0.1063,-0.3729,1.0191'\n  },\n  EPSG_4740: {\n    towgs84: '-1.08,-0.27,-0.9'\n  },\n  EPSG_4124: {\n    towgs84: '419.3836,99.3335,591.3451,0.850389,1.817277,-7.862238,-0.99496'\n  },\n  EPSG_5681: {\n    towgs84: '584.9636,107.7175,413.8067,1.1155,0.2824,-3.1384,7.9922'\n  },\n  EPSG_4141: {\n    towgs84: '23.772,17.49,17.859,-0.3132,-1.85274,1.67299,-5.4262'\n  },\n  EPSG_4204: {\n    towgs84: '-85.645,-273.077,-79.708,2.289,-1.421,2.532,3.194'\n  },\n  EPSG_4319: {\n    towgs84: '226.702,-193.337,-35.371,-2.229,-4.391,9.238,0.9798'\n  },\n  EPSG_4200: {\n    towgs84: '24.82,-131.21,-82.66'\n  },\n  EPSG_4130: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4127: {\n    towgs84: '-82.875,-57.097,-156.768,-2.158,1.524,-0.982,-0.359'\n  },\n  EPSG_4149: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4617: {\n    towgs84: '-0.991,1.9072,0.5129,1.25033e-7,4.6785e-8,5.6529e-8,0'\n  },\n  EPSG_4663: {\n    towgs84: '-210.502,-66.902,-48.476,2.094,-15.067,-5.817,0.485'\n  },\n  EPSG_4664: {\n    towgs84: '-211.939,137.626,58.3,-0.089,0.251,0.079,0.384'\n  },\n  EPSG_4665: {\n    towgs84: '-105.854,165.589,-38.312,-0.003,-0.026,0.024,-0.048'\n  },\n  EPSG_4666: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  EPSG_4756: {\n    towgs84: '-192.873,-39.382,-111.202,-0.00205,-0.0005,0.00335,0.0188'\n  },\n  EPSG_4723: {\n    towgs84: '-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925'\n  },\n  EPSG_4726: {\n    towgs84: '8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081'\n  },\n  EPSG_4267: {\n    towgs84: '-8.0,160.0,176.0'\n  },\n  EPSG_5365: {\n    towgs84: '-0.16959,0.35312,0.51846,0.03385,-0.16325,0.03446,0.03693'\n  },\n  EPSG_4218: {\n    towgs84: '304.5,306.5,-318.1'\n  },\n  EPSG_4242: {\n    towgs84: '-33.722,153.789,94.959,-8.581,-4.478,4.54,8.95'\n  },\n  EPSG_4216: {\n    towgs84: '-292.295,248.758,429.447,4.9971,2.99,6.6906,1.0289'\n  },\n  ESRI_104105: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  ESRI_104129: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4673: {\n    towgs84: '174.05,-25.49,112.57'\n  },\n  EPSG_4202: {\n    towgs84: '-124,-60,154'\n  },\n  EPSG_4203: {\n    towgs84: '-117.763,-51.51,139.061,0.292,0.443,0.277,-0.191'\n  },\n  EPSG_3819: {\n    towgs84: '595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408'\n  },\n  EPSG_8694: {\n    towgs84: '-93.799,-132.737,-219.073,-1.844,0.648,-6.37,-0.169'\n  },\n  EPSG_4145: {\n    towgs84: '275.57,676.78,229.6'\n  },\n  EPSG_4283: {\n    towgs84: '61.55,-10.87,-40.19,39.4924,32.7221,32.8979,-9.994'\n  },\n  EPSG_4317: {\n    towgs84: '2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266'\n  },\n  EPSG_4272: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993'\n  },\n  EPSG_4248: {\n    towgs84: '-307.7,265.3,-363.5'\n  },\n  EPSG_5561: {\n    towgs84: '24,-121,-76'\n  },\n  EPSG_5233: {\n    towgs84: '-0.293,766.95,87.713,0.195704,1.695068,3.473016,-0.039338'\n  },\n  ESRI_104130: {\n    towgs84: '-86,-98,-119'\n  },\n  ESRI_104102: {\n    towgs84: '682,-203,480'\n  },\n  ESRI_37207: {\n    towgs84: '7,-10,-26'\n  },\n  EPSG_4675: {\n    towgs84: '59.935,118.4,-10.871'\n  },\n  ESRI_104109: {\n    towgs84: '-89.121,-348.182,260.871'\n  },\n  ESRI_104112: {\n    towgs84: '-185.583,-230.096,281.361'\n  },\n  ESRI_104113: {\n    towgs84: '25.1,-275.6,222.6'\n  },\n  IGNF_WGS72G: {\n    towgs84: '0,12,6'\n  },\n  IGNF_NTFG: {\n    towgs84: '-168,-60,320'\n  },\n  IGNF_EFATE57G: {\n    towgs84: '-127,-769,472'\n  },\n  IGNF_PGP50G: {\n    towgs84: '324.8,153.6,172.1'\n  },\n  IGNF_REUN47G: {\n    towgs84: '94,-948,-1262'\n  },\n  IGNF_CSG67G: {\n    towgs84: '-186,230,110'\n  },\n  IGNF_GUAD48G: {\n    towgs84: '-467,-16,-300'\n  },\n  IGNF_TAHI51G: {\n    towgs84: '162,117,154'\n  },\n  IGNF_TAHAAG: {\n    towgs84: '65,342,77'\n  },\n  IGNF_NUKU72G: {\n    towgs84: '84,274,65'\n  },\n  IGNF_PETRELS72G: {\n    towgs84: '365,194,166'\n  },\n  IGNF_WALL78G: {\n    towgs84: '253,-133,-127'\n  },\n  IGNF_MAYO50G: {\n    towgs84: '-382,-59,-262'\n  },\n  IGNF_TANNAG: {\n    towgs84: '-139,-967,436'\n  },\n  IGNF_IGN72G: {\n    towgs84: '-13,-348,292'\n  },\n  IGNF_ATIGG: {\n    towgs84: '1118,23,66'\n  },\n  IGNF_FANGA84G: {\n    towgs84: '150.57,158.33,118.32'\n  },\n  IGNF_RUSAT84G: {\n    towgs84: '202.13,174.6,-15.74'\n  },\n  IGNF_KAUE70G: {\n    towgs84: '126.74,300.1,-75.49'\n  },\n  IGNF_MOP90G: {\n    towgs84: '-10.8,-1.8,12.77'\n  },\n  IGNF_MHPF67G: {\n    towgs84: '338.08,212.58,-296.17'\n  },\n  IGNF_TAHI79G: {\n    towgs84: '160.61,116.05,153.69'\n  },\n  IGNF_ANAA92G: {\n    towgs84: '1.5,3.84,4.81'\n  },\n  IGNF_MARQUI72G: {\n    towgs84: '330.91,-13.92,58.56'\n  },\n  IGNF_APAT86G: {\n    towgs84: '143.6,197.82,74.05'\n  },\n  IGNF_TUBU69G: {\n    towgs84: '237.17,171.61,-77.84'\n  },\n  IGNF_STPM50G: {\n    towgs84: '11.363,424.148,373.13'\n  },\n  EPSG_4150: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4754: {\n    towgs84: '-208.4058,-109.8777,-2.5764'\n  },\n  ESRI_104101: {\n    towgs84: '374,150,588'\n  },\n  EPSG_4693: {\n    towgs84: '0,-0.15,0.68'\n  },\n  EPSG_6207: {\n    towgs84: '293.17,726.18,245.36'\n  },\n  EPSG_4153: {\n    towgs84: '-133.63,-157.5,-158.62'\n  },\n  EPSG_4132: {\n    towgs84: '-241.54,-163.64,396.06'\n  },\n  EPSG_4221: {\n    towgs84: '-154.5,150.7,100.4'\n  },\n  EPSG_4266: {\n    towgs84: '-80.7,-132.5,41.1'\n  },\n  EPSG_4193: {\n    towgs84: '-70.9,-151.8,-41.4'\n  },\n  EPSG_5340: {\n    towgs84: '-0.41,0.46,-0.35'\n  },\n  EPSG_4246: {\n    towgs84: '-294.7,-200.1,525.5'\n  },\n  EPSG_4318: {\n    towgs84: '-3.2,-5.7,2.8'\n  },\n  EPSG_4121: {\n    towgs84: '-199.87,74.79,246.62'\n  },\n  EPSG_4223: {\n    towgs84: '-260.1,5.5,432.2'\n  },\n  EPSG_4158: {\n    towgs84: '-0.465,372.095,171.736'\n  },\n  EPSG_4285: {\n    towgs84: '-128.16,-282.42,21.93'\n  },\n  EPSG_4613: {\n    towgs84: '-404.78,685.68,45.47'\n  },\n  EPSG_4607: {\n    towgs84: '195.671,332.517,274.607'\n  },\n  EPSG_4475: {\n    towgs84: '-381.788,-57.501,-256.673'\n  },\n  EPSG_4208: {\n    towgs84: '-157.84,308.54,-146.6'\n  },\n  EPSG_4743: {\n    towgs84: '70.995,-335.916,262.898'\n  },\n  EPSG_4710: {\n    towgs84: '-323.65,551.39,-491.22'\n  },\n  EPSG_7881: {\n    towgs84: '-0.077,0.079,0.086'\n  },\n  EPSG_4682: {\n    towgs84: '283.729,735.942,261.143'\n  },\n  EPSG_4739: {\n    towgs84: '-156,-271,-189'\n  },\n  EPSG_4679: {\n    towgs84: '-80.01,253.26,291.19'\n  },\n  EPSG_4750: {\n    towgs84: '-56.263,16.136,-22.856'\n  },\n  EPSG_4644: {\n    towgs84: '-10.18,-350.43,291.37'\n  },\n  EPSG_4695: {\n    towgs84: '-103.746,-9.614,-255.95'\n  },\n  EPSG_4292: {\n    towgs84: '-355,21,72'\n  },\n  EPSG_4302: {\n    towgs84: '-61.702,284.488,472.052'\n  },\n  EPSG_4143: {\n    towgs84: '-124.76,53,466.79'\n  },\n  EPSG_4606: {\n    towgs84: '-153,153,307'\n  },\n  EPSG_4699: {\n    towgs84: '-770.1,158.4,-498.2'\n  },\n  EPSG_4247: {\n    towgs84: '-273.5,110.6,-357.9'\n  },\n  EPSG_4160: {\n    towgs84: '8.88,184.86,106.69'\n  },\n  EPSG_4161: {\n    towgs84: '-233.43,6.65,173.64'\n  },\n  EPSG_9251: {\n    towgs84: '-9.5,122.9,138.2'\n  },\n  EPSG_9253: {\n    towgs84: '-78.1,101.6,133.3'\n  },\n  EPSG_4297: {\n    towgs84: '-198.383,-240.517,-107.909'\n  },\n  EPSG_4269: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4301: {\n    towgs84: '-147,506,687'\n  },\n  EPSG_4618: {\n    towgs84: '-59,-11,-52'\n  },\n  EPSG_4612: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4678: {\n    towgs84: '44.585,-131.212,-39.544'\n  },\n  EPSG_4250: {\n    towgs84: '-130,29,364'\n  },\n  EPSG_4144: {\n    towgs84: '214,804,268'\n  },\n  EPSG_4147: {\n    towgs84: '-17.51,-108.32,-62.39'\n  },\n  EPSG_4259: {\n    towgs84: '-254.1,-5.36,-100.29'\n  },\n  EPSG_4164: {\n    towgs84: '-76,-138,67'\n  },\n  EPSG_4211: {\n    towgs84: '-378.873,676.002,-46.255'\n  },\n  EPSG_4182: {\n    towgs84: '-422.651,-172.995,84.02'\n  },\n  EPSG_4224: {\n    towgs84: '-143.87,243.37,-33.52'\n  },\n  EPSG_4225: {\n    towgs84: '-205.57,168.77,-4.12'\n  },\n  EPSG_5527: {\n    towgs84: '-67.35,3.88,-38.22'\n  },\n  EPSG_4752: {\n    towgs84: '98,390,-22'\n  },\n  EPSG_4310: {\n    towgs84: '-30,190,89'\n  },\n  EPSG_9248: {\n    towgs84: '-192.26,65.72,132.08'\n  },\n  EPSG_4680: {\n    towgs84: '124.5,-63.5,-281'\n  },\n  EPSG_4701: {\n    towgs84: '-79.9,-158,-168.9'\n  },\n  EPSG_4706: {\n    towgs84: '-146.21,112.63,4.05'\n  },\n  EPSG_4805: {\n    towgs84: '682,-203,480'\n  },\n  EPSG_4201: {\n    towgs84: '-165,-11,206'\n  },\n  EPSG_4210: {\n    towgs84: '-157,-2,-299'\n  },\n  EPSG_4183: {\n    towgs84: '-104,167,-38'\n  },\n  EPSG_4139: {\n    towgs84: '11,72,-101'\n  },\n  EPSG_4668: {\n    towgs84: '-86,-98,-119'\n  },\n  EPSG_4717: {\n    towgs84: '-2,151,181'\n  },\n  EPSG_4732: {\n    towgs84: '102,52,-38'\n  },\n  EPSG_4280: {\n    towgs84: '-377,681,-50'\n  },\n  EPSG_4209: {\n    towgs84: '-138,-105,-289'\n  },\n  EPSG_4261: {\n    towgs84: '31,146,47'\n  },\n  EPSG_4658: {\n    towgs84: '-73,46,-86'\n  },\n  EPSG_4721: {\n    towgs84: '265.025,384.929,-194.046'\n  },\n  EPSG_4222: {\n    towgs84: '-136,-108,-292'\n  },\n  EPSG_4601: {\n    towgs84: '-255,-15,71'\n  },\n  EPSG_4602: {\n    towgs84: '725,685,536'\n  },\n  EPSG_4603: {\n    towgs84: '72,213.7,93'\n  },\n  EPSG_4605: {\n    towgs84: '9,183,236'\n  },\n  EPSG_4621: {\n    towgs84: '137,248,-430'\n  },\n  EPSG_4657: {\n    towgs84: '-28,199,5'\n  },\n  EPSG_4316: {\n    towgs84: '103.25,-100.4,-307.19'\n  },\n  EPSG_4642: {\n    towgs84: '-13,-348,292'\n  },\n  EPSG_4698: {\n    towgs84: '145,-187,103'\n  },\n  EPSG_4192: {\n    towgs84: '-206.1,-174.7,-87.7'\n  },\n  EPSG_4311: {\n    towgs84: '-265,120,-358'\n  },\n  EPSG_4135: {\n    towgs84: '58,-283,-182'\n  },\n  ESRI_104138: {\n    towgs84: '198,-226,-347'\n  },\n  EPSG_4245: {\n    towgs84: '-11,851,5'\n  },\n  EPSG_4142: {\n    towgs84: '-125,53,467'\n  },\n  EPSG_4213: {\n    towgs84: '-106,-87,188'\n  },\n  EPSG_4253: {\n    towgs84: '-133,-77,-51'\n  },\n  EPSG_4129: {\n    towgs84: '-132,-110,-335'\n  },\n  EPSG_4713: {\n    towgs84: '-77,-128,142'\n  },\n  EPSG_4239: {\n    towgs84: '217,823,299'\n  },\n  EPSG_4146: {\n    towgs84: '295,736,257'\n  },\n  EPSG_4155: {\n    towgs84: '-83,37,124'\n  },\n  EPSG_4165: {\n    towgs84: '-173,253,27'\n  },\n  EPSG_4672: {\n    towgs84: '175,-38,113'\n  },\n  EPSG_4236: {\n    towgs84: '-637,-549,-203'\n  },\n  EPSG_4251: {\n    towgs84: '-90,40,88'\n  },\n  EPSG_4271: {\n    towgs84: '-2,374,172'\n  },\n  EPSG_4175: {\n    towgs84: '-88,4,101'\n  },\n  EPSG_4716: {\n    towgs84: '298,-304,-375'\n  },\n  EPSG_4315: {\n    towgs84: '-23,259,-9'\n  },\n  EPSG_4744: {\n    towgs84: '-242.2,-144.9,370.3'\n  },\n  EPSG_4244: {\n    towgs84: '-97,787,86'\n  },\n  EPSG_4293: {\n    towgs84: '616,97,-251'\n  },\n  EPSG_4714: {\n    towgs84: '-127,-769,472'\n  },\n  EPSG_4736: {\n    towgs84: '260,12,-147'\n  },\n  EPSG_6883: {\n    towgs84: '-235,-110,393'\n  },\n  EPSG_6894: {\n    towgs84: '-63,176,185'\n  },\n  EPSG_4205: {\n    towgs84: '-43,-163,45'\n  },\n  EPSG_4256: {\n    towgs84: '41,-220,-134'\n  },\n  EPSG_4262: {\n    towgs84: '639,405,60'\n  },\n  EPSG_4604: {\n    towgs84: '174,359,365'\n  },\n  EPSG_4169: {\n    towgs84: '-115,118,426'\n  },\n  EPSG_4620: {\n    towgs84: '-106,-129,165'\n  },\n  EPSG_4184: {\n    towgs84: '-203,141,53'\n  },\n  EPSG_4616: {\n    towgs84: '-289,-124,60'\n  },\n  EPSG_9403: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4684: {\n    towgs84: '-133,-321,50'\n  },\n  EPSG_4708: {\n    towgs84: '-491,-22,435'\n  },\n  EPSG_4707: {\n    towgs84: '114,-116,-333'\n  },\n  EPSG_4709: {\n    towgs84: '145,75,-272'\n  },\n  EPSG_4712: {\n    towgs84: '-205,107,53'\n  },\n  EPSG_4711: {\n    towgs84: '124,-234,-25'\n  },\n  EPSG_4718: {\n    towgs84: '230,-199,-752'\n  },\n  EPSG_4719: {\n    towgs84: '211,147,111'\n  },\n  EPSG_4724: {\n    towgs84: '208,-435,-229'\n  },\n  EPSG_4725: {\n    towgs84: '189,-79,-202'\n  },\n  EPSG_4735: {\n    towgs84: '647,1777,-1124'\n  },\n  EPSG_4722: {\n    towgs84: '-794,119,-298'\n  },\n  EPSG_4728: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4734: {\n    towgs84: '-632,438,-609'\n  },\n  EPSG_4727: {\n    towgs84: '912,-58,1227'\n  },\n  EPSG_4729: {\n    towgs84: '185,165,42'\n  },\n  EPSG_4730: {\n    towgs84: '170,42,84'\n  },\n  EPSG_4733: {\n    towgs84: '276,-57,149'\n  },\n  ESRI_37218: {\n    towgs84: '230,-199,-752'\n  },\n  ESRI_37240: {\n    towgs84: '-7,215,225'\n  },\n  ESRI_37221: {\n    towgs84: '252,-209,-751'\n  },\n  ESRI_4305: {\n    towgs84: '-123,-206,219'\n  },\n  ESRI_104139: {\n    towgs84: '-73,-247,227'\n  },\n  EPSG_4748: {\n    towgs84: '51,391,-36'\n  },\n  EPSG_4219: {\n    towgs84: '-384,664,-48'\n  },\n  EPSG_4255: {\n    towgs84: '-333,-222,114'\n  },\n  EPSG_4257: {\n    towgs84: '-587.8,519.75,145.76'\n  },\n  EPSG_4646: {\n    towgs84: '-963,510,-359'\n  },\n  EPSG_6881: {\n    towgs84: '-24,-203,268'\n  },\n  EPSG_6882: {\n    towgs84: '-183,-15,273'\n  },\n  EPSG_4715: {\n    towgs84: '-104,-129,239'\n  },\n  IGNF_RGF93GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGM04GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGSPM06GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGTAAF07GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGFG95GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGNCG: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGPFGDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_ETRS89G: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGR92GDD: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4173: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4180: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4619: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4667: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4075: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6706: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7798: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4661: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4669: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8685: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4151: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4758: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4761: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4765: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8997: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4023: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4670: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4694: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4148: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4163: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4167: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4189: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4190: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4176: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4659: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3824: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3889: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4046: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4081: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4558: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4483: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5013: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5264: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5324: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5354: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5371: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5373: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5381: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5393: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5489: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5593: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6135: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6365: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5246: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7886: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8431: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8427: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8699: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8818: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4757: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9140: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8086: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4686: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4737: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4747: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4749: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4674: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4755: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4759: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4762: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4763: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4764: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4166: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4170: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5546: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7844: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4818: {\n    towgs84: '589,76,480'\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  if (!datum.datumName) {\n    continue;\n  }\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n", "import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD } from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; // datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n", "/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\n/**\n * @typedef {Object} NadgridInfo\n * @property {string} name The name of the NAD grid or 'null' if not specified.\n * @property {boolean} mandatory Indicates if the grid is mandatory (true) or optional (false).\n * @property {*} grid The loaded NAD grid object, or null if not loaded or not applicable.\n * @property {boolean} isNull True if the grid is explicitly 'null', otherwise false.\n */\n\n/**\n * @typedef {Object} NTV2GridOptions\n * @property {boolean} [includeErrorFields=true] Whether to include error fields in the subgrids.\n */\n\n/**\n * @typedef {Object} NadgridHeader\n * @property {number} [nFields] Number of fields in the header.\n * @property {number} [nSubgridFields] Number of fields in each subgrid header.\n * @property {number} nSubgrids Number of subgrids in the file.\n * @property {string} [shiftType] Type of shift (e.g., \"SECONDS\").\n * @property {number} [fromSemiMajorAxis] Source ellipsoid semi-major axis.\n * @property {number} [fromSemiMinorAxis] Source ellipsoid semi-minor axis.\n * @property {number} [toSemiMajorAxis] Target ellipsoid semi-major axis.\n * @property {number} [toSemiMinorAxis] Target ellipsoid semi-minor axis.\n */\n\n/**\n * @typedef {Object} Subgrid\n * @property {Array<number>} ll Lower left corner of the grid in radians [longitude, latitude].\n * @property {Array<number>} del Grid spacing in radians [longitude interval, latitude interval].\n * @property {Array<number>} lim Number of columns in the grid [longitude columns, latitude columns].\n * @property {number} [count] Total number of grid nodes.\n * @property {Array} cvs Mapped node values for the grid.\n */\n\n/** @typedef {{header: NadgridHeader, subgrids: Array<Subgrid>}} NADGrid */\n\n/**\n * @typedef {Object} GeoTIFF\n * @property {() => Promise<number>} getImageCount - Returns the number of images in the GeoTIFF.\n * @property {(index: number) => Promise<GeoTIFFImage>} getImage - Returns a GeoTIFFImage for the given index.\n */\n\n/**\n * @typedef {Object} GeoTIFFImage\n * @property {() => number} getWidth - Returns the width of the image.\n * @property {() => number} getHeight - Returns the height of the image.\n * @property {() => number[]} getBoundingBox - Returns the bounding box as [minX, minY, maxX, maxY] in degrees.\n * @property {() => Promise<ArrayLike<ArrayLike<number>>>} readRasters - Returns the raster data as an array of bands.\n * @property {Object} fileDirectory - The file directory object containing metadata.\n * @property {Object} fileDirectory.ModelPixelScale - The pixel scale array [scaleX, scaleY, scaleZ] in degrees.\n */\n\nvar loadedNadgrids = {};\n\n/**\n * @overload\n * @param {string} key - The key to associate with the loaded grid.\n * @param {ArrayBuffer} data - The NTv2 grid data as an ArrayBuffer.\n * @param {NTV2GridOptions} [options] - Optional parameters for loading the grid.\n * @returns {NADGrid} - The loaded NAD grid information.\n */\n/**\n * @overload\n * @param {string} key - The key to associate with the loaded grid.\n * @param {GeoTIFF} data - The GeoTIFF instance to read the grid from.\n * @returns {{ready: Promise<NADGrid>}} - A promise that resolves to the loaded grid information.\n */\n/**\n * Load either a NTv2 file (.gsb) or a Geotiff (.tif) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer. Pass Geotiff as a GeoTIFF instance from the geotiff.js library.\n * @param {string} key - The key to associate with the loaded grid.\n * @param {ArrayBuffer|GeoTIFF} data The data to load, either an ArrayBuffer for NTv2 or a GeoTIFF instance.\n * @param {NTV2GridOptions} [options] Optional parameters.\n * @returns {{ready: Promise<NADGrid>}|NADGrid} - A promise that resolves to the loaded grid information.\n */\nexport default function nadgrid(key, data, options) {\n  if (data instanceof ArrayBuffer) {\n    return readNTV2Grid(key, data, options);\n  }\n  return { ready: readGeotiffGrid(key, data) };\n}\n\n/**\n * @param {string} key The key to associate with the loaded grid.\n * @param {ArrayBuffer} data The NTv2 grid data as an ArrayBuffer.\n * @param {NTV2GridOptions} [options] Optional parameters for loading the grid.\n * @returns {NADGrid} The loaded NAD grid information.\n */\nfunction readNTV2Grid(key, data, options) {\n  var includeErrorFields = true;\n  if (options !== undefined && options.includeErrorFields === false) {\n    includeErrorFields = false;\n  }\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian, includeErrorFields);\n  var nadgrid = { header: header, subgrids: subgrids };\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * @param {string} key The key to associate with the loaded grid.\n * @param {GeoTIFF} tiff The GeoTIFF instance to read the grid from.\n * @returns {Promise<NADGrid>} A promise that resolves to the loaded NAD grid information.\n */\nasync function readGeotiffGrid(key, tiff) {\n  var subgrids = [];\n  var subGridCount = await tiff.getImageCount();\n  // proj produced tiff grid shift files appear to organize lower res subgrids first, higher res/ child subgrids last.\n  for (var subgridIndex = subGridCount - 1; subgridIndex >= 0; subgridIndex--) {\n    var image = await tiff.getImage(subgridIndex);\n\n    var rasters = await image.readRasters();\n    var data = rasters;\n    var lim = [image.getWidth(), image.getHeight()];\n    var imageBBoxRadians = image.getBoundingBox().map(degreesToRadians);\n    var del = [image.fileDirectory.ModelPixelScale[0], image.fileDirectory.ModelPixelScale[1]].map(degreesToRadians);\n\n    var maxX = imageBBoxRadians[0] + (lim[0] - 1) * del[0];\n    var minY = imageBBoxRadians[3] - (lim[1] - 1) * del[1];\n\n    var latitudeOffsetBand = data[0];\n    var longitudeOffsetBand = data[1];\n    var nodes = [];\n\n    for (let i = lim[1] - 1; i >= 0; i--) {\n      for (let j = lim[0] - 1; j >= 0; j--) {\n        var index = i * lim[0] + j;\n        nodes.push([-secondsToRadians(longitudeOffsetBand[index]), secondsToRadians(latitudeOffsetBand[index])]);\n      }\n    }\n\n    subgrids.push({\n      del: del,\n      lim: lim,\n      ll: [-maxX, minY],\n      cvs: nodes\n    });\n  }\n\n  var tifGrid = {\n    header: {\n      nSubgrids: subGridCount\n    },\n    subgrids: subgrids\n  };\n  loadedNadgrids[key] = tifGrid;\n  return tifGrid;\n};\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n * @param {string} nadgrids A comma-separated list of grid names, optionally prefixed with '@' to indicate optional grids.\n * @returns\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) {\n    return null;\n  }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\n/**\n * @param {string} value The nadgrid string to get information for.\n * @returns {NadgridInfo|null} An object with grid information, or null if the input is empty.\n */\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return { name: 'null', mandatory: !optional, grid: null, isNull: true };\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction degreesToRadians(degrees) {\n  return (degrees) * Math.PI / 180;\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian)\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian, includeErrorFields) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian, includeErrorFields);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    var rowSize = 16;\n    if (includeErrorFields === false) {\n      rowSize = 8;\n    }\n    gridOffset += 176 + subHeader.gridNodeCount * rowSize;\n  }\n  return grids;\n}\n\n/**\n * @param {*} nodes\n * @returns Array<Array<number>>\n */\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {\n    return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];\n  });\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian, includeErrorFields) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n\n  if (includeErrorFields === false) {\n    gridRecordLength = 8;\n  }\n\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian)\n\n    };\n\n    if (includeErrorFields !== false) {\n      record.latitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian);\n      record.longitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian);\n    }\n\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n", "import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport { sphere as dc_sphere, eccentricity as dc_eccentricity } from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport { getNadgrids } from './nadgrid';\n\n/**\n * @typedef {Object} DatumDefinition\n * @property {number} datum_type - The type of datum.\n * @property {number} a - Semi-major axis of the ellipsoid.\n * @property {number} b - Semi-minor axis of the ellipsoid.\n * @property {number} es - Eccentricity squared of the ellipsoid.\n * @property {number} ep2 - Second eccentricity squared of the ellipsoid.\n */\n\n/**\n * @param {string | import('./core').PROJJSONDefinition | import('./defs').ProjectionDefinition} srsCode\n * @param {(errorMessage?: string, instance?: Projection) => void} [callback]\n */\nfunction Projection(srsCode, callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  /** @type {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} */\n  this.forward = null;\n  /** @type {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} */\n  this.inverse = null;\n  /** @type {function(): void} */\n  this.init = null;\n  /** @type {string} */\n  this.name;\n  /** @type {Array<string>} */\n  this.names = null;\n  /** @type {string} */\n  this.title;\n  callback = callback || function (error) {\n    if (error) {\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if (typeof json !== 'object') {\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if (!ourProj) {\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  /** @type {DatumDefinition} */\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  if ('init' in this && typeof this.init === 'function') {\n    this.init();\n  }\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n", "'use strict';\nimport { PJD_3PARAM, PJD_7PARAM, HALF_PI } from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; // Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    // ..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; // Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } // cs_geocentric_from_wgs84()\n}\n", "import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport { geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums } from './datumUtils';\nimport adjust_lon from './common/adjust_lon';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function (source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) && !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = { x: -point.x, y: point.y };\n  var output = { x: Number.NaN, y: Number.NaN };\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log('Unable to find mandatory grid \\'' + grid.name + '\\'');\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log('Failed to find a grid shift table for location \\''\n      + -input.x * R2D + ' ' + input.y * R2D + ' tried: \\'' + attemptedGrids + '\\'');\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = { x: Number.NaN, y: Number.NaN };\n  if (isNaN(pin.x)) {\n    return val;\n  }\n  var tb = { x: pin.x, y: pin.y };\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log('Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.');\n        break;\n      }\n      dif = { x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y) };\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log('Inverse grid shift iterator failed to converge.');\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = { x: pin.x / ct.del[0], y: pin.y / ct.del[1] };\n  var indx = { x: Math.floor(t.x), y: Math.floor(t.y) };\n  var frct = { x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y };\n  var val = { x: Number.NaN, y: Number.NaN };\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx++;\n  var f10 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx += ct.lim[0];\n  var f11 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx--;\n  var f01 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n", "export default function (crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  /** @type {import(\"./core\").InterfaceCoordinates} */\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if ('ew'.indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n    } else if (i === 1) {\n      v = yin;\n      if ('ns'.indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    } else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n      case 'e':\n        out[t] = v;\n        break;\n      case 'w':\n        out[t] = -v;\n        break;\n      case 'n':\n        out[t] = v;\n        break;\n      case 's':\n        out[t] = -v;\n        break;\n      case 'u':\n        if (point[t] !== undefined) {\n          out.z = v;\n        }\n        break;\n      case 'd':\n        if (point[t] !== undefined) {\n          out.z = -v;\n        }\n        break;\n      default:\n      // console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n        return null;\n    }\n  }\n  return out;\n}\n", "/**\n * @param {Array<number>} array\n * @returns {import(\"../core\").InterfaceCoordinates}\n */\nexport default function (array) {\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length > 2) {\n    out.z = array[2];\n  }\n  if (array.length > 3) {\n    out.m = array[3];\n  }\n  return out;\n}\n", "export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n", "import { D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT } from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84')\n  || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\n/**\n * @param {import('./defs').ProjectionDefinition} source\n * @param {import('./defs').ProjectionDefinition} dest\n * @param {import('./core').TemplateCoordinates} point\n * @param {boolean} enforceAxis\n * @returns {import('./core').InterfaceCoordinates | undefined}\n */\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  point = /** @type {import('./core').InterfaceCoordinates} */ (point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n", "import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\n/**\n * @typedef {{x: number, y: number, z?: number, m?: number}} InterfaceCoordinates\n */\n\n/**\n * @typedef {Array<number> | InterfaceCoordinates} TemplateCoordinates\n */\n\n/**\n * @typedef {Object} Converter\n * @property {<T extends TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} forward\n * @property {<T extends TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} inverse\n * @property {proj} [oProj]\n */\n\n/**\n * @typedef {Object} PROJJSONDefinition\n * @property {string} [$schema]\n * @property {string} type\n * @property {string} [name]\n * @property {{authority: string, code: number}} [id]\n * @property {string} [scope]\n * @property {string} [area]\n * @property {{south_latitude: number, west_longitude: number, north_latitude: number, east_longitude: number}} [bbox]\n * @property {PROJJSONDefinition[]} [components]\n * @property {{type: string, name: string}} [datum]\n * @property {{\n *   name: string,\n *   members: Array<{\n *     name: string,\n *     id?: {authority: string, code: number}\n *   }>,\n *   ellipsoid?: {\n *     name: string,\n *     semi_major_axis: number,\n *     inverse_flattening?: number\n *   },\n *   accuracy?: string,\n *   id?: {authority: string, code: number}\n * }} [datum_ensemble]\n * @property {{\n *   subtype: string,\n *   axis: Array<{\n *     name: string,\n *     abbreviation?: string,\n *     direction: string,\n *     unit: string\n *   }>\n * }} [coordinate_system]\n * @property {{\n *   name: string,\n *   method: {name: string},\n *   parameters: Array<{\n *     name: string,\n *     value: number,\n *     unit?: string\n *   }>\n * }} [conversion]\n * @property {{\n *   name: string,\n *   method: {name: string},\n *   parameters: Array<{\n *     name: string,\n *     value: number,\n *     unit?: string,\n *     type?: string,\n *     file_name?: string\n *   }>\n * }} [transformation]\n */\n\n/**\n * @template {TemplateCoordinates} T\n * @param {proj} from\n * @param {proj} to\n * @param {T} coords\n * @param {boolean} [enforceAxis]\n * @returns {T}\n */\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || { x: NaN, y: NaN };\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return /** @type {T} */ ([transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3)));\n        } else {\n          return /** @type {T} */ ([transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3)));\n        }\n      } else {\n        return /** @type {T} */ ([transformedArray.x, transformedArray.y].concat(coords.slice(2)));\n      }\n    } else {\n      return /** @type {T} */ ([transformedArray.x, transformedArray.y]);\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return /** @type {T} */ (out);\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return /** @type {T} */ (out);\n  }\n}\n\n/**\n * @param {proj | string | PROJJSONDefinition | Converter} item\n * @returns {import('./Proj').default}\n */\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (typeof item === 'object' && 'oProj' in item) {\n    return item.oProj;\n  }\n  return proj(/** @type {string | PROJJSONDefinition} */ (item));\n}\n\n/**\n * @overload\n * @param {string | PROJJSONDefinition | proj} toProj\n * @returns {Converter}\n */\n/**\n * @overload\n * @param {string | PROJJSONDefinition | proj} fromProj\n * @param {string | PROJJSONDefinition | proj} toProj\n * @returns {Converter}\n */\n/**\n * @template {TemplateCoordinates} T\n * @overload\n * @param {string | PROJJSONDefinition | proj} toProj\n * @param {T} coord\n * @returns {T}\n */\n/**\n * @template {TemplateCoordinates} T\n * @overload\n * @param {string | PROJJSONDefinition | proj} fromProj\n * @param {string | PROJJSONDefinition | proj} toProj\n * @param {T} coord\n * @returns {T}\n */\n/**\n * @template {TemplateCoordinates} T\n * @param {string | PROJJSONDefinition | proj} fromProjOrToProj\n * @param {string | PROJJSONDefinition | proj | TemplateCoordinates} [toProjOrCoord]\n * @param {T} [coord]\n * @returns {T|Converter}\n */\nfunction proj4(fromProjOrToProj, toProjOrCoord, coord) {\n  /** @type {proj} */\n  var fromProj;\n  /** @type {proj} */\n  var toProj;\n  var single = false;\n  /** @type {Converter} */\n  var obj;\n  if (typeof toProjOrCoord === 'undefined') {\n    toProj = checkProj(fromProjOrToProj);\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof /** @type {?} */ (toProjOrCoord).x !== 'undefined' || Array.isArray(toProjOrCoord)) {\n    coord = /** @type {T} */ (/** @type {?} */ (toProjOrCoord));\n    toProj = checkProj(fromProjOrToProj);\n    fromProj = wgs84;\n    single = true;\n  }\n  if (!fromProj) {\n    fromProj = checkProj(fromProjOrToProj);\n  }\n  if (!toProj) {\n    toProj = checkProj(/** @type {string | PROJJSONDefinition | proj } */ (toProjOrCoord));\n  }\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      /**\n       * @template {TemplateCoordinates} T\n       * @param {T} coords\n       * @param {boolean=} enforceAxis\n       * @returns {T}\n       */\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      /**\n       * @template {TemplateCoordinates} T\n       * @param {T} coords\n       * @param {boolean=} enforceAxis\n       * @returns {T}\n       */\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\n\nexport default proj4;\n", "\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100\u00B4k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n", "import { toPoint, forward } from 'mgrs';\n\n/**\n * @deprecated v3.0.0 - use proj4.toPoint instead\n * @param {number | import('./core').TemplateCoordinates | string} x\n * @param {number} [y]\n * @param {number} [z]\n */\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0]);\n    this.y = parseFloat(coords[1]);\n    this.z = parseFloat(coords[2]) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function (mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function (accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n", "var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function (es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n", "export default function (phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n", "import pj_mlfn from './pj_mlfn';\nimport { EPSLN } from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function (arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    // t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    // phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  // ..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n", "// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {Array<number>} en\n * @property {number} ml0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    } else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        } else {\n          y = 0;\n        }\n      } else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  } else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1\n      + als / 6 * (1 - t + c\n        + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c\n          + als / 42 * (61 + 179 * ts - ts * t - 479 * t)))))\n        + this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0\n      + sin_phi * delta_lon * al / 2 * (1\n        + als / 12 * (5 - t + 9 * c + 4 * cs\n          + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c\n            + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t))))))\n          + this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    } else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  } else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1\n        - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs\n          - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c\n            - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1\n        - ds / 6 * (1 + 2 * t + c\n          - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c\n            - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    } else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Fast_Transverse_Mercator', 'Fast Transverse Mercator'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function (x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n", "export default function (x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n", "export default function (x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n", "import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function (x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n", "export default function (pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n", "export default function (pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n", "export default function (x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n", "import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function (pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n", "// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {Array<number>} cbg\n * @property {Array<number>} cgb\n * @property {Array<number>} utg\n * @property {Array<number>} gtu\n * @property {number} Qn\n * @property {number} Zb\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n  this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * (-24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  } else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  } else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Extended_Transverse_Mercator', 'Extended Transverse Mercator', 'etmerc', 'Transverse_Mercator', 'Transverse Mercator', 'Gauss Kruger', 'Gauss_Kruger', 'tmerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from './adjust_lon';\n\nexport default function (zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n", "import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport { D2R } from '../constants/values';\n\n/** @this {import('../defs.js').ProjectionDefinition} */\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 = ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = ['Universal Transverse Mercator System', 'utm'];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n", "export default function (esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n", "import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport { HALF_PI, FORTPI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} rc\n * @property {number} C\n * @property {number} phic0\n * @property {number} ratexp\n * @property {number} K\n * @property {number} e\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), -0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gauss'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sinc0\n * @property {number} cosc0\n * @property {number} R2\n * @property {number} rc\n * @property {number} phic0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = 'Oblique Stereographic Alternative';\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['Stereographic_North_Pole', 'Oblique_Stereographic', 'sterea', 'Oblique Stereographic Alternative', 'Double_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import { EPSLN, HALF_PI } from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} coslat0\n * @property {number} sinlat0\n * @property {number} ms1\n * @property {number} X0\n * @property {number} cosX0\n * @property {number} sinX0\n * @property {number} con\n * @property {number} cons\n * @property {number} e\n */\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        // North pole\n        // trace('stere:north pole');\n        this.con = 1;\n      } else {\n        // South pole\n        // trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    // case of the origine point\n    // trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    // trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  } else {\n    X = 2 * Math.atan(ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      // trace(p.toString());\n      return p;\n    } else if (Math.abs(this.sinlat0) < EPSLN) {\n      // Eq\n      // trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    } else {\n      // other case\n      // trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  // trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    } else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        // trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, -1 * p.y));\n    } else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      } else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  // trace(p.toString());\n  return p;\n}\n\nexport var names = ['stere', 'Stereographic_South_Pole', 'Polar_Stereographic_variant_A', 'Polar_Stereographic_variant_B', 'Polar_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n", "/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme \u00E0 axe oblique et pour la transformation entre\n    des syst\u00E8mes de r\u00E9f\u00E9rence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} lambda0\n * @property {number} e\n * @property {number} R\n * @property {number} b0\n * @property {number} K\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      // ...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    // S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = ['somerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nimport { getNormalizedProjName } from '../projections';\n\n/**\n * @typedef {Object} LocalThis\n * @property {boolean} no_off\n * @property {boolean} no_rot\n * @property {number} rectified_grid_angle\n * @property {number} es\n * @property {number} A\n * @property {number} B\n * @property {number} E\n * @property {number} e\n * @property {number} lam0\n * @property {number} singam\n * @property {number} cosgam\n * @property {number} sinrot\n * @property {number} cosrot\n * @property {number} rB\n * @property {number} ArB\n * @property {number} BrA\n * @property {number} u_0\n * @property {number} v_pole_n\n * @property {number} v_pole_s\n */\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.projName === 'object' ? Object.keys(P.projName)[0] : P.projName;\n\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1 || typeAProjections.indexOf(getNormalizedProjName(projectionName)) !== -1;\n}\n\n/**\n * Initialize the Oblique Mercator  projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0;\n\n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n\n  var alp = false;\n  if ('alpha' in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if ('rectified_grid_angle' in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL\n      || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL\n      || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.PI) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.PI) {\n      lam2 += TWO_PI;\n    }\n\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ---------------------------------------------------------- */\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n\n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n\n  return coords;\n}\n\nexport var names = ['Hotine_Oblique_Mercator', 'Hotine Oblique Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Variant_B', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin', 'Hotine_Oblique_Mercator_Two_Point_Natural_Origin', 'Hotine_Oblique_Mercator_Azimuth_Center', 'Oblique_Mercator', 'omerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} e\n * @property {number} ns\n * @property {number} f0\n * @property {number} rh\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // double lat0;                    /* the reference latitude               */\n  // double long0;                   /* the reference longitude              */\n  // double lat1;                    /* first standard parallel              */\n  // double lat2;                    /* second standard parallel             */\n  // double r_maj;                   /* major axis                           */\n  // double r_min;                   /* minor axis                           */\n  // double false_east;              /* x offset in meters                   */\n  // double false_north;             /* y offset in meters                   */\n\n  // the above value can be set with proj4.defs\n  // example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } // if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = Math.abs(Math.abs(this.lat0) - HALF_PI) < EPSLN\n    ? 0 // Handle poles by setting ts0 to 0\n    : tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  } else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = 'Lambert Conformal Conic';\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  } else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  } else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  'Lambert Tangential Conformal Conic Projection',\n  'Lambert_Conformal_Conic',\n  'Lambert_Conformal_Conic_1SP',\n  'Lambert_Conformal_Conic_2SP',\n  'lcc',\n  'Lambert Conic Conformal (1SP)',\n  'Lambert Conic Conformal (2SP)'\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x */\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = ['Krovak', 'krovak'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function (e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n", "export default function (x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n", "export default function (x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n", "export default function (x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n", "export default function (x) {\n  return (x * x * x * (35 / 3072));\n}\n", "export default function (a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n", "import { HALF_PI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n", "export default function (ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // ..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n", "import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} ml0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  } else {\n    // ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  } else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['Cassini', 'Cassini_Soldner', 'cass'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function (eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  } else {\n    return (2 * sinphi);\n  }\n}\n", "import { HALF_PI, EPSLN, FORTPI } from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} mode\n * @property {Array<number>} apa\n * @property {number} dd\n * @property {number} e\n * @property {number} es\n * @property {number} mmf\n * @property {number} rq\n * @property {number} qp\n * @property {number} sinb1\n * @property {number} cosb1\n * @property {number} ymf\n * @property {number} xmf\n * @property {number} sinph0\n * @property {number} cosph0\n */\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/**\n * Initialize the Lambert Azimuthal Equal Area projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? S_POLE : N_POLE;\n  } else if (Math.abs(t) < EPSLN) {\n    this.mode = EQUIT;\n  } else {\n    this.mode = OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n      case N_POLE:\n        this.dd = 1;\n        break;\n      case S_POLE:\n        this.dd = 1;\n        break;\n      case EQUIT:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        this.dd = 1 / this.rq;\n        this.xmf = 1;\n        this.ymf = 0.5 * this.qp;\n        break;\n      case OBLIQ:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        sinphi = Math.sin(this.lat0);\n        this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n        this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n        this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n        this.ymf = (this.xmf = this.rq) / this.dd;\n        this.xmf *= this.dd;\n        break;\n    }\n  } else {\n    if (this.mode === OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  } else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n        b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n        break;\n      case this.EQUIT:\n        b = 1 + cosb * coslam;\n        break;\n      case this.N_POLE:\n        b = HALF_PI + phi;\n        q = this.qp - q;\n        break;\n      case this.S_POLE:\n        b = phi - HALF_PI;\n        q = this.qp + q;\n        break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n      case this.EQUIT:\n        b = Math.sqrt(2 / b);\n        if (this.mode === this.OBLIQ) {\n          y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n        } else {\n          y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n        }\n        x = this.xmf * b * cosb * sinlam;\n        break;\n      case this.N_POLE:\n      case this.S_POLE:\n        if (q >= 0) {\n          x = (b = Math.sqrt(q)) * sinlam;\n          y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n        } else {\n          x = y = 0;\n        }\n        break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n      case this.EQUIT:\n        phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n        x *= sinz;\n        y = cosz * rh;\n        break;\n      case this.OBLIQ:\n        phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n        x *= sinz * this.cosph0;\n        y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n        break;\n      case this.N_POLE:\n        y = -y;\n        phi = HALF_PI - phi;\n        break;\n      case this.S_POLE:\n        phi -= HALF_PI;\n        break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  } else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      } else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = ['Lambert Azimuthal Equal Area', 'Lambert_Azimuthal_Equal_Area', 'laea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n", "export default function (x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n", "import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e3\n * @property {number} sin_po\n * @property {number} cos_po\n * @property {number} t1\n * @property {number} con\n * @property {number} ms1\n * @property {number} qs1\n * @property {number} t2\n * @property {number} ms2\n * @property {number} qs2\n * @property {number} t3\n * @property {number} qs0\n * @property {number} ns0\n * @property {number} c\n * @property {number} rh\n * @property {number} sin_phi\n * @property {number} cos_phi\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  } else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  ------------------------------------------------------------------- */\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  } else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n------------------------------------------- */\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = ['Albers_Conic_Equal_Area', 'Albers_Equal_Area', 'Albers', 'aea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sin_p14\n * @property {number} cos_p14\n * @property {number} infinity_dist\n * @property {number} rc\n */\n\n/**\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n   @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  } else {\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      ----------------- */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gnom'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    } else {\n      return HALF_PI;\n    }\n  }\n  // var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n", "import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} e\n */\n\n/**\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n  @this {import('../defs.js').ProjectionDefinition & LocalThis}\n*/\nexport function init() {\n  // no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  } else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  } else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['cea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Equidistant Cylindrical (Plate Carre)';\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = ['Equirectangular', 'Equidistant_Cylindrical', 'Equidistant_Cylindrical_Spherical', 'eqc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport { EPSLN } from '../constants/values';\n\nimport gN from '../common/gN';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} ml0\n */\n\nvar MAX_ITER = 20;\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); // si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    } else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  } else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    } else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    } else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  } else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    } else {\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      // lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Polyconic', 'American_Polyconic', 'poly'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import { SEC_TO_RAD } from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['New_Zealand_Map_Grid', 'nzmg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  ------------------------------------------- */\nexport function init() {\n  // no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Miller_Cylindrical', 'mill'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {Array<number>} en\n * @property {number} n\n * @property {number} m\n * @property {number} C_y\n * @property {number} C_x\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n    ------------------------------------------------- */\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  } else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  ----------------------------------------------------- */\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    ----------------- */\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    } else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n  } else {\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    } else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  } else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      // temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    } else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Sinusoidal', 'sinu'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport { EPSLN } from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ---------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      ----------------------------------------------------- */\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       -------------------------------------------------------------------------- */\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       ------------------------------------------------------------------- */\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mollweide', 'moll'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} sin_phi\n * @property {number} cos_phi\n * @property {number} ms1\n * @property {number} ml1\n * @property {number} ms2\n * @property {number} ml2\n * @property {number} ns\n * @property {number} g\n * @property {number} ml0\n * @property {number} rh\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sin_phi = Math.sin(this.lat1);\n  this.cos_phi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sin_phi, this.cos_phi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sin_phi;\n  } else {\n    this.sin_phi = Math.sin(this.lat2);\n    this.cos_phi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sin_phi, this.cos_phi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      ----------------- */\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\n\nexport var names = ['Equidistant_Conic', 'eqdc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\nimport { HALF_PI, EPSLN } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} R - Radius of the Earth\n */\n\n/**\n * Initialize the Van Der Grinten projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  // this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    } else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  // con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    // y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  } else {\n    // y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  --------------------------------------------------------- */\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    } else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  } else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  } else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Van_der_Grinten_I', 'VanDerGrinten', 'Van_der_Grinten', 'vandg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "/**\n * Calculates the inverse geodesic problem using Vincenty's formulae.\n * Computes the forward azimuth and ellipsoidal distance between two points\n * specified by latitude and longitude on the surface of an ellipsoid.\n *\n * @param {number} lat1 Latitude of the first point in radians.\n * @param {number} lon1 Longitude of the first point in radians.\n * @param {number} lat2 Latitude of the second point in radians.\n * @param {number} lon2 Longitude of the second point in radians.\n * @param {number} a Semi-major axis of the ellipsoid (meters).\n * @param {number} f Flattening of the ellipsoid.\n * @returns {{ azi1: number, s12: number }} An object containing:\n *   - azi1: Forward azimuth from the first point to the second point (radians).\n *   - s12: Ellipsoidal distance between the two points (meters).\n */\nexport function vincentyInverse(lat1, lon1, lat2, lon2, a, f) {\n  const L = lon2 - lon1;\n  const U1 = Math.atan((1 - f) * Math.tan(lat1));\n  const U2 = Math.atan((1 - f) * Math.tan(lat2));\n  const sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);\n  const sinU2 = Math.sin(U2), cosU2 = Math.cos(U2);\n\n  let lambda = L, lambdaP, iterLimit = 100;\n  let sinLambda, cosLambda, sinSigma, cosSigma, sigma, sinAlpha, cos2Alpha, cos2SigmaM, C;\n  let uSq, A, B, deltaSigma, s;\n\n  do {\n    sinLambda = Math.sin(lambda);\n    cosLambda = Math.cos(lambda);\n    sinSigma = Math.sqrt(\n      (cosU2 * sinLambda) * (cosU2 * sinLambda)\n      + (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n      * (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n    );\n    if (sinSigma === 0) {\n      return { azi1: 0, s12: 0 }; // coincident points\n    }\n    cosSigma = sinU1 * sinU2 + cosU1 * cosU2 * cosLambda;\n    sigma = Math.atan2(sinSigma, cosSigma);\n    sinAlpha = cosU1 * cosU2 * sinLambda / sinSigma;\n    cos2Alpha = 1 - sinAlpha * sinAlpha;\n    cos2SigmaM = (cos2Alpha !== 0) ? (cosSigma - 2 * sinU1 * sinU2 / cos2Alpha) : 0;\n    C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n    lambdaP = lambda;\n    lambda = L + (1 - C) * f * sinAlpha\n    * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n  } while (Math.abs(lambda - lambdaP) > 1e-12 && --iterLimit > 0);\n\n  if (iterLimit === 0) {\n    return { azi1: NaN, s12: NaN }; // formula failed to converge\n  }\n\n  uSq = cos2Alpha * (a * a - (a * (1 - f)) * (a * (1 - f))) / ((a * (1 - f)) * (a * (1 - f)));\n  A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n  B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n  deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)\n    - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n\n  s = (a * (1 - f)) * A * (sigma - deltaSigma);\n\n  // Forward azimuth\n  const azi1 = Math.atan2(cosU2 * sinLambda, cosU1 * sinU2 - sinU1 * cosU2 * cosLambda);\n\n  return { azi1, s12: s };\n}\n\n/**\n * Solves the direct geodetic problem using Vincenty's formulae.\n * Given a starting point, initial azimuth, and distance, computes the destination point on the ellipsoid.\n *\n * @param {number} lat1 Latitude of the starting point in radians.\n * @param {number} lon1 Longitude of the starting point in radians.\n * @param {number} azi1 Initial azimuth (forward azimuth) in radians.\n * @param {number} s12 Distance to travel from the starting point in meters.\n * @param {number} a Semi-major axis of the ellipsoid in meters.\n * @param {number} f Flattening of the ellipsoid.\n * @returns {{lat2: number, lon2: number}} The latitude and longitude (in radians) of the destination point.\n */\nexport function vincentyDirect(lat1, lon1, azi1, s12, a, f) {\n  const U1 = Math.atan((1 - f) * Math.tan(lat1));\n  const sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);\n  const sinAlpha1 = Math.sin(azi1), cosAlpha1 = Math.cos(azi1);\n\n  const sigma1 = Math.atan2(sinU1, cosU1 * cosAlpha1);\n  const sinAlpha = cosU1 * sinAlpha1;\n  const cos2Alpha = 1 - sinAlpha * sinAlpha;\n  const uSq = cos2Alpha * (a * a - (a * (1 - f)) * (a * (1 - f))) / ((a * (1 - f)) * (a * (1 - f)));\n  const A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n  const B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n\n  let sigma = s12 / ((a * (1 - f)) * A), sigmaP, iterLimit = 100;\n  let cos2SigmaM, sinSigma, cosSigma, deltaSigma;\n\n  do {\n    cos2SigmaM = Math.cos(2 * sigma1 + sigma);\n    sinSigma = Math.sin(sigma);\n    cosSigma = Math.cos(sigma);\n    deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)\n      - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n    sigmaP = sigma;\n    sigma = s12 / ((a * (1 - f)) * A) + deltaSigma;\n  } while (Math.abs(sigma - sigmaP) > 1e-12 && --iterLimit > 0);\n\n  if (iterLimit === 0) {\n    return { lat2: NaN, lon2: NaN };\n  }\n\n  const tmp = sinU1 * sinSigma - cosU1 * cosSigma * cosAlpha1;\n  const lat2 = Math.atan2(\n    sinU1 * cosSigma + cosU1 * sinSigma * cosAlpha1,\n    (1 - f) * Math.sqrt(sinAlpha * sinAlpha + tmp * tmp)\n  );\n  const lambda = Math.atan2(\n    sinSigma * sinAlpha1,\n    cosU1 * cosSigma - sinU1 * sinSigma * cosAlpha1\n  );\n  const C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n  const L = lambda - (1 - C) * f * sinAlpha\n    * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n  const lon2 = lon1 + L;\n\n  return { lat2, lon2 };\n}\n", "import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\nimport { vincentyDirect, vincentyInverse } from '../common/vincenty';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} sin_p12\n * @property {number} cos_p12\n * @property {number} a\n * @property {number} f\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n  // flattening for ellipsoid\n  this.f = this.es / (1 + Math.sqrt(1 - this.es));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, c, kp, cos_c, vars, azi1;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      // default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      // Default case\n      if (Math.abs(lon) < EPSLN && Math.abs(lat - this.lat0) < EPSLN) {\n        p.x = p.y = 0;\n        return p;\n      }\n      vars = vincentyInverse(this.lat0, this.long0, lat, lon, this.a, this.f);\n      azi1 = vars.azi1;\n      p.x = vars.s12 * Math.sin(azi1);\n      p.y = vars.s12 * Math.cos(azi1);\n      return p;\n    }\n  }\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, azi1, s12, vars;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      // default case\n      azi1 = Math.atan2(p.x, p.y);\n      s12 = Math.sqrt(p.x * p.x + p.y * p.y);\n      vars = vincentyDirect(this.lat0, this.long0, azi1, s12, this.a, this.f);\n\n      p.x = vars.lon2;\n      p.y = vars.lat2;\n      return p;\n    }\n  }\n}\n\nexport var names = ['Azimuthal_Equidistant', 'aeqd'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sin_p14\n * @property {number} cos_p14\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n    } else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['ortho'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport { EPSLN, TWO_PI, SPI, HALF_PI, FORTPI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} face\n * @property {number} x0\n * @property {number} y0\n * @property {number} es\n * @property {number} one_minus_f\n * @property {number} one_minus_f_squared\n */\n\n/* constants */\nvar FACE_ENUM = {\n  FRONT: 1,\n  RIGHT: 2,\n  BACK: 3,\n  LEFT: 4,\n  TOP: 5,\n  BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n  AREA_0: 1,\n  AREA_1: 2,\n  AREA_2: 3,\n  AREA_3: 4\n};\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Quadrilateralized Spherical Cube';\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = { x: 0, y: 0 };\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = { value: 0 };\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) { // if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; // lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = { lam: 0, phi: 0 };\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = { value: 0 };\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = ['Quadrilateralized Spherical Cube', 'Quadrilateralized_Spherical_Cube', 'qsc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport { HALF_PI, D2R, R2D, EPSLN } from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n  [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n  [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n  [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n  [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n  [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n  [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n  [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n  [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n  [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n  [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n  [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n  [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n  [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n  [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n  [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n  [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n  [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n  [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n  [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n  [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n  [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n  [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n  [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n  [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n  [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n  [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n  [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n  [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n  [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n  [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n  [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n  [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n  [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n  [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n  [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n  [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n  [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n  [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D / 5; // rad to 5-degree interval\nvar RC1 = 1 / C1;\nvar NODES = 18;\n\nvar poly3_val = function (coefs, x) {\n  return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function (coefs, x) {\n  return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n  var x = start;\n  for (; iters; --iters) {\n    var upd = f_df(x);\n    x -= upd;\n    if (Math.abs(upd) < max_err) {\n      break;\n    }\n  }\n  return x;\n}\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.long0 = this.long0 || 0;\n  this.es = 0;\n  this.title = this.title || 'Robinson';\n}\n\nexport function forward(ll) {\n  var lon = adjust_lon(ll.x - this.long0);\n\n  var dphi = Math.abs(ll.y);\n  var i = Math.floor(dphi * C1);\n  if (i < 0) {\n    i = 0;\n  } else if (i >= NODES) {\n    i = NODES - 1;\n  }\n  dphi = R2D * (dphi - RC1 * i);\n  var xy = {\n    x: poly3_val(COEFS_X[i], dphi) * lon,\n    y: poly3_val(COEFS_Y[i], dphi)\n  };\n  if (ll.y < 0) {\n    xy.y = -xy.y;\n  }\n\n  xy.x = xy.x * this.a * FXC + this.x0;\n  xy.y = xy.y * this.a * FYC + this.y0;\n  return xy;\n}\n\nexport function inverse(xy) {\n  var ll = {\n    x: (xy.x - this.x0) / (this.a * FXC),\n    y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n  };\n\n  if (ll.y >= 1) { // pathologic case\n    ll.x /= COEFS_X[NODES][0];\n    ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    // find table interval\n    var i = Math.floor(ll.y * NODES);\n    if (i < 0) {\n      i = 0;\n    } else if (i >= NODES) {\n      i = NODES - 1;\n    }\n    for (;;) {\n      if (COEFS_Y[i][0] > ll.y) {\n        --i;\n      } else if (COEFS_Y[i + 1][0] <= ll.y) {\n        ++i;\n      } else {\n        break;\n      }\n    }\n    // linear interpolation in 5 degree interval\n    var coefs = COEFS_Y[i];\n    var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i + 1][0] - coefs[0]);\n    // find t so that poly3_val(coefs, t) = ll.y\n    t = newton_rapshon(function (x) {\n      return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n    }, t, EPSLN, 100);\n\n    ll.x /= poly3_val(COEFS_X[i], t);\n    ll.y = (5 * i + t) * D2R;\n    if (xy.y < 0) {\n      ll.y = -ll.y;\n    }\n  }\n\n  ll.x = adjust_lon(ll.x + this.long0);\n  return ll;\n}\n\nexport var names = ['Robinson', 'robin'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import {\n  geodeticToGeocentric,\n  geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n  this.name = 'geocent';\n}\n\nexport function forward(p) {\n  var point = geodeticToGeocentric(p, this.es, this.a);\n  return point;\n}\n\nexport function inverse(p) {\n  var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n  return point;\n}\n\nexport var names = ['Geocentric', 'geocentric', 'geocent', 'Geocent'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import { D2R, HALF_PI, EPSLN } from '../constants/values';\nimport hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} mode\n * @property {number} sinph0\n * @property {number} cosph0\n * @property {number} pn1\n * @property {number} h\n * @property {number} rp\n * @property {number} p\n * @property {number} h1\n * @property {number} pfact\n * @property {number} es\n * @property {number} tilt\n * @property {number} azi\n * @property {number} cg\n * @property {number} sg\n * @property {number} cw\n * @property {number} sw\n */\n\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nvar params = {\n  h: { def: 100000, num: true }, // default is Karman line, no default in PROJ.7\n  azi: { def: 0, num: true, degrees: true }, // default is North\n  tilt: { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true }, // default is Greenwich, conversion to rad is automatic\n  lat0: { def: 0, num: true } // default is Equator, conversion to rad is automatic\n};\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === 'undefined') {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error('Invalid parameter value, must be numeric ' + p + ' = ' + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error('Invalid height');\n  }\n\n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt\n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = ['Tilted_Perspective', 'tpers'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {1 | 0} flip_axis\n * @property {number} h\n * @property {number} radius_g_1\n * @property {number} radius_g\n * @property {number} radius_p\n * @property {number} radius_p2\n * @property {number} radius_p_inv2\n * @property {'ellipse'|'sphere'} shape\n * @property {number} C\n * @property {string} sweep\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n  this.h = Number(this.h);\n  this.radius_g_1 = this.h / this.a;\n\n  if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n    throw new Error();\n  }\n\n  this.radius_g = 1.0 + this.radius_g_1;\n  this.C = this.radius_g * this.radius_g - 1.0;\n\n  if (this.es !== 0.0) {\n    var one_es = 1.0 - this.es;\n    var rone_es = 1 / one_es;\n\n    this.radius_p = Math.sqrt(one_es);\n    this.radius_p2 = one_es;\n    this.radius_p_inv2 = rone_es;\n\n    this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n  } else {\n    this.radius_p = 1.0;\n    this.radius_p2 = 1.0;\n    this.radius_p_inv2 = 1.0;\n\n    this.shape = 'sphere'; // Use as a condition in the forward and inverse functions.\n  }\n\n  if (!this.title) {\n    this.title = 'Geostationary Satellite View';\n  }\n}\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var tmp, v_x, v_y, v_z;\n  lon = lon - this.long0;\n\n  if (this.shape === 'ellipse') {\n    lat = Math.atan(this.radius_p2 * Math.tan(lat));\n    var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n    v_x = r * Math.cos(lon) * Math.cos(lat);\n    v_y = r * Math.sin(lon) * Math.cos(lat);\n    v_z = r * Math.sin(lat);\n\n    if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    tmp = this.radius_g - v_x;\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  } else if (this.shape === 'sphere') {\n    tmp = Math.cos(lat);\n    v_x = Math.cos(lon) * tmp;\n    v_y = Math.sin(lon) * tmp;\n    v_z = Math.sin(lat);\n    tmp = this.radius_g - v_x;\n\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  }\n  p.x = p.x * this.a;\n  p.y = p.y * this.a;\n  return p;\n}\n\nfunction inverse(p) {\n  var v_x = -1.0;\n  var v_y = 0.0;\n  var v_z = 0.0;\n  var a, b, det, k;\n\n  p.x = p.x / this.a;\n  p.y = p.y / this.a;\n\n  if (this.shape === 'ellipse') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n    }\n\n    var v_zp = v_z / this.radius_p;\n    a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n  } else if (this.shape === 'sphere') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n    }\n\n    a = v_y * v_y + v_z * v_z + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n  }\n  p.x = p.x + this.long0;\n  return p;\n}\n\nexport var names = ['Geostationary Satellite View', 'Geostationary_Satellite', 'geos'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from '../common/adjust_lon';\n\nvar A1 = 1.340264,\n  A2 = -0.081106,\n  A3 = 0.000893,\n  A4 = 0.003796,\n  M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n    paramLatSq = paramLat * paramLat,\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat)\n    / (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n    NITER = 12,\n    paramLat = p.y,\n    paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n      break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq))\n    / Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['eqearth', 'Equal Earth', 'Equal_Earth'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lat from '../common/adjust_lat';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\nimport pj_enfn from '../common/pj_enfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport { HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} phi1\n * @property {number} cphi1\n * @property {number} es\n * @property {Array<number>} en\n * @property {number} m1\n * @property {number} am1\n */\n\nvar EPS10 = 1e-10;\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    } else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['bonne', 'Bonne (Werner lat_1=90)'];\nexport default {\n  init: init,\n  names: names\n};\n", "import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function (proj4) {\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}\n", "import core from './core';\nimport Proj from './Proj';\nimport Point from './Point';\nimport common from './common/toPoint';\nimport defs from './defs';\nimport nadgrid from './nadgrid';\nimport transform from './transform';\nimport mgrs from 'mgrs';\nimport includedProjections from '../projs';\n\n/**\n * @typedef {Object} Mgrs\n * @property {(lonlat: [number, number]) => string} forward\n * @property {(mgrsString: string) => [number, number, number, number]} inverse\n * @property {(mgrsString: string) => [number, number]} toPoint\n */\n\n/**\n * @typedef {import('./defs').ProjectionDefinition} ProjectionDefinition\n * @typedef {import('./core').TemplateCoordinates} TemplateCoordinates\n * @typedef {import('./core').InterfaceCoordinates} InterfaceCoordinates\n * @typedef {import('./core').Converter} Converter\n * @typedef {import('./Proj').DatumDefinition} DatumDefinition\n */\n\n/**\n * @template {import('./core').TemplateCoordinates} T\n * @type {core<T> & {defaultDatum: string, Proj: typeof Proj, WGS84: Proj, Point: typeof Point, toPoint: typeof common, defs: typeof defs, nadgrid: typeof nadgrid, transform: typeof transform, mgrs: Mgrs, version: string}}\n */\nconst proj4 = Object.assign(core, {\n  defaultDatum: 'WGS84',\n  Proj,\n  WGS84: new Proj('WGS84'),\n  Point,\n  toPoint: common,\n  defs,\n  nadgrid,\n  transform,\n  mgrs,\n  version: '__VERSION__'\n});\nincludedProjections(proj4);\nexport default proj4;\n", "import proj4 from 'proj4';\nimport { defaultGcpTransformerOptions } from '@allmaps/transform';\nconst lonLatEquivalentDefinitions = [\n    '+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees',\n    '+proj=longlat +datum=WGS84 +no_defs +type=crs',\n    'EPSG:4326',\n    'WGS84'\n];\nconst webMercatorEquivalentDefinitions = [\n    '+proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs',\n    'EPSG:3857',\n    'EPSG:3785',\n    'GOOGLE',\n    'EPSG:900913',\n    'EPSG:102113'\n];\nexport const lonLatProjection = {\n    name: 'EPSG:4326',\n    definition: lonLatEquivalentDefinitions[0]\n};\nexport const webMercatorProjection = {\n    name: 'EPSG:3857',\n    definition: webMercatorEquivalentDefinitions[0]\n};\nexport const defaultProjectedGcpTransformerOptions = {\n    internalProjection: webMercatorProjection,\n    projection: webMercatorProjection,\n    ...defaultGcpTransformerOptions\n};\nexport const defaultProjectedGcpTransformOptions = {\n    projection: webMercatorProjection,\n    ...defaultGcpTransformerOptions\n};\nconst lonLatProjectionToWebMecatorProjectionConverter = proj4(lonLatProjection.definition, webMercatorProjection.definition);\nexport const lonLatToWebMercator = lonLatProjectionToWebMecatorProjectionConverter.forward;\nexport const webMercatorToLonLat = lonLatProjectionToWebMecatorProjectionConverter.inverse;\nfunction projectionDefinitionToAntialiasedDefinition(stringProjectionDefinition) {\n    if (stringProjectionDefinition === undefined) {\n        return undefined;\n    }\n    const lonLatIndex = lonLatEquivalentDefinitions.indexOf(stringProjectionDefinition);\n    const webMercatorIndex = webMercatorEquivalentDefinitions.indexOf(stringProjectionDefinition);\n    if (lonLatIndex != -1) {\n        return lonLatProjection.definition;\n    }\n    else if (webMercatorIndex != -1) {\n        return webMercatorProjection.definition;\n    }\n    else {\n        return stringProjectionDefinition;\n    }\n}\nexport function isEqualProjection(projection0, projection1) {\n    return (projectionDefinitionToAntialiasedDefinition(String(projection0?.definition)) ==\n        projectionDefinitionToAntialiasedDefinition(String(projection1?.definition)));\n}\n", "import proj4 from 'proj4';\nimport { mergeOptions, mergeOptionsUnlessUndefined, mergePartialOptions } from '@allmaps/stdlib';\nimport { GcpTransformer } from '@allmaps/transform';\nimport { defaultProjectedGcpTransformerOptions, lonLatProjection } from '../shared/project-functions.js';\n/**\n * Class for Projected Ground Control Point Transformers.\n *\n * A Projected GCP Transformer can transform input geometries between 'resource' and 'projected geo' spaces.\n *\n * It does this using a transformation (of a certain type) built from\n * a set of Ground Control Points (with coordinates in\n * resource and geo space), a transformation type,\n * and an internal projection and projection.\n *\n * GCPs are expected in lon-lat 'EPSG:4326' (and are projected to the internal projection).\n * The default projection for the internal projection and projection is WebMercator 'EPSG:3857'.\n *\n * A postToGeo function is built from the internal projection to the projection (by default an identity projection).\n * A preToResource function is built from the projection to the internal projection (by default an identity projection).\n *\n * Like the GCP Transformer class it extends,\n * it has a method to transform 'toGeo' (from resource to projected geo space)\n * and 'toResource' (from projected geo to resource space),\n *\n * Like the GCP Transformer class it extends,\n * the `differentHandedness` setting is `true` by default,\n * since we expect the resource coordinates to identify pixels on an image,\n * with origin in the top left and the y-axis pointing down.\n *\n * @param internalProjection - the internal projection to which the GCPs (supplied in lon-lat 'EPSG:4326') are projected before building the transformation functions.\n * @param projection - the projection of the 'projected geo' space, in which the 'toGeo()' methods results its results.\n * @param internalProjectionToProjection - the postToGeo used to go from the internal projection to the projection.\n * @param projectionToInternalProjection - the preToResource function used to go from the projection to the internal projection.\n */\nexport class ProjectedGcpTransformer extends GcpTransformer {\n    internalProjection;\n    projection;\n    internalProjectionToProjection;\n    projectionToInternalProjection;\n    lonLatToProjection;\n    projectionToLatLon;\n    /**\n     * Create a ProjectedGcpTransformer\n     *\n     * @param gcps - An array of Ground Control Points (GCPs) in lon-lat 'EPSG:4326'\n     * @param type - The transformation type\n     * @param partialProjectedGcpTransformerOptions - Projected GCP Transformer options\n     */ constructor(gcps, type = 'polynomial', partialProjectedGcpTransformerOptions) {\n        const projectedGcpTransformerOptions = mergeOptionsUnlessUndefined(defaultProjectedGcpTransformerOptions, partialProjectedGcpTransformerOptions);\n        const internalProjectionToProjectionConverter = proj4(projectedGcpTransformerOptions.internalProjection.definition, projectedGcpTransformerOptions.projection.definition);\n        const postToGeo = internalProjectionToProjectionConverter.forward;\n        const preToResource = internalProjectionToProjectionConverter.inverse;\n        const lonLatToProjectionConverter = proj4(lonLatProjection.definition, projectedGcpTransformerOptions.projection.definition);\n        const lonLatToProjection = lonLatToProjectionConverter.forward;\n        const projectionToLatLon = lonLatToProjectionConverter.inverse;\n        const partialGcpTransformerOptions = {\n            ...partialProjectedGcpTransformerOptions,\n            postToGeo,\n            preToResource\n        };\n        gcps = gcps.map((gcp) => {\n            return {\n                resource: gcp.resource,\n                geo: lonLatToProjection(gcp.geo)\n            };\n        });\n        super(gcps, type, partialGcpTransformerOptions);\n        this.internalProjection = projectedGcpTransformerOptions.internalProjection;\n        this.projection = projectedGcpTransformerOptions.projection;\n        this.internalProjectionToProjection = postToGeo;\n        this.projectionToInternalProjection = preToResource;\n        this.lonLatToProjection = lonLatToProjection;\n        this.projectionToLatLon = projectionToLatLon;\n    }\n    // Note: this is different from generalGcpsInternal from the BaseTransformer,\n    // which also includes a possible handedness flip\n    get interalProjectedGcps() {\n        return this.gcps.map(({ resource, geo }) => ({\n            resource,\n            geo: this.projectionToInternalProjection(this.lonLatToProjection(geo))\n        }));\n    }\n    get projectedGcps() {\n        return this.gcps.map(({ resource, geo }) => ({\n            resource,\n            geo: this.lonLatToProjection(geo)\n        }));\n    }\n    /**\n     * Set the projection.\n     *\n     * To transform 'toGeo' or 'toResource' to or from a different projection\n     * than set on a transformer's construction (but using the same internal projection)\n     * it's possible to specify the requested projection in the transform options.\n     *\n     * This way we circumvent a possibly expensive recomputation\n     * of the toGeo and/or toResource transformations.\n     *\n     * To do this more systematically, it's possible to set\n     * a projected gcp transformer's projection using this method\n     *\n     * Combine this with a deep clone of the transformer instance\n     * to keep the original transformer as well.\n     *\n     * @returns this\n     */\n    setProjection(projection) {\n        if (projection == this.projection) {\n            return this;\n        }\n        const internalProjectionToProjectionConverter = proj4(this.internalProjection.definition, projection.definition);\n        const postToGeo = internalProjectionToProjectionConverter.forward;\n        const preToResource = internalProjectionToProjectionConverter.inverse;\n        const lonLatToProjectionConverter = proj4(lonLatProjection.definition, projection.definition);\n        const lonLatToProjection = lonLatToProjectionConverter.forward;\n        const projectionToLatLon = lonLatToProjectionConverter.inverse;\n        const partialGcpTransformerOptions = {\n            postToGeo,\n            preToResource\n        };\n        // Note: no need to change the GCPs!\n        // They have already been converted to the internal projection\n        // in the GCP Transformer constructor\n        this.setTransformerOptionsInternal(partialGcpTransformerOptions);\n        this.projection = projection;\n        this.internalProjectionToProjection = postToGeo;\n        this.projectionToInternalProjection = preToResource;\n        this.lonLatToProjection = lonLatToProjection;\n        this.projectionToLatLon = projectionToLatLon;\n        return this;\n    }\n    /**\n     * Transform a geometry to projected geo space\n     *\n     * @param geometry - Geometry to transform\n     * @param partialProjectedGcpTransformOptions - Projected GCP Transform options\n     * @param gcpToP - Return type function\n     * @returns Input geometry transformed to projected geo space\n     */\n    transformToGeo(geometry, partialProjectedGcpTransformOptions, gcpToP) {\n        const projection = partialProjectedGcpTransformOptions?.projection;\n        let partialGcpTransformOptions = partialProjectedGcpTransformOptions;\n        if (projection) {\n            const internalProjectionToProjectionConverter = proj4(this.internalProjection.definition, projection.definition);\n            const postToGeo = internalProjectionToProjectionConverter.forward;\n            const preToResource = internalProjectionToProjectionConverter.inverse;\n            partialGcpTransformOptions = mergePartialOptions(partialGcpTransformOptions, {\n                postToGeo,\n                preToResource\n            });\n        }\n        return super.transformToGeo(geometry, partialGcpTransformOptions, gcpToP);\n    }\n    /**\n     * Transform a geometry to resource space\n     *\n     * @param geometry - Geometry to transform\n     * @param partialProjectedGcpTransformOptions - Projected GCP Transform options\n     * @param gcpToP - Return type function\n     * @returns Input geometry transformed to resource space\n     */\n    transformToResource(geometry, partialProjectedGcpTransformOptions, gcpToP) {\n        const projection = partialProjectedGcpTransformOptions?.projection;\n        let partialGcpTransformOptions = partialProjectedGcpTransformOptions;\n        if (projection) {\n            const internalProjectionToProjectionConverter = proj4(this.internalProjection.definition, projection.definition);\n            const postToGeo = internalProjectionToProjectionConverter.forward;\n            const preToResource = internalProjectionToProjectionConverter.inverse;\n            partialGcpTransformOptions = mergePartialOptions(partialGcpTransformOptions, {\n                postToGeo,\n                preToResource\n            });\n        }\n        return super.transformToResource(geometry, partialGcpTransformOptions, gcpToP);\n    }\n    /**\n     * Create a Projected GCP Transformer from a Georeferenced Map\n     *\n     * @param georeferencedMap - A Georeferenced Map\n     * @param options - Options, including Projected GCP Transformer Options, and a transformation type to overrule the type defined in the Georeferenced Map\n     * @returns A Projected GCP Transformer\n     */\n    static fromGeoreferencedMap(georeferencedMap, options) {\n        const georeferencedMapInput = {\n            transformationType: georeferencedMap.transformation?.type,\n            internalProjection: georeferencedMap.resourceCrs\n        };\n        options = mergeOptions(georeferencedMapInput, options);\n        return new ProjectedGcpTransformer(georeferencedMap.gcps, options.transformationType, options);\n    }\n}\n", "import proj4 from 'proj4';\nexport { proj4 };\nexport { ProjectedGcpTransformer } from './projected-transformers/ProjectedGcpTransformer.js';\nexport { lonLatProjection, webMercatorProjection, defaultProjectedGcpTransformerOptions, defaultProjectedGcpTransformOptions, lonLatToWebMercator, webMercatorToLonLat, isEqualProjection } from './shared/project-functions.js';\n", "\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n", "import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n", "export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, scale} from './util.js';\n\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst u = vec(4);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _16 = vec(8);\nconst _12 = vec(12);\n\nlet fin = vec(192);\nlet fin2 = vec(192);\n\nfunction finadd(finlen, alen, a) {\n    finlen = sum(finlen, fin, alen, a, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n    if (xtail === 0) {\n        if (ytail === 0) {\n            a[0] = 0;\n            b[0] = 0;\n            return 1;\n        } else {\n            negate = -ytail;\n            s1 = negate * ax;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        }\n    } else {\n        if (ytail === 0) {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            negate = -xtail;\n            s1 = negate * by;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        } else {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = ytail * ax;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            a[3] = u3;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = xtail * by;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            b[3] = u3;\n            return 4;\n        }\n    }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n    s1 = a * b;\n    c = splitter * a;\n    ahi = c - (c - a);\n    alo = a - ahi;\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    c = splitter * k;\n    bhi = c - (c - k);\n    blo = k - bhi;\n    _i = s0 * k;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * k;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n    if (z !== 0) {\n        c = splitter * z;\n        bhi = c - (c - z);\n        blo = z - bhi;\n        _i = s0 * z;\n        c = splitter * s0;\n        ahi = c - (c - s0);\n        alo = s0 - ahi;\n        u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n        _j = s1 * z;\n        c = splitter * s1;\n        ahi = c - (c - s1);\n        alo = s1 - ahi;\n        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n        _k = _i + _0;\n        bvirt = _k - _i;\n        u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n        u3 = _j + _k;\n        u[2] = _k - (u3 - _j);\n        u[3] = u3;\n        finlen = finadd(finlen, 4, u);\n    }\n    return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail;\n    let adytail, bdytail, cdytail;\n    let adztail, bdztail, cdztail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            scale(4, bc, adz, _8), _8,\n            scale(4, ca, bdz, _8b), _8b, _16), _16,\n        scale(4, ab, cdz, _8), _8, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = o3derrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    bvirt = az - adz;\n    adztail = az - (adz + bvirt) + (bvirt - dz);\n    bvirt = bz - bdz;\n    bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n    bvirt = cz - cdz;\n    cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 &&\n        adytail === 0 && bdytail === 0 && cdytail === 0 &&\n        adztail === 0 && bdztail === 0 && cdztail === 0) {\n        return det;\n    }\n\n    errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n    det +=\n        adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) +\n        bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) +\n        cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n\n    const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n    finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n\n    const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n    finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n\n    const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n    finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n\n    if (adztail !== 0) {\n        finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n        finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n    }\n    if (bdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n        finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n    }\n    if (cdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n        finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n    }\n\n    if (adxtail !== 0) {\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n        }\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n        }\n    }\n    if (bdxtail !== 0) {\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n        }\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n        }\n    }\n    if (cdxtail !== 0) {\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n        }\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n\n    const det =\n        adz * (bdxcdy - cdxbdy) +\n        bdz * (cdxady - adxcdy) +\n        cdz * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n\n    const errbound = o3derrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n\n    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\n\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    return adx * (bdy * cdz - bdz * cdy) +\n        bdx * (cdy * adz - cdz * ady) +\n        cdx * (ady * bdz - adz * bdy);\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale} from './util.js';\n\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst abt = vec(8);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\n\nconst _8 = vec(8);\nconst _16 = vec(16);\nconst _16b = vec(16);\nconst _16c = vec(16);\nconst _32 = vec(32);\nconst _32b = vec(32);\nconst _48 = vec(48);\nconst _64 = vec(64);\n\nlet fin = vec(1152);\nlet fin2 = vec(1152);\n\nfunction finadd(finlen, a, alen) {\n    finlen = sum(finlen, fin, a, alen, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n    let abtlen, bctlen, catlen;\n    let abttlen, bcttlen, cattlen;\n    let n1, n0;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            sum(\n                scale(scale(4, bc, adx, _8), _8, adx, _16), _16,\n                scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32,\n            sum(\n                scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16,\n                scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64,\n        sum(\n            scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16,\n            scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = iccerrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n        return det;\n    }\n\n    errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n    det += ((adx * adx + ady * ady) * ((bdx * cdytail + cdy * bdxtail) - (bdy * cdxtail + cdx * bdytail)) +\n        2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx)) +\n        ((bdx * bdx + bdy * bdy) * ((cdx * adytail + ady * cdxtail) - (cdy * adxtail + adx * cdytail)) +\n        2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) +\n        ((cdx * cdx + cdy * cdy) * ((adx * bdytail + bdy * adxtail) - (ady * bdxtail + bdx * adytail)) +\n        2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n        s1 = adx * adx;\n        c = splitter * adx;\n        ahi = c - (c - adx);\n        alo = adx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = ady * ady;\n        c = splitter * ady;\n        ahi = c - (c - ady);\n        alo = ady - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        aa[3] = u3;\n    }\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n        s1 = bdx * bdx;\n        c = splitter * bdx;\n        ahi = c - (c - bdx);\n        alo = bdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = bdy * bdy;\n        c = splitter * bdy;\n        ahi = c - (c - bdy);\n        alo = bdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        bb[3] = u3;\n    }\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n        s1 = cdx * cdx;\n        c = splitter * cdx;\n        ahi = c - (c - cdx);\n        alo = cdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = cdy * cdy;\n        c = splitter * cdy;\n        ahi = c - (c - cdy);\n        alo = cdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        cc[3] = u3;\n    }\n\n    if (adxtail !== 0) {\n        axtbclen = scale(4, bc, adxtail, axtbc);\n        finlen = finadd(finlen, sum_three(\n            scale(axtbclen, axtbc, 2 * adx, _16), _16,\n            scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b,\n            scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n    }\n    if (adytail !== 0) {\n        aytbclen = scale(4, bc, adytail, aytbc);\n        finlen = finadd(finlen, sum_three(\n            scale(aytbclen, aytbc, 2 * ady, _16), _16,\n            scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b,\n            scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n    }\n    if (bdxtail !== 0) {\n        bxtcalen = scale(4, ca, bdxtail, bxtca);\n        finlen = finadd(finlen, sum_three(\n            scale(bxtcalen, bxtca, 2 * bdx, _16), _16,\n            scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b,\n            scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n    }\n    if (bdytail !== 0) {\n        bytcalen = scale(4, ca, bdytail, bytca);\n        finlen = finadd(finlen, sum_three(\n            scale(bytcalen, bytca, 2 * bdy, _16), _16,\n            scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b,\n            scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n    }\n    if (cdxtail !== 0) {\n        cxtablen = scale(4, ab, cdxtail, cxtab);\n        finlen = finadd(finlen, sum_three(\n            scale(cxtablen, cxtab, 2 * cdx, _16), _16,\n            scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b,\n            scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n    }\n    if (cdytail !== 0) {\n        cytablen = scale(4, ab, cdytail, cytab);\n        finlen = finadd(finlen, sum_three(\n            scale(cytablen, cytab, 2 * cdy, _16), _16,\n            scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b,\n            scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n    }\n\n    if (adxtail !== 0 || adytail !== 0) {\n        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n            s1 = bdxtail * cdy;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdy;\n            bhi = c - (c - cdy);\n            blo = cdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * cdytail;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            s1 = cdxtail * -bdy;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * -bdy;\n            bhi = c - (c - -bdy);\n            blo = -bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * -bdytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * -bdytail;\n            bhi = c - (c - -bdytail);\n            blo = -bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            bctlen = sum(4, u, 4, v, bct);\n            s1 = bdxtail * cdytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdxtail * bdytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            bctt[3] = u3;\n            bcttlen = 4;\n        } else {\n            bct[0] = 0;\n            bctlen = 1;\n            bctt[0] = 0;\n            bcttlen = 1;\n        }\n        if (adxtail !== 0) {\n            const len = scale(bctlen, bct, adxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(axtbclen, axtbc, adxtail, _16), _16,\n                scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * adx, _16), _16,\n                scale(len2, _8, adxtail, _16b), _16b,\n                scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n            }\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n            }\n        }\n        if (adytail !== 0) {\n            const len = scale(bctlen, bct, adytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(aytbclen, aytbc, adytail, _16), _16,\n                scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * ady, _16), _16,\n                scale(len2, _8, adytail, _16b), _16b,\n                scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n        }\n    }\n    if (bdxtail !== 0 || bdytail !== 0) {\n        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n            s1 = cdxtail * ady;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * ady;\n            bhi = c - (c - ady);\n            blo = ady - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * adytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -cdy;\n            n0 = -cdytail;\n            s1 = adxtail * n1;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * n0;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            catlen = sum(4, u, 4, v, cat);\n            s1 = cdxtail * adytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adxtail * cdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            catt[3] = u3;\n            cattlen = 4;\n        } else {\n            cat[0] = 0;\n            catlen = 1;\n            catt[0] = 0;\n            cattlen = 1;\n        }\n        if (bdxtail !== 0) {\n            const len = scale(catlen, cat, bdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bxtcalen, bxtca, bdxtail, _16), _16,\n                scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdx, _16), _16,\n                scale(len2, _8, bdxtail, _16b), _16b,\n                scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n            }\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n            }\n        }\n        if (bdytail !== 0) {\n            const len = scale(catlen, cat, bdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bytcalen, bytca, bdytail, _16), _16,\n                scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdy, _16), _16,\n                scale(len2, _8, bdytail, _16b), _16b,\n                scale(len, _16c, bdytail, _32), _32,  _32b, _64), _64);\n        }\n    }\n    if (cdxtail !== 0 || cdytail !== 0) {\n        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n            s1 = adxtail * bdy;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdy;\n            bhi = c - (c - bdy);\n            blo = bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * bdytail;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -ady;\n            n0 = -adytail;\n            s1 = bdxtail * n1;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * n0;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            abtlen = sum(4, u, 4, v, abt);\n            s1 = adxtail * bdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdxtail * adytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            abtt[3] = u3;\n            abttlen = 4;\n        } else {\n            abt[0] = 0;\n            abtlen = 1;\n            abtt[0] = 0;\n            abttlen = 1;\n        }\n        if (cdxtail !== 0) {\n            const len = scale(abtlen, abt, cdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cxtablen, cxtab, cdxtail, _16), _16,\n                scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdx, _16), _16,\n                scale(len2, _8, cdxtail, _16b), _16b,\n                scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n            }\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n            }\n        }\n        if (cdytail !== 0) {\n            const len = scale(abtlen, abt, cdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cytablen, cytab, cdytail, _16), _16,\n                scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdy, _16), _16,\n                scale(len2, _8, cdytail, _16b), _16b,\n                scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n    const alift = adx * adx + ady * ady;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n    const blift = bdx * bdx + bdy * bdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n    const clift = cdx * cdx + cdy * cdy;\n\n    const det =\n        alift * (bdxcdy - cdxbdy) +\n        blift * (cdxady - adxcdy) +\n        clift * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * blift +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n\n    const errbound = iccerrboundA * permanent;\n\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\n\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const ady = ay - dy;\n    const bdx = bx - dx;\n    const bdy = by - dy;\n    const cdx = cx - dx;\n    const cdy = cy - dy;\n\n    const abdet = adx * bdy - bdx * ady;\n    const bcdet = bdx * cdy - cdx * bdy;\n    const cadet = cdx * ady - adx * cdy;\n    const alift = adx * adx + ady * ady;\n    const blift = bdx * bdx + bdy * bdy;\n    const clift = cdx * cdx + cdy * cdy;\n\n    return alift * bcdet + blift * cadet + clift * abdet;\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate} from './util.js';\n\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\n\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\n\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\n\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n    return sum_three(\n        scale(4, a, az, _8), _8,\n        scale(4, b, bz, _8b), _8b,\n        scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n    const len = sum(\n        sum(alen, a, blen, b, _48), _48,\n        negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n\n    return sum_three(\n        scale(scale(len, _96, x, _192), _192, x, _384x), _384x,\n        scale(scale(len, _96, y, _192), _192, y, _384y), _384y,\n        scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    s1 = ax * by;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ay;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n    s1 = bx * cy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * by;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cx * dy;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * cy;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cd[3] = u3;\n    s1 = dx * ey;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * dy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    de[3] = u3;\n    s1 = ex * ay;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * ey;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ea[3] = u3;\n    s1 = ax * cy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * ay;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ac[3] = u3;\n    s1 = bx * dy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * by;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bd[3] = u3;\n    s1 = cx * ey;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * cy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ce[3] = u3;\n    s1 = dx * ay;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * dy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    da[3] = u3;\n    s1 = ex * by;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ey;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    eb[3] = u3;\n\n    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n\n    const deterlen = sum_three(\n        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,\n        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,\n        sum_three(\n            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,\n            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,\n            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n\n    return deter[deterlen - 1];\n}\n\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n    const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n    return sum_three(\n        scale(scale(len, _24, x, _48), _48, x, xdet), xdet,\n        scale(scale(len, _24, y, _48), _48, y, ydet), ydet,\n        scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n    let ab3, bc3, cd3, da3, ac3, bd3;\n\n    let aextail, bextail, cextail, dextail;\n    let aeytail, beytail, ceytail, deytail;\n    let aeztail, beztail, ceztail, deztail;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    s1 = aex * bey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bex * aey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ab3 = _j + _i;\n    bvirt = ab3 - _j;\n    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n    ab[3] = ab3;\n    s1 = bex * cey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * bey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bc3 = _j + _i;\n    bvirt = bc3 - _j;\n    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n    bc[3] = bc3;\n    s1 = cex * dey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * cey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    cd3 = _j + _i;\n    bvirt = cd3 - _j;\n    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n    cd[3] = cd3;\n    s1 = dex * aey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = aex * dey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    da3 = _j + _i;\n    bvirt = da3 - _j;\n    da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n    da[3] = da3;\n    s1 = aex * cey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * aey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ac3 = _j + _i;\n    bvirt = ac3 - _j;\n    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n    ac[3] = ac3;\n    s1 = bex * dey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * bey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bd3 = _j + _i;\n    bvirt = bd3 - _j;\n    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n    bd[3] = bd3;\n\n    const finlen = sum(\n        sum(\n            negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,\n            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,\n        sum(\n            negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,\n            liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = isperrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - aex;\n    aextail = ax - (aex + bvirt) + (bvirt - ex);\n    bvirt = ay - aey;\n    aeytail = ay - (aey + bvirt) + (bvirt - ey);\n    bvirt = az - aez;\n    aeztail = az - (aez + bvirt) + (bvirt - ez);\n    bvirt = bx - bex;\n    bextail = bx - (bex + bvirt) + (bvirt - ex);\n    bvirt = by - bey;\n    beytail = by - (bey + bvirt) + (bvirt - ey);\n    bvirt = bz - bez;\n    beztail = bz - (bez + bvirt) + (bvirt - ez);\n    bvirt = cx - cex;\n    cextail = cx - (cex + bvirt) + (bvirt - ex);\n    bvirt = cy - cey;\n    ceytail = cy - (cey + bvirt) + (bvirt - ey);\n    bvirt = cz - cez;\n    ceztail = cz - (cez + bvirt) + (bvirt - ez);\n    bvirt = dx - dex;\n    dextail = dx - (dex + bvirt) + (bvirt - ex);\n    bvirt = dy - dey;\n    deytail = dy - (dey + bvirt) + (bvirt - ey);\n    bvirt = dz - dez;\n    deztail = dz - (dez + bvirt) + (bvirt - ez);\n    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&\n        bextail === 0 && beytail === 0 && beztail === 0 &&\n        cextail === 0 && ceytail === 0 && ceztail === 0 &&\n        dextail === 0 && deytail === 0 && deztail === 0) {\n        return det;\n    }\n\n    errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n\n    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);\n    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);\n    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);\n    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);\n    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);\n    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);\n    det +=\n        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +\n        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *\n        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -\n        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +\n        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *\n        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +\n        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +\n        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -\n        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +\n        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    const aexbey = aex * bey;\n    const bexaey = bex * aey;\n    const ab = aexbey - bexaey;\n    const bexcey = bex * cey;\n    const cexbey = cex * bey;\n    const bc = bexcey - cexbey;\n    const cexdey = cex * dey;\n    const dexcey = dex * cey;\n    const cd = cexdey - dexcey;\n    const dexaey = dex * aey;\n    const aexdey = aex * dey;\n    const da = dexaey - aexdey;\n    const aexcey = aex * cey;\n    const cexaey = cex * aey;\n    const ac = aexcey - cexaey;\n    const bexdey = bex * dey;\n    const dexbey = dex * bey;\n    const bd = bexdey - dexbey;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    const det =\n        (clift * (dez * ab + aez * bd + bez * da) - dlift * (aez * bc - bez * ac + cez * ab)) +\n        (alift * (bez * cd - cez * bd + dez * bc) - blift * (cez * da + dez * ac + aez * cd));\n\n    const aezplus = Math.abs(aez);\n    const bezplus = Math.abs(bez);\n    const cezplus = Math.abs(cez);\n    const dezplus = Math.abs(dez);\n    const aexbeyplus = Math.abs(aexbey) + Math.abs(bexaey);\n    const bexceyplus = Math.abs(bexcey) + Math.abs(cexbey);\n    const cexdeyplus = Math.abs(cexdey) + Math.abs(dexcey);\n    const dexaeyplus = Math.abs(dexaey) + Math.abs(aexdey);\n    const aexceyplus = Math.abs(aexcey) + Math.abs(cexaey);\n    const bexdeyplus = Math.abs(bexdey) + Math.abs(dexbey);\n    const permanent =\n        (cexdeyplus * bezplus + bexdeyplus * cezplus + bexceyplus * dezplus) * alift +\n        (dexaeyplus * cezplus + aexceyplus * dezplus + cexdeyplus * aezplus) * blift +\n        (aexbeyplus * dezplus + bexdeyplus * aezplus + dexaeyplus * bezplus) * clift +\n        (bexceyplus * aezplus + aexceyplus * bezplus + aexbeyplus * cezplus) * dlift;\n\n    const errbound = isperrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\n\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n    const aex = pax - pex;\n    const bex = pbx - pex;\n    const cex = pcx - pex;\n    const dex = pdx - pex;\n    const aey = pay - pey;\n    const bey = pby - pey;\n    const cey = pcy - pey;\n    const dey = pdy - pey;\n    const aez = paz - pez;\n    const bez = pbz - pez;\n    const cez = pcz - pez;\n    const dez = pdz - pez;\n\n    const ab = aex * bey - bex * aey;\n    const bc = bex * cey - cex * bey;\n    const cd = cex * dey - dex * cey;\n    const da = dex * aey - aex * dey;\n    const ac = aex * cey - cex * aey;\n    const bd = bex * dey - dex * bey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n}\n", "\nexport {orient2d, orient2dfast} from './esm/orient2d.js';\nexport {orient3d, orient3dfast} from './esm/orient3d.js';\nexport {incircle, incirclefast} from './esm/incircle.js';\nexport {insphere, inspherefast} from './esm/insphere.js';\n", "import { orient2d } from 'robust-predicates';\n\nfunction pointInPolygon(p, polygon) {\n    var i;\n    var ii;\n    var k = 0;\n    var f;\n    var u1;\n    var v1;\n    var u2;\n    var v2;\n    var currentP;\n    var nextP;\n\n    var x = p[0];\n    var y = p[1];\n\n    var numContours = polygon.length;\n    for (i = 0; i < numContours; i++) {\n        ii = 0;\n        var contour = polygon[i];\n        var contourLen = contour.length - 1;\n\n        currentP = contour[0];\n        if (currentP[0] !== contour[contourLen][0] &&\n            currentP[1] !== contour[contourLen][1]) {\n            throw new Error('First and last coordinates in a ring must be the same')\n        }\n\n        u1 = currentP[0] - x;\n        v1 = currentP[1] - y;\n\n        for (ii; ii < contourLen; ii++) {\n            nextP = contour[ii + 1];\n\n            u2 = nextP[0] - x;\n            v2 = nextP[1] - y;\n\n            if (v1 === 0 && v2 === 0) {\n                if ((u2 <= 0 && u1 >= 0) || (u1 <= 0 && u2 >= 0)) { return 0 }\n            } else if ((v2 >= 0 && v1 <= 0) || (v2 <= 0 && v1 >= 0)) {\n                f = orient2d(u1, u2, v1, v2, 0, 0);\n                if (f === 0) { return 0 }\n                if ((f > 0 && v2 > 0 && v1 <= 0) || (f < 0 && v2 <= 0 && v1 > 0)) { k++; }\n            }\n            currentP = nextP;\n            v1 = v2;\n            u1 = u2;\n        }\n    }\n\n    if (k % 2 === 0) { return false }\n    return true\n}\n\nexport { pointInPolygon as default };\n", "import { TileCache } from '../tilecache/TileCache.js'\nimport { WarpedMapList } from '../maps/WarpedMapList.js'\nimport { FetchableTile } from '../tilecache/FetchableTile.js'\n\nimport { WarpedMapEvent, WarpedMapEventType } from '../shared/events.js'\nimport {\n  getTileZoomLevelForScale,\n  computeTilesCoveringRingAtTileZoomLevel,\n  getTilesResolution,\n  getTilesAtScaleFactor,\n  getTileZoomLevelResolution,\n  squaredDistanceTileToPoint\n} from '../shared/tiles.js'\n\nimport {\n  bboxToCenter,\n  computeBbox,\n  squaredDistance,\n  intersectBboxes,\n  bboxToRectangle,\n  mergeOptions\n} from '@allmaps/stdlib'\nimport { lonLatProjection, proj4 } from '@allmaps/project'\n\nimport type { Viewport } from '../viewport/Viewport.js'\nimport type { WarpedMap } from '../maps/WarpedMap.js'\nimport type {\n  CachableTileFactory,\n  WarpedMapFactory,\n  BaseRendererOptions,\n  MapPruneInfo\n} from '../shared/types.js'\n\n// TODO: move defaults for tunable options here\nconst defaultBaseRendererOptions = {}\n\n// These buffers should be in growing order\nconst REQUEST_VIEWPORT_BUFFER_RATIO = 0\nconst OVERVIEW_REQUEST_VIEWPORT_BUFFER_RATIO = 2\nconst PRUNE_VIEWPORT_BUFFER_RATIO = 4\nconst OVERVIEW_PRUNE_VIEWPORT_BUFFER_RATIO = 10\n\n/**\n * 0 = no correction, -1 = shaper, +1 = less sharp\n * Normal has more effect on smaller scale factors\n * Log2 (i.e. per zoomlevel) has equal effect all scale factors\n */\nconst SCALE_FACTOR_CORRECTION = 0\nconst LOG2_SCALE_FACTOR_CORRECTION = 0.4\n\nconst MAX_MAP_OVERVIEW_RESOLUTION = 1024 * 1024 // Support one 1024 * 1024 overview tile, e.g. for Rotterdam map.\nconst MAX_TOTAL_RESOLUTION_RATIO = 10\n\nconst MAX_GCPS_EXACT_TPS_TO_RESOURCE = 100\n\n/**\n * Abstract base class for renderers\n */\nexport abstract class BaseRenderer<W extends WarpedMap, D> extends EventTarget {\n  partialBaseRendererOptions: Partial<BaseRendererOptions>\n\n  warpedMapList: WarpedMapList<W>\n  tileCache: TileCache<D>\n\n  mapsInPreviousViewport: Set<string> = new Set()\n  mapsInViewport: Set<string> = new Set()\n  mapsWithRequestedTilesForViewport: Set<string> = new Set()\n  protected viewport: Viewport | undefined\n\n  constructor(\n    cachableTileFactory: CachableTileFactory<D>,\n    warpedMapFactory: WarpedMapFactory<W>,\n    partialBaseRendererOptions?: Partial<BaseRendererOptions>\n  ) {\n    super()\n\n    this.partialBaseRendererOptions = mergeOptions(\n      defaultBaseRendererOptions,\n      partialBaseRendererOptions\n    )\n\n    this.tileCache = new TileCache(\n      cachableTileFactory,\n      partialBaseRendererOptions\n    )\n    this.warpedMapList = new WarpedMapList(\n      warpedMapFactory,\n      partialBaseRendererOptions\n    )\n  }\n\n  /**\n   * Parses an annotation and adds its georeferenced map to this renderer's warped map list\n   *\n   * @param annotation\n   * @returns\n   */\n  async addGeoreferenceAnnotation(annotation: unknown) {\n    return this.warpedMapList.addGeoreferenceAnnotation(annotation)\n  }\n\n  /**\n   * Adds a georeferenced map to this renderer's warped map list\n   *\n   * @param georeferencedMap\n   * @returns\n   */\n  async addGeoreferencedMap(georeferencedMap: unknown) {\n    return this.warpedMapList.addGeoreferencedMap(georeferencedMap)\n  }\n\n  /**\n   * Set the Base Renderer options\n   *\n   * @param partialBaseRendererOptions - Options\n   */\n  setOptions(partialBaseRendererOptions?: Partial<BaseRendererOptions>): void {\n    this.partialBaseRendererOptions = mergeOptions(\n      this.partialBaseRendererOptions,\n      partialBaseRendererOptions\n    )\n    this.tileCache.setOptions(partialBaseRendererOptions)\n    this.warpedMapList.setOptions(partialBaseRendererOptions)\n  }\n\n  protected loadMissingImageInfosInViewport(): Promise<void>[] {\n    if (!this.viewport) {\n      return []\n    }\n\n    return Array.from(\n      this.warpedMapList.getWarpedMaps({\n        geoBbox: this.viewport.geoRectangleBbox\n      })\n    )\n      .filter(\n        (warpedMap) => !warpedMap.hasImageInfo() && !warpedMap.loadingImageInfo\n      )\n      .map((warpedMap) => warpedMap.loadImageInfo())\n  }\n\n  protected someImageInfosInViewport(): boolean {\n    if (!this.viewport) {\n      return false\n    }\n\n    // Note: this must be the largest buffer\n    // to make sure prune info is made and maps are pruned\n    return Array.from(\n      this.findMapsInViewport(\n        this.shouldAnticipateInteraction()\n          ? OVERVIEW_PRUNE_VIEWPORT_BUFFER_RATIO\n          : 0\n      )\n    )\n      .map((mapId) => this.warpedMapList.getWarpedMap(mapId) as WarpedMap)\n      .map((warpedMap) => warpedMap.hasImageInfo())\n      .some(Boolean)\n  }\n\n  protected shouldRequestFetchableTiles() {\n    return true\n  }\n\n  // Should we anticipate user interaction (panning or zooming)\n  // and hence buffer the viewport or get overview tiles\n  protected shouldAnticipateInteraction() {\n    return false\n  }\n\n  protected assureProjection() {\n    if (!this.viewport) {\n      return\n    }\n\n    this.warpedMapList.partialWarpedMapListOptions.projection =\n      this.viewport.projection\n    this.warpedMapList.setMapsProjection(this.viewport.projection, {\n      onlyVisible: false\n    })\n  }\n\n  protected requestFetchableTiles(): void {\n    if (!this.shouldRequestFetchableTiles()) {\n      return\n    }\n\n    const fetchableTilesForViewport: FetchableTile[] = []\n    const overviewFetchableTilesForViewport: FetchableTile[] = []\n\n    const mapsInViewportForRequest = this.findMapsInViewport(\n      this.shouldAnticipateInteraction() ? REQUEST_VIEWPORT_BUFFER_RATIO : 0\n    )\n    const mapsInViewportForOverviewRequest = this.findMapsInViewport(\n      this.shouldAnticipateInteraction()\n        ? OVERVIEW_REQUEST_VIEWPORT_BUFFER_RATIO\n        : 0\n    )\n    const mapsInViewportForPrune = this.findMapsInViewport(\n      this.shouldAnticipateInteraction() ? PRUNE_VIEWPORT_BUFFER_RATIO : 0\n    )\n    const mapsInViewportForOverviewPrune = this.findMapsInViewport(\n      this.shouldAnticipateInteraction()\n        ? OVERVIEW_PRUNE_VIEWPORT_BUFFER_RATIO\n        : 0\n    )\n\n    // For all maps, reset properties for the current viewport: the (overview) zoomlevels, resource viewport ring and fetchable tiles\n    for (const warpedMap of this.warpedMapList.getWarpedMaps()) {\n      warpedMap.resetForViewport()\n    }\n\n    // Get fetchable tiles for all maps in viewport with request buffer\n    // (and set properties for the current viewport for all maps in viewport with prune buffer)\n    for (const mapId of mapsInViewportForPrune) {\n      fetchableTilesForViewport.push(\n        ...this.getMapFetchableTilesForViewport(mapId, mapsInViewportForRequest)\n      )\n    }\n\n    // Get overview fetchable tiles for all maps in viewport with overview buffer\n    // (and set properties for the current viewport for all maps in viewport with prune buffer)\n    if (this.shouldAnticipateInteraction()) {\n      for (const mapId of mapsInViewportForOverviewPrune) {\n        overviewFetchableTilesForViewport.push(\n          ...this.getMapOverviewFetchableTilesForViewport(\n            mapId,\n            [\n              ...fetchableTilesForViewport,\n              ...overviewFetchableTilesForViewport\n            ],\n            mapsInViewportForOverviewRequest\n          )\n        )\n      }\n    }\n\n    // Request all those fetchable tiles\n    this.tileCache.requestFetchableTiles([\n      ...fetchableTilesForViewport,\n      ...overviewFetchableTilesForViewport\n    ])\n\n    this.updateMapsForViewport([\n      ...fetchableTilesForViewport,\n      ...overviewFetchableTilesForViewport\n    ])\n    this.pruneTileCache(mapsInViewportForOverviewPrune)\n  }\n\n  protected findMapsInViewport(viewportBufferRatio = 0): Set<string> {\n    if (!this.viewport) {\n      return new Set()\n    }\n    const viewport = this.viewport\n\n    const projectedGeoBufferedRectangle =\n      this.viewport.getProjectedGeoBufferedRectangle(viewportBufferRatio)\n    const geoBufferedRectangleBbox = computeBbox(\n      projectedGeoBufferedRectangle.map((point) =>\n        proj4(\n          viewport.projection.definition,\n          lonLatProjection.definition,\n          point\n        )\n      )\n    )\n\n    return new Set(\n      Array.from(\n        this.warpedMapList.getWarpedMaps({ geoBbox: geoBufferedRectangleBbox })\n      )\n        .sort((warpedMapA, warpedMapB) => {\n          if (warpedMapA && warpedMapB) {\n            return (\n              squaredDistance(\n                bboxToCenter(warpedMapA.projectedGeoMaskBbox),\n                viewport.projectedGeoCenter\n              ) -\n              squaredDistance(\n                bboxToCenter(warpedMapB.projectedGeoMaskBbox),\n                viewport.projectedGeoCenter\n              )\n            )\n          } else {\n            return 0\n          }\n        })\n        .map((warpedMap) => warpedMap.mapId)\n    )\n  }\n\n  protected getMapFetchableTilesForViewport(\n    mapId: string,\n    mapsInViewportForRequest: Set<string>\n  ): FetchableTile[] {\n    if (!this.viewport) {\n      return []\n    }\n    const viewport = this.viewport\n\n    const warpedMap = this.warpedMapList.getWarpedMap(mapId)\n\n    if (!warpedMap) {\n      return []\n    }\n\n    if (!warpedMap.visible) {\n      return []\n    }\n\n    if (!warpedMap.hasImageInfo()) {\n      // Note: don't load image information here\n      // this would imply waiting for the first throttling cycle to complete\n      // before acting on a sucessful load\n      return []\n    }\n\n    // Find TileZoomLevel for the current viewport\n    // Note the equivalence of the following two:\n    // - warpedMap.getApproxResourceToCanvasScale(this.viewport)\n    // - warpedMap.resourceToProjectedGeoScale * this.viewport.projectedGeoPerCanvasScale\n    const tileZoomLevel = getTileZoomLevelForScale(\n      warpedMap.parsedImage.tileZoomLevels,\n      warpedMap.getResourceToCanvasScale(viewport),\n      SCALE_FACTOR_CORRECTION,\n      LOG2_SCALE_FACTOR_CORRECTION\n    )\n    warpedMap.setTileZoomLevelForViewport(tileZoomLevel)\n\n    // Transforming the viewport back to resource\n    const transformerOptions = {\n      maxDepth: 0,\n      // maxDepth: 2,\n      // minOffsetRatio: 0.00001,\n      sourceIsGeographic: false,\n      destinationIsGeographic: true\n    }\n    // This can be expensive at high maxDepth and seems to work fine with maxDepth = 0\n    // TODO: Consider recusive refinement via options like {minOffsetRatio: 0.00001, maxDepth: 2}\n    // Note: if recursive refinement, use geographic distances and midpoints for lon-lat destination points\n    const projectedGeoBufferedViewportRectangle =\n      viewport.getProjectedGeoBufferedRectangle(\n        this.shouldAnticipateInteraction() ? REQUEST_VIEWPORT_BUFFER_RATIO : 0\n      )\n    // Optimise computation time of backwards transformation:\n    // Since this is the only place transformToResource is called\n    // (and hence backwards transformation is computed)\n    // and computing thinPlateSpline can be expensive for maps with many gcps\n    // we can chose to compute the less expensive polynomial backward transformation.\n    // Note: for very deformed maps (with TPS and many gcps),\n    // this could lead to inaccurate tile loading (in addition to the reason explained below).\n    const projectedTransformer =\n      warpedMap.transformationType === 'thinPlateSpline' &&\n      warpedMap.gcps.length > MAX_GCPS_EXACT_TPS_TO_RESOURCE\n        ? warpedMap.getProjectedTransformer('polynomial')\n        : warpedMap.projectedTransformer\n    // Compute viewport in resource\n    // Note: since the backward transformation is not the exact inverse of the forward\n    // there is an inherent imperfection in this computation\n    // which could lead to inaccurate tile loading.\n    // In general, this is made up for by the buffers.\n    const resourceBufferedViewportRing =\n      projectedTransformer.transformToResource(\n        [projectedGeoBufferedViewportRectangle],\n        transformerOptions\n      )[0]\n    warpedMap.setProjectedGeoBufferedViewportRectangleForViewport(\n      projectedGeoBufferedViewportRectangle\n    )\n    warpedMap.setResourceBufferedViewportRingForViewport(\n      resourceBufferedViewportRing\n    )\n    // Assure variables exist on warpedMap, that should be computed by the setters above\n    if (\n      !warpedMap.resourceBufferedViewportRingBboxForViewport ||\n      !warpedMap.resourceBufferedViewportRingBboxForViewport\n    ) {\n      throw new Error(\n        'No resourceBufferedViewportRingBboxForViewport or resourceBufferedViewportRingBboxForViewport'\n      )\n    }\n\n    // Compute intersection of bboxes of to-resource-back-transformed viewport and resource mask\n    const resourceBufferedViewportRingBboxAndResourceMaskBboxIntersection =\n      intersectBboxes(\n        warpedMap.resourceBufferedViewportRingBboxForViewport,\n        warpedMap.resourceMaskBbox\n      )\n    warpedMap.setResourceBufferedViewportRingBboxAndResourceMaskBboxIntersectionForViewport(\n      resourceBufferedViewportRingBboxAndResourceMaskBboxIntersection\n    )\n\n    // If this map it outside of the viewport with request buffer, stop here:\n    // in thise case we only ran this function to set the properties for the current viewport\n    // so we can use them relyably while pruning\n    if (!mapsInViewportForRequest.has(mapId)) {\n      return []\n    }\n\n    // If the intersection of the bboxes is undefined, we don't need to compute any tiles.\n    // This should in general only happen if the previous check also returned false.\n    if (!resourceBufferedViewportRingBboxAndResourceMaskBboxIntersection) {\n      return []\n    }\n\n    // Find tiles covering this intersection of bboxes of to-resource-back-transformed viewport and mask\n    // by computing the tiles covering this bbox's rectangle at the tilezoomlevel\n    const tiles = computeTilesCoveringRingAtTileZoomLevel(\n      bboxToRectangle(\n        resourceBufferedViewportRingBboxAndResourceMaskBboxIntersection\n      ),\n      tileZoomLevel,\n      [warpedMap.parsedImage.width, warpedMap.parsedImage.height]\n    )\n\n    // Sort tiles to load in order of their distance to viewport center\n    const resourceBufferedViewportRingCenter = bboxToCenter(\n      warpedMap.resourceBufferedViewportRingBboxForViewport\n    )\n    tiles.sort(\n      (tileA, tileB) =>\n        squaredDistanceTileToPoint(tileA, resourceBufferedViewportRingCenter) -\n        squaredDistanceTileToPoint(tileB, resourceBufferedViewportRingCenter)\n    )\n\n    // Make fetchable tiles\n    const fetchableTiles = tiles.map(\n      (tile) => new FetchableTile(tile, warpedMap)\n    )\n    warpedMap.setFetchableTilesForViewport(fetchableTiles)\n\n    return fetchableTiles\n  }\n\n  protected getMapOverviewFetchableTilesForViewport(\n    mapId: string,\n    totalFetchableTilesForViewport: FetchableTile[],\n    mapsInViewportForOverviewRequest: Set<string>\n  ): FetchableTile[] {\n    if (!this.viewport) {\n      return []\n    }\n\n    const warpedMap = this.warpedMapList.getWarpedMap(mapId)\n\n    if (!warpedMap) {\n      return []\n    }\n\n    if (!warpedMap.visible) {\n      return []\n    }\n\n    if (!warpedMap.hasImageInfo()) {\n      // Note: don't load image information here\n      // this would imply waiting for the first throttling cycle to complete\n      // before acting on a sucessful load\n      return []\n    }\n\n    // No overview tiles if too many fetchable tiles in total already\n    const totalFetchableTilesResolution = getTilesResolution(\n      totalFetchableTilesForViewport.map((fetchableTile) => fetchableTile.tile)\n    )\n    const maxTotalFetchableTilesResolution =\n      this.viewport.canvasResolution * MAX_TOTAL_RESOLUTION_RATIO\n\n    if (totalFetchableTilesResolution > maxTotalFetchableTilesResolution) {\n      return []\n    }\n\n    // Find the fitting overview zoomlevel, if any\n    const overviewTileZoomLevel = warpedMap.parsedImage.tileZoomLevels\n      .filter(\n        (tileZoomLevel) =>\n          getTileZoomLevelResolution(tileZoomLevel) <=\n          MAX_MAP_OVERVIEW_RESOLUTION\n        // Neglect zoomlevels that contain too many pixels\n      )\n      .sort(\n        (tileZoomLevel0, tileZoomLevel1) =>\n          tileZoomLevel0.scaleFactor - tileZoomLevel1.scaleFactor\n        // Enforcing default ascending order, e.g. from 1 to 16\n      )\n      .at(-1)\n    warpedMap.setOverviewTileZoomLevelForViewport(overviewTileZoomLevel)\n\n    // If this map it ourside of the viewport with overview buffer, stop here:\n    // in thise case we only ran this function to set the properties for the current viewport\n    // so we can use them relyably while pruning\n    if (!mapsInViewportForOverviewRequest.has(mapId)) {\n      return []\n    }\n\n    // If the overview tile zoomlevel scalefactor is the same or lower then tile zoom level scalefactor for the current viewport\n    // then this is not really an 'overview' tilezoomlevel, so don't proceed\n    if (\n      !overviewTileZoomLevel ||\n      (warpedMap.tileZoomLevelForViewport &&\n        overviewTileZoomLevel.scaleFactor <=\n          warpedMap.tileZoomLevelForViewport.scaleFactor)\n    ) {\n      return []\n    }\n\n    // Find all tiles at overview scalefactor\n    const overviewTiles = getTilesAtScaleFactor(\n      overviewTileZoomLevel.scaleFactor,\n      warpedMap.parsedImage\n    )\n\n    // Make fechable tiles\n    const overviewFetchableTiles = overviewTiles.map(\n      (tile) => new FetchableTile(tile, warpedMap)\n    )\n    warpedMap.setOverviewFetchableTilesForViewport(overviewFetchableTiles)\n\n    return overviewFetchableTiles\n  }\n\n  protected updateMapsForViewport(tiles: FetchableTile[]): {\n    mapsEnteringViewport: string[]\n    mapsLeavingViewport: string[]\n  } {\n    // Sort to process by zIndex later\n    this.mapsWithRequestedTilesForViewport = new Set(\n      tiles\n        .map((tile) => tile.mapId)\n        .filter((v, i, a) => {\n          // filter out duplicate mapIds\n          return a.indexOf(v) === i\n        })\n        .sort((mapIdA, mapIdB) => {\n          const zIndexA = this.warpedMapList.getMapZIndex(mapIdA)\n          const zIndexB = this.warpedMapList.getMapZIndex(mapIdB)\n          if (zIndexA !== undefined && zIndexB !== undefined) {\n            return zIndexA - zIndexB\n          }\n          return 0\n        })\n    )\n\n    this.mapsInPreviousViewport = this.mapsInViewport\n    this.mapsInViewport = this.findMapsInViewport()\n\n    // TODO: handle everything as Set() once JS supports filter on sets.\n    // And speed up with anonymous functions with the Set.prototype.difference() once broadly supported\n    const mapsInPreviousViewportAsArray = Array.from(\n      this.mapsInPreviousViewport\n    )\n    const mapsInViewportAsArray = Array.from(this.mapsInViewport)\n\n    const mapsEnteringViewport = mapsInViewportAsArray.filter(\n      (mapId) => !mapsInPreviousViewportAsArray.includes(mapId)\n    )\n    const mapsLeavingViewport = mapsInPreviousViewportAsArray.filter(\n      (mapId) => !mapsInViewportAsArray.includes(mapId)\n    )\n\n    for (const mapId of mapsEnteringViewport) {\n      this.dispatchEvent(\n        new WarpedMapEvent(WarpedMapEventType.WARPEDMAPENTER, mapId)\n      )\n    }\n    for (const mapId of mapsLeavingViewport) {\n      this.clearMap(mapId)\n      this.dispatchEvent(\n        new WarpedMapEvent(WarpedMapEventType.WARPEDMAPLEAVE, mapId)\n      )\n    }\n\n    return {\n      mapsEnteringViewport,\n      mapsLeavingViewport\n    }\n  }\n\n  protected pruneTileCache(mapsInViewportForOverviewPrune: Set<string>) {\n    // Create pruneInfo for all maps in viewport with prune overview buffer\n    const pruneInfoByMapId: Map<string, MapPruneInfo> = new Map()\n    for (const warpedMap of this.warpedMapList.getWarpedMaps({\n      mapIds: mapsInViewportForOverviewPrune\n    })) {\n      pruneInfoByMapId.set(warpedMap.mapId, {\n        tileZoomLevelForViewport: warpedMap.tileZoomLevelForViewport,\n        overviewTileZoomLevelForViewport:\n          warpedMap.overviewTileZoomLevelForViewport,\n        resourceViewportRingBboxForViewport:\n          warpedMap.resourceBufferedViewportRingBboxForViewport\n      })\n    }\n    this.tileCache.prune(pruneInfoByMapId)\n  }\n\n  destroy() {\n    this.tileCache.destroy()\n    this.warpedMapList.destroy()\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected clearMap(mapId: string): void {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected mapTileLoaded(event: Event): void {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected mapTileRemoved(event: Event): void {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected imageInfoLoaded(event: Event): void {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected warpedMapAdded(event: Event): void {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected warpedMapRemoved(event: Event): void {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected preChange(event: Event): void {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected optionsChanged(event: Event): void {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected gcpsChanged(event: Event): void {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected resourceMaskChanged(event: Event): void {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected transformationChanged(event: Event): void {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected distortionChanged(event: Event): void {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected internalProjectionChanged(event: Event): void {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected projectionChanged(event: Event): void {}\n\n  protected addEventListeners() {\n    this.tileCache.addEventListener(\n      WarpedMapEventType.MAPTILELOADED,\n      this.mapTileLoaded.bind(this)\n    )\n\n    this.tileCache.addEventListener(\n      WarpedMapEventType.MAPTILEREMOVED,\n      this.mapTileRemoved.bind(this)\n    )\n\n    this.warpedMapList.addEventListener(\n      WarpedMapEventType.IMAGEINFOLOADED,\n      this.imageInfoLoaded.bind(this)\n    )\n\n    this.warpedMapList.addEventListener(\n      WarpedMapEventType.WARPEDMAPADDED,\n      this.warpedMapAdded.bind(this)\n    )\n\n    this.warpedMapList.addEventListener(\n      WarpedMapEventType.WARPEDMAPREMOVED,\n      this.warpedMapRemoved.bind(this)\n    )\n\n    this.warpedMapList.addEventListener(\n      WarpedMapEventType.PRECHANGE,\n      this.preChange.bind(this)\n    )\n\n    this.warpedMapList.addEventListener(\n      WarpedMapEventType.OPTIONSCHANGED,\n      this.optionsChanged.bind(this)\n    )\n\n    this.warpedMapList.addEventListener(\n      WarpedMapEventType.GCPSCHANGED,\n      this.gcpsChanged.bind(this)\n    )\n\n    this.warpedMapList.addEventListener(\n      WarpedMapEventType.RESOURCEMASKCHANGED,\n      this.gcpsChanged.bind(this)\n    )\n\n    this.warpedMapList.addEventListener(\n      WarpedMapEventType.TRANSFORMATIONCHANGED,\n      this.transformationChanged.bind(this)\n    )\n\n    this.warpedMapList.addEventListener(\n      WarpedMapEventType.DISTORTIONCHANGED,\n      this.distortionChanged.bind(this)\n    )\n\n    this.warpedMapList.addEventListener(\n      WarpedMapEventType.INTERNALPROJECTIONCHANGED,\n      this.internalProjectionChanged.bind(this)\n    )\n\n    this.warpedMapList.addEventListener(\n      WarpedMapEventType.PROJECTIONCHANGED,\n      this.projectionChanged.bind(this)\n    )\n  }\n\n  protected removeEventListeners() {\n    this.tileCache.removeEventListener(\n      WarpedMapEventType.MAPTILELOADED,\n      this.mapTileLoaded.bind(this)\n    )\n\n    this.tileCache.removeEventListener(\n      WarpedMapEventType.MAPTILEREMOVED,\n      this.mapTileRemoved.bind(this)\n    )\n\n    this.warpedMapList.removeEventListener(\n      WarpedMapEventType.IMAGEINFOLOADED,\n      this.imageInfoLoaded.bind(this)\n    )\n\n    this.warpedMapList.removeEventListener(\n      WarpedMapEventType.WARPEDMAPADDED,\n      this.warpedMapAdded.bind(this)\n    )\n\n    this.warpedMapList.removeEventListener(\n      WarpedMapEventType.WARPEDMAPREMOVED,\n      this.warpedMapRemoved.bind(this)\n    )\n\n    this.warpedMapList.removeEventListener(\n      WarpedMapEventType.PRECHANGE,\n      this.preChange.bind(this)\n    )\n\n    this.warpedMapList.removeEventListener(\n      WarpedMapEventType.OPTIONSCHANGED,\n      this.optionsChanged.bind(this)\n    )\n\n    this.warpedMapList.removeEventListener(\n      WarpedMapEventType.GCPSCHANGED,\n      this.gcpsChanged.bind(this)\n    )\n\n    this.warpedMapList.removeEventListener(\n      WarpedMapEventType.RESOURCEMASKCHANGED,\n      this.gcpsChanged.bind(this)\n    )\n\n    this.warpedMapList.removeEventListener(\n      WarpedMapEventType.TRANSFORMATIONCHANGED,\n      this.transformationChanged.bind(this)\n    )\n\n    this.warpedMapList.removeEventListener(\n      WarpedMapEventType.DISTORTIONCHANGED,\n      this.distortionChanged.bind(this)\n    )\n\n    this.warpedMapList.removeEventListener(\n      WarpedMapEventType.INTERNALPROJECTIONCHANGED,\n      this.internalProjectionChanged.bind(this)\n    )\n\n    this.warpedMapList.removeEventListener(\n      WarpedMapEventType.PROJECTIONCHANGED,\n      this.projectionChanged.bind(this)\n    )\n  }\n}\n", "import inside from 'point-in-polygon-hao';\nimport { distance, stepDistanceAngle, lineAngle, closeRing, closePolygon } from '@allmaps/stdlib';\n// Return an array of points containing the first line point,\n// and betwen the first and last line point other points every `dist`\nfunction interpolateLine(line, dist) {\n    const lineDistance = distance(line);\n    // Note: ciel - 1 instead of floor, such that for round numbers we don't include the last step\n    const steps = Math.ceil(lineDistance / dist) - 1;\n    const angle = lineAngle(line);\n    let currentPoint = line[0];\n    const result = [currentPoint];\n    for (let step = 1; step <= steps; step++) {\n        currentPoint = stepDistanceAngle(currentPoint, dist, angle);\n        result.push(currentPoint);\n    }\n    // Note: the last nextpoint, which is also line[1], is not pushed\n    return result;\n}\n// Return an array of points containing the ring points,\n// and between every pair of ring points other points every `dist`\nexport function interpolateRing(ring, dist) {\n    ring = closeRing(ring);\n    let result = [];\n    for (let i = 0; i < ring.length - 1; i++) {\n        result = result.concat(interpolateLine([ring[i], ring[i + 1]], dist));\n    }\n    return result;\n}\nexport function interpolatePolygon(polygon, dist) {\n    return polygon.map((ring) => interpolateRing(ring, dist));\n}\nexport function getGridPointsInBbox(bbox, gridSize) {\n    const grid = [];\n    for (let x = bbox[0] + gridSize, i = 0; x <= bbox[2]; i++, x += gridSize) {\n        for (let y = bbox[1] + gridSize, j = 0; y <= bbox[3]; j++, y += gridSize) {\n            grid.push([x, y]);\n        }\n    }\n    return grid;\n}\n// Returns true if point is inside of polygon with holes\nexport function pointInPolygon(point, polygon) {\n    try {\n        return inside(point, closePolygon(polygon)) === true;\n    }\n    catch (error) {\n        console.error('Error determining if point is inside polygon:', error);\n        return false;\n    }\n}\n", "import { incircle, orient2d } from 'robust-predicates';\n\n/**\n * A set of numbers, stored as bits in a typed array. The amount of numbers /\n * the maximum number that can be stored is limited by the length, which is\n * fixed at construction time.\n */\nclass BitSet {\n    constructor(W, bs) {\n        this.W = W;\n        this.bs = bs;\n    }\n    /**\n     * Add a number to the set.\n     *\n     * @param idx The number to add. Must be 0 <= idx < len.\n     * @return this.\n     */\n    add(idx) {\n        const W = this.W, byte = (idx / W) | 0, bit = idx % W;\n        this.bs[byte] |= 1 << bit;\n        return this;\n    }\n    /**\n     * Delete a number from the set.\n     *\n     * @param idx The number to delete. Must be 0 <= idx < len.\n     * @return this.\n     */\n    delete(idx) {\n        const W = this.W, byte = (idx / W) | 0, bit = idx % W;\n        this.bs[byte] &= ~(1 << bit);\n        return this;\n    }\n    /**\n     * Add or delete a number in the set, depending on the second argument.\n     *\n     * @param idx The number to add or delete. Must be 0 <= idx < len.\n     * @param val If true, add the number, otherwise delete.\n     * @return val.\n     */\n    set(idx, val) {\n        const W = this.W, byte = (idx / W) | 0, bit = idx % W, m = 1 << bit;\n        //this.bs[byte] = set ? this.bs[byte] | m : this.bs[byte] & ~m;\n        this.bs[byte] ^= (-val ^ this.bs[byte]) & m; // -set == set * 255\n        return val;\n    }\n    /**\n     * Whether the number is in the set.\n     *\n     * @param idx The number to test. Must be 0 <= idx < len.\n     * @return True if the number is in the set.\n     */\n    has(idx) {\n        const W = this.W, byte = (idx / W) | 0, bit = idx % W;\n        return !!(this.bs[byte] & (1 << bit));\n    }\n    /**\n     * Iterate over the numbers that are in the set. The callback is invoked\n     * with each number that is set. It is allowed to change the BitSet during\n     * iteration. If it deletes a number that has not been iterated over, that\n     * number will not show up in a later call. If it adds a number during\n     * iteration, that number may or may not show up in a later call.\n     *\n     * @param fn The function to call for each number.\n     * @return this.\n     */\n    forEach(fn) {\n        const W = this.W, bs = this.bs, len = bs.length;\n        for (let byte = 0; byte < len; byte++) {\n            let bit = 0;\n            // bs[byte] may change during iteration\n            while (bs[byte] && bit < W) {\n                if (bs[byte] & (1 << bit)) {\n                    fn(byte * W + bit);\n                }\n                bit++;\n            }\n        }\n        return this;\n    }\n}\n/**\n * A bit set using 8 bits per cell.\n */\nclass BitSet8 extends BitSet {\n    /**\n     * Create a bit set.\n     *\n     * @param len The length of the bit set, limiting the maximum value that\n     *        can be stored in it to len - 1.\n     */\n    constructor(len) {\n        const W = 8, bs = new Uint8Array(Math.ceil(len / W)).fill(0);\n        super(W, bs);\n    }\n}\n\nfunction nextEdge(e) { return (e % 3 === 2) ? e - 2 : e + 1; }\nfunction prevEdge(e) { return (e % 3 === 0) ? e + 2 : e - 1; }\n/**\n * Constrain a triangulation from Delaunator, using (parts of) the algorithm\n * in \"A fast algorithm for generating constrained Delaunay triangulations\" by\n * S. W. Sloan.\n */\nclass Constrainautor {\n    /**\n     * Make a Constrainautor.\n     *\n     * @param del The triangulation output from Delaunator.\n     * @param edges If provided, constrain these edges as by constrainAll.\n     */\n    constructor(del, edges) {\n        if (!del || typeof del !== 'object' || !del.triangles || !del.halfedges || !del.coords) {\n            throw new Error(\"Expected an object with Delaunator output\");\n        }\n        if (del.triangles.length % 3 || del.halfedges.length !== del.triangles.length || del.coords.length % 2) {\n            throw new Error(\"Delaunator output appears inconsistent\");\n        }\n        if (del.triangles.length < 3) {\n            throw new Error(\"No edges in triangulation\");\n        }\n        this.del = del;\n        const U32NIL = 2 ** 32 - 1, // Max value of a Uint32Array: use as a sentinel for not yet defined \n        numPoints = del.coords.length >> 1, numEdges = del.triangles.length;\n        // Map every vertex id to the right-most edge that points to that vertex.\n        this.vertMap = new Uint32Array(numPoints).fill(U32NIL);\n        // Keep track of edges flipped while constraining\n        this.flips = new BitSet8(numEdges);\n        // Keep track of constrained edges\n        this.consd = new BitSet8(numEdges);\n        for (let e = 0; e < numEdges; e++) {\n            const v = del.triangles[e];\n            if (this.vertMap[v] === U32NIL) {\n                this.updateVert(e);\n            }\n        }\n        if (edges) {\n            this.constrainAll(edges);\n        }\n    }\n    /**\n     * Constrain the triangulation such that there is an edge between p1 and p2.\n     *\n     * @param segP1 The index of one segment end-point in the coords array.\n     * @param segP2 The index of the other segment end-point in the coords array.\n     * @return The id of the edge that points from p1 to p2. If the\n     *         constrained edge lies on the hull and points in the opposite\n     *         direction (p2 to p1), the negative of its id is returned.\n     */\n    constrainOne(segP1, segP2) {\n        const { triangles, halfedges } = this.del, vm = this.vertMap, consd = this.consd, start = vm[segP1];\n        // Loop over the edges touching segP1\n        let edg = start;\n        do {\n            // edg points toward segP1, so its start-point is opposite it\n            const p4 = triangles[edg], nxt = nextEdge(edg);\n            // already constrained, but in reverse order\n            if (p4 === segP2) {\n                return this.protect(edg);\n            }\n            // The edge opposite segP1\n            const opp = prevEdge(edg), p3 = triangles[opp];\n            // already constrained\n            if (p3 === segP2) {\n                this.protect(nxt);\n                return nxt;\n            }\n            // edge opposite segP1 intersects constraint\n            if (this.intersectSegments(segP1, segP2, p3, p4)) {\n                edg = opp;\n                break;\n            }\n            const adj = halfedges[nxt];\n            // The next edge pointing to segP1\n            edg = adj;\n        } while (edg !== -1 && edg !== start);\n        let conEdge = edg;\n        // Walk through the triangulation looking for further intersecting\n        // edges and flip them. If an intersecting edge cannot be flipped,\n        // assign its id to `rescan` and restart from there, until there are\n        // no more intersects.\n        let rescan = -1;\n        while (edg !== -1) {\n            // edg is the intersecting half-edge in the triangle we came from\n            // adj is now the opposite half-edge in the adjacent triangle, which\n            // is away from segP1.\n            const adj = halfedges[edg], \n            // cross diagonal\n            bot = prevEdge(edg), top = prevEdge(adj), rgt = nextEdge(adj);\n            if (adj === -1) {\n                throw new Error(\"Constraining edge exited the hull\");\n            }\n            if (consd.has(edg)) { // || consd.has(adj) // assume consd is consistent\n                throw new Error(\"Edge intersects already constrained edge\");\n            }\n            if (this.isCollinear(segP1, segP2, triangles[edg]) ||\n                this.isCollinear(segP1, segP2, triangles[adj])) {\n                throw new Error(\"Constraining edge intersects point\");\n            }\n            const convex = this.intersectSegments(triangles[edg], triangles[adj], triangles[bot], triangles[top]);\n            // The quadrilateral formed by the two triangles adjoing edg is not\n            // convex, so the edge can't be flipped. Continue looking for the\n            // next intersecting edge and restart at this one later.\n            if (!convex) {\n                if (rescan === -1) {\n                    rescan = edg;\n                }\n                if (triangles[top] === segP2) {\n                    if (edg === rescan) {\n                        throw new Error(\"Infinite loop: non-convex quadrilateral\");\n                    }\n                    edg = rescan;\n                    rescan = -1;\n                    continue;\n                }\n                // Look for the next intersect\n                if (this.intersectSegments(segP1, segP2, triangles[top], triangles[adj])) {\n                    edg = top;\n                }\n                else if (this.intersectSegments(segP1, segP2, triangles[rgt], triangles[top])) {\n                    edg = rgt;\n                }\n                else if (rescan === edg) {\n                    throw new Error(\"Infinite loop: no further intersect after non-convex\");\n                }\n                continue;\n            }\n            this.flipDiagonal(edg);\n            // The new edge might still intersect, which will be fixed in the\n            // next rescan.\n            if (this.intersectSegments(segP1, segP2, triangles[bot], triangles[top])) {\n                if (rescan === -1) {\n                    rescan = bot;\n                }\n                if (rescan === bot) {\n                    throw new Error(\"Infinite loop: flipped diagonal still intersects\");\n                }\n            }\n            // Reached the other segment end-point? Start the rescan.\n            if (triangles[top] === segP2) {\n                conEdge = top;\n                edg = rescan;\n                rescan = -1;\n                // Otherwise, for the next edge that intersects. Because we just\n                // flipped, it's either edg again, or rgt.\n            }\n            else if (this.intersectSegments(segP1, segP2, triangles[rgt], triangles[top])) {\n                edg = rgt;\n            }\n        }\n        const flips = this.flips;\n        this.protect(conEdge);\n        do {\n            // need to use var to scope it outside the loop, but re-initialize\n            // to 0 each iteration\n            var flipped = 0;\n            flips.forEach(edg => {\n                flips.delete(edg);\n                const adj = halfedges[edg];\n                if (adj === -1) {\n                    return;\n                }\n                flips.delete(adj);\n                if (!this.isDelaunay(edg)) {\n                    this.flipDiagonal(edg);\n                    flipped++;\n                }\n            });\n        } while (flipped > 0);\n        return this.findEdge(segP1, segP2);\n    }\n    /**\n     * Fix the Delaunay condition. It is no longer necessary to call this\n     * method after constraining (many) edges, since constrainOne will do it\n     * after each.\n     *\n     * @param deep If true, keep checking & flipping edges until all\n     *        edges are Delaunay, otherwise only check the edges once.\n     * @return The triangulation object.\n     */\n    delaunify(deep = false) {\n        const halfedges = this.del.halfedges, flips = this.flips, consd = this.consd, len = halfedges.length;\n        do {\n            var flipped = 0;\n            for (let edg = 0; edg < len; edg++) {\n                if (consd.has(edg)) {\n                    continue;\n                }\n                flips.delete(edg);\n                const adj = halfedges[edg];\n                if (adj === -1) {\n                    continue;\n                }\n                flips.delete(adj);\n                if (!this.isDelaunay(edg)) {\n                    this.flipDiagonal(edg);\n                    flipped++;\n                }\n            }\n        } while (deep && flipped > 0);\n        return this;\n    }\n    /**\n     * Call constrainOne on each edge, and delaunify afterwards.\n     *\n     * @param edges The edges to constrain: each element is an array with\n     *        [p1, p2] which are indices into the points array originally\n     *        supplied to Delaunator.\n     * @return The triangulation object.\n     */\n    constrainAll(edges) {\n        const len = edges.length;\n        for (let i = 0; i < len; i++) {\n            const e = edges[i];\n            this.constrainOne(e[0], e[1]);\n        }\n        return this;\n    }\n    /**\n     * Whether an edge is a constrained edge.\n     *\n     * @param edg The edge id.\n     * @return True if the edge is constrained.\n     */\n    isConstrained(edg) {\n        return this.consd.has(edg);\n    }\n    /**\n     * Find the edge that points from p1 -> p2. If there is only an edge from\n     * p2 -> p1 (i.e. it is on the hull), returns the negative id of it.\n     *\n     * @param p1 The index of the first point into the points array.\n     * @param p2 The index of the second point into the points array.\n     * @return The id of the edge that points from p1 -> p2, or the negative\n     *         id of the edge that goes from p2 -> p1, or Infinity if there is\n     *         no edge between p1 and p2.\n     */\n    findEdge(p1, p2) {\n        const start1 = this.vertMap[p2], { triangles, halfedges } = this.del;\n        let edg = start1, prv = -1;\n        // Walk around p2, iterating over the edges pointing to it\n        do {\n            if (triangles[edg] === p1) {\n                return edg;\n            }\n            prv = nextEdge(edg);\n            edg = halfedges[prv];\n        } while (edg !== -1 && edg !== start1);\n        // Did not find p1 -> p2, the only option is that it is on the hull on\n        // the 'left-hand' side, pointing p2 -> p1 (or there is no edge)\n        if (triangles[nextEdge(prv)] === p1) {\n            return -prv;\n        }\n        return Infinity;\n    }\n    /**\n     * Mark an edge as constrained, i.e. should not be touched by `delaunify`.\n     *\n     * @private\n     * @param edg The edge id.\n     * @return If edg has an adjacent, returns that, otherwise -edg.\n     */\n    protect(edg) {\n        const adj = this.del.halfedges[edg], flips = this.flips, consd = this.consd;\n        flips.delete(edg);\n        consd.add(edg);\n        if (adj !== -1) {\n            flips.delete(adj);\n            consd.add(adj);\n            return adj;\n        }\n        return -edg;\n    }\n    /**\n     * Mark an edge as flipped, unless it is already marked as constrained.\n     *\n     * @private\n     * @param edg The edge id.\n     * @return True if edg was not constrained.\n     */\n    markFlip(edg) {\n        const halfedges = this.del.halfedges, flips = this.flips, consd = this.consd;\n        if (consd.has(edg)) {\n            return false;\n        }\n        const adj = halfedges[edg];\n        if (adj !== -1) {\n            flips.add(edg);\n            flips.add(adj);\n        }\n        return true;\n    }\n    /**\n     * Flip the edge shared by two triangles.\n     *\n     * @private\n     * @param edg The edge shared by the two triangles, must have an\n     *        adjacent half-edge.\n     * @return The new diagonal.\n     */\n    flipDiagonal(edg) {\n        // Flip a diagonal\n        //                top                     edg\n        //          o  <----- o            o <------  o \n        //         | ^ \\      ^           |       ^ / ^\n        //      lft|  \\ \\     |        lft|      / /  |\n        //         |   \\ \\adj |           |  bot/ /   |\n        //         | edg\\ \\   |           |    / /top |\n        //         |     \\ \\  |rgt        |   / /     |rgt\n        //         v      \\ v |           v  / v      |\n        //         o ----->  o            o   ------> o \n        //           bot                     adj\n        const { triangles, halfedges } = this.del, flips = this.flips, consd = this.consd, adj = halfedges[edg], bot = prevEdge(edg), lft = nextEdge(edg), top = prevEdge(adj), rgt = nextEdge(adj), adjBot = halfedges[bot], adjTop = halfedges[top];\n        if (consd.has(edg)) { // || consd.has(adj) // assume consd is consistent\n            throw new Error(\"Trying to flip a constrained edge\");\n        }\n        // move *edg to *top\n        triangles[edg] = triangles[top];\n        halfedges[edg] = adjTop;\n        if (!flips.set(edg, flips.has(top))) {\n            consd.set(edg, consd.has(top));\n        }\n        if (adjTop !== -1) {\n            halfedges[adjTop] = edg;\n        }\n        halfedges[bot] = top;\n        // move *adj to *bot\n        triangles[adj] = triangles[bot];\n        halfedges[adj] = adjBot;\n        if (!flips.set(adj, flips.has(bot))) {\n            consd.set(adj, consd.has(bot));\n        }\n        if (adjBot !== -1) {\n            halfedges[adjBot] = adj;\n        }\n        halfedges[top] = bot;\n        this.markFlip(edg);\n        this.markFlip(lft);\n        this.markFlip(adj);\n        this.markFlip(rgt);\n        // mark flips unconditionally\n        flips.add(bot);\n        consd.delete(bot);\n        flips.add(top);\n        consd.delete(top);\n        this.updateVert(edg);\n        this.updateVert(lft);\n        this.updateVert(adj);\n        this.updateVert(rgt);\n        return bot;\n    }\n    /**\n     * Whether the two triangles sharing edg conform to the Delaunay condition.\n     * As a shortcut, if the given edge has no adjacent (is on the hull), it is\n     * certainly Delaunay.\n     *\n     * @private\n     * @param edg The edge shared by the triangles to test.\n     * @return True if they are Delaunay.\n     */\n    isDelaunay(edg) {\n        const { triangles, halfedges } = this.del, adj = halfedges[edg];\n        if (adj === -1) {\n            return true;\n        }\n        const p1 = triangles[prevEdge(edg)], p2 = triangles[edg], p3 = triangles[nextEdge(edg)], px = triangles[prevEdge(adj)];\n        return !this.inCircle(p1, p2, p3, px);\n    }\n    /**\n     * Update the vertex -> incoming edge map.\n     *\n     * @private\n     * @param start The id of an *outgoing* edge.\n     * @return The id of the right-most incoming edge.\n     */\n    updateVert(start) {\n        const { triangles, halfedges } = this.del, vm = this.vertMap, v = triangles[start];\n        // When iterating over incoming edges around a vertex, we do so in\n        // clockwise order ('going left'). If the vertex lies on the hull, two\n        // of the edges will have no opposite, leaving a gap. If the starting\n        // incoming edge is not the right-most, we will miss edges between it\n        // and the gap. So walk counter-clockwise until we find an edge on the\n        // hull, or get back to where we started.\n        let inc = prevEdge(start), adj = halfedges[inc];\n        while (adj !== -1 && adj !== start) {\n            inc = prevEdge(adj);\n            adj = halfedges[inc];\n        }\n        vm[v] = inc;\n        return inc;\n    }\n    /**\n     * Whether the segment between [p1, p2] intersects with [p3, p4]. When the\n     * segments share an end-point (e.g. p1 == p3 etc.), they are not considered\n     * intersecting.\n     *\n     * @private\n     * @param p1 The index of point 1 into this.del.coords.\n     * @param p2 The index of point 2 into this.del.coords.\n     * @param p3 The index of point 3 into this.del.coords.\n     * @param p4 The index of point 4 into this.del.coords.\n     * @return True if the segments intersect.\n     */\n    intersectSegments(p1, p2, p3, p4) {\n        const pts = this.del.coords;\n        // If the segments share one of the end-points, they cannot intersect\n        // (provided the input is properly segmented, and the triangulation is\n        // correct), but intersectSegments will say that they do. We can catch\n        // it here already.\n        if (p1 === p3 || p1 === p4 || p2 === p3 || p2 === p4) {\n            return false;\n        }\n        return intersectSegments(pts[p1 * 2], pts[p1 * 2 + 1], pts[p2 * 2], pts[p2 * 2 + 1], pts[p3 * 2], pts[p3 * 2 + 1], pts[p4 * 2], pts[p4 * 2 + 1]);\n    }\n    /**\n     * Whether point px is in the circumcircle of the triangle formed by p1, p2,\n     * and p3 (which are in counter-clockwise order).\n     *\n     * @param p1 The index of point 1 into this.del.coords.\n     * @param p2 The index of point 2 into this.del.coords.\n     * @param p3 The index of point 3 into this.del.coords.\n     * @param px The index of point x into this.del.coords.\n     * @return True if (px, py) is in the circumcircle.\n     */\n    inCircle(p1, p2, p3, px) {\n        const pts = this.del.coords;\n        return incircle(pts[p1 * 2], pts[p1 * 2 + 1], pts[p2 * 2], pts[p2 * 2 + 1], pts[p3 * 2], pts[p3 * 2 + 1], pts[px * 2], pts[px * 2 + 1]) < 0.0;\n    }\n    /**\n     * Whether point p1, p2, and p are collinear.\n     *\n     * @private\n     * @param p1 The index of segment point 1 into this.del.coords.\n     * @param p2 The index of segment point 2 into this.del.coords.\n     * @param p The index of the point p into this.del.coords.\n     * @return True if the points are collinear.\n     */\n    isCollinear(p1, p2, p) {\n        const pts = this.del.coords;\n        return orient2d(pts[p1 * 2], pts[p1 * 2 + 1], pts[p2 * 2], pts[p2 * 2 + 1], pts[p * 2], pts[p * 2 + 1]) === 0.0;\n    }\n}\nConstrainautor.intersectSegments = intersectSegments;\n/**\n * Compute if two line segments [p1, p2] and [p3, p4] intersect.\n *\n * @name Constrainautor.intersectSegments\n * @source https://github.com/mikolalysenko/robust-segment-intersect\n * @param p1x The x coordinate of point 1 of the first segment.\n * @param p1y The y coordinate of point 1 of the first segment.\n * @param p2x The x coordinate of point 2 of the first segment.\n * @param p2y The y coordinate of point 2 of the first segment.\n * @param p3x The x coordinate of point 1 of the second segment.\n * @param p3y The y coordinate of point 1 of the second segment.\n * @param p4x The x coordinate of point 2 of the second segment.\n * @param p4y The y coordinate of point 2 of the second segment.\n * @return True if the line segments intersect.\n */\nfunction intersectSegments(p1x, p1y, p2x, p2y, p3x, p3y, p4x, p4y) {\n    const x0 = orient2d(p1x, p1y, p3x, p3y, p4x, p4y), y0 = orient2d(p2x, p2y, p3x, p3y, p4x, p4y);\n    if ((x0 > 0 && y0 > 0) || (x0 < 0 && y0 < 0)) {\n        return false;\n    }\n    const x1 = orient2d(p3x, p3y, p1x, p1y, p2x, p2y), y1 = orient2d(p4x, p4y, p1x, p1y, p2x, p2y);\n    if ((x1 > 0 && y1 > 0) || (x1 < 0 && y1 < 0)) {\n        return false;\n    }\n    //Check for degenerate collinear case\n    if (x0 === 0 && y0 === 0 && x1 === 0 && y1 === 0) {\n        return !(Math.max(p3x, p4x) < Math.min(p1x, p2x) ||\n            Math.max(p1x, p2x) < Math.min(p3x, p4x) ||\n            Math.max(p3y, p4y) < Math.min(p1y, p2y) ||\n            Math.max(p1y, p2y) < Math.min(p3y, p4y));\n    }\n    return true;\n}\n\nexport { Constrainautor as default };\n", "import { getGridPointsInBbox, interpolatePolygon, pointInPolygon } from './shared.js';\nimport { computeBbox, conformPolygon, mergeOptions, midPoint, triangleAngles } from '@allmaps/stdlib';\nimport Delaunator from 'delaunator';\n// @ts-expect-error Ignore missing types\nimport Constrainautor from '@kninnug/constrainautor';\nconst MINIMUM_TRIANGLE_ANGLE = 0.0001;\nconst defaultTriangulationOptions = {\n    steinerPoints: [],\n    minimumTriangleAngle: MINIMUM_TRIANGLE_ANGLE\n};\n/**\n * Triangulate a polygon to triangles smaller then a distance\n *\n * Grid points are placed inside the polygon to obtain small, well conditioned triangles.\n *\n * @param polygon - Polygon\n * @param distance - Distance that conditions the triangles\n * @param triangulationOptions - Triangulation Options.\n * @returns Array of triangles partitioning the polygon\n */\nexport function triangulate(polygon, distance, triangulationOptions) {\n    {\n        const { triangles } = triangulateToUnique(polygon, distance, triangulationOptions);\n        return triangles;\n    }\n}\n/**\n * Triangulate a polygon to triangles smaller then a distance, and return them via unique points.\n *\n * Grid points are placed inside the polygon to obtain small, well conditioned triangles.\n *\n * This function returns the triangulation as an array of unique points, and triangles of indices refering to those unique points.\n *\n * @param polygon - Polygon\n * @param distance - Distance that conditions the triangles\n * @param triangulationOptions - Triangulation Options.\n * @returns Triangulation Object with uniquePointIndexTriangles and uniquePoints\n */\nexport function triangulateToUnique(polygon, distance, triangulationOptions) {\n    const mergedTriangulationOptions = mergeOptions(defaultTriangulationOptions, triangulationOptions);\n    const steinerPoints = mergedTriangulationOptions.steinerPoints;\n    const minimumTriangleAngle = mergedTriangulationOptions.minimumTriangleAngle;\n    // Conform polygon (this also checks if there are at least 3 points)\n    polygon = conformPolygon(polygon);\n    let interpolatedPolygon = [];\n    let interpolatedPolygonPoints = [];\n    let gridPoints = [];\n    let gridPointsInPolygon = [];\n    if (distance) {\n        // Interpolate polygon\n        interpolatedPolygon = interpolatePolygon(polygon, distance);\n        interpolatedPolygonPoints = interpolatedPolygon.flat();\n        // Add grid points inside the polygon\n        gridPoints = getGridPointsInBbox(computeBbox(polygon), distance);\n        gridPointsInPolygon = gridPoints.filter((point) => pointInPolygon(point, polygon));\n    }\n    else {\n        interpolatedPolygon = polygon;\n        interpolatedPolygonPoints = polygon.flat();\n    }\n    const steinerPointsInPolygon = steinerPoints.filter((point) => pointInPolygon(point, polygon));\n    const uniquePoints = [\n        ...interpolatedPolygonPoints,\n        ...gridPointsInPolygon,\n        ...steinerPointsInPolygon\n    ];\n    // Initialize Delaunay triangulation from polygon + grid points\n    const delautator = new Delaunator(uniquePoints.flat());\n    // Collect indices of (interpolated) polygon edges\n    let ringOffset = 0;\n    const uniquePointIndexInterpolatedPolygon = interpolatedPolygon.map((ring) => {\n        const uniqueIndexRing = ring.map((_point, index) => ringOffset + index);\n        ringOffset += ring.length;\n        return uniqueIndexRing;\n    });\n    const uniquePointIndexEdges = uniquePointIndexInterpolatedPolygon\n        .map((ring) => ring.map((uniqueIndex) => [uniqueIndex, (uniqueIndex + 1) % ring.length]))\n        .flat();\n    // Constrain triangulation\n    // Note: instead of\n    // const constrainautor = new Constrainautor(delautator, uniquePointIndexEdges)\n    // which gives an error \"Constraining edge intersects point\" for small distances, e.g. maxDepth 7 on https://gist.githubusercontent.com/sammeltassen/fa3dbfaf4dfa800e00824478c4bd1928/raw/f182beac911e38b0a1d1eb420fbd54b4e6d2f2eb/nl-railway-map.json\n    // we perform a delaunify check first as proposed by\n    // https://github.com/kninnug/Constrainautor/issues/11#issuecomment-2571296247\n    // Keep an eye on proposed solutions, sinche the delaunify check is expensive\n    const constrainautor = new Constrainautor(delautator);\n    constrainautor.delaunify(true);\n    constrainautor.constrainAll(uniquePointIndexEdges);\n    let uniquePointIndexTriangles = [];\n    let triangles = [];\n    const shouldClassifyTriangles = [];\n    for (let i = 0; i < constrainautor.del.triangles.length; i += 3) {\n        uniquePointIndexTriangles.push([\n            constrainautor.del.triangles[i],\n            constrainautor.del.triangles[i + 1],\n            constrainautor.del.triangles[i + 2]\n        ]);\n        triangles.push([\n            uniquePoints[constrainautor.del.triangles[i]],\n            uniquePoints[constrainautor.del.triangles[i + 1]],\n            uniquePoints[constrainautor.del.triangles[i + 2]]\n        ]);\n        // Only classify triangles if they are along the border\n        shouldClassifyTriangles.push(constrainautor.del.triangles[i] < interpolatedPolygonPoints.length ||\n            constrainautor.del.triangles[i + 1] <\n                interpolatedPolygonPoints.length ||\n            constrainautor.del.triangles[i + 2] < interpolatedPolygonPoints.length);\n    }\n    // Check if triangles inside\n    const shouldKeep = triangles.map((triangle, index) => {\n        // Only keep if inside\n        if (shouldClassifyTriangles[index]) {\n            return (pointInPolygon(midPoint(...triangle), polygon) &&\n                triangleAngles(triangle).every((angle) => angle >= minimumTriangleAngle));\n        }\n        else {\n            return true;\n        }\n    });\n    uniquePointIndexTriangles = uniquePointIndexTriangles.filter((_triangle, index) => shouldKeep[index]);\n    triangles = triangles.filter((_triangle, index) => shouldKeep[index]);\n    // Fill in edges using unique\n    const edges = [];\n    for (let i = 0; i < uniquePointIndexEdges.length; i += 1) {\n        edges.push([\n            uniquePoints[uniquePointIndexEdges[i][0]],\n            uniquePoints[uniquePointIndexEdges[i][1]]\n        ]);\n    }\n    return {\n        interpolatedPolygon,\n        interpolatedPolygonPoints,\n        gridPoints,\n        gridPointsInPolygon,\n        uniquePoints,\n        triangles,\n        uniquePointIndexTriangles,\n        uniquePointIndexInterpolatedPolygon,\n        uniquePointIndexEdges\n    };\n}\n", "// Image API 1.1\n// https://iiif.io/api/image/1.1/#image-information\nimport { z } from 'zod';\nexport const image1ProfileUriRegex = /^https?:\\/\\/library.stanford.edu\\/iiif\\/image-api\\/1.1\\/compliance.html#level(?<level>[012])$/;\nexport const Image1ProfileUri = z.string().regex(image1ProfileUriRegex);\nexport const Image1ProfileSchema = Image1ProfileUri;\nexport const Image1ContextString = 'http://library.stanford.edu/iiif/image-api/1.1/context.json';\n// Used by https://gallica.bnf.fr/iiif/ark:/12148/btv1b53192683w/manifest.json (among others)\nexport const Image1ContextStringIncorrect = 'http://iiif.io/api/image/1/context.json';\nexport const Image1Context = z.literal(Image1ContextString);\nexport const Image1Schema = z.object({\n    '@context': Image1Context,\n    '@id': z.string().url(),\n    profile: Image1ProfileUri.optional(),\n    width: z.number().int(),\n    height: z.number().int(),\n    scale_factors: z.number().array().optional(),\n    tile_width: z.number().optional(),\n    tile_height: z.number().optional()\n});\n", "import { z } from 'zod';\nexport const SizeSchema = z.object({\n    width: z.number().int(),\n    height: z.number().int()\n});\nexport const TilesetSchema = z.object({\n    width: z.number().int(),\n    height: z.number().int().optional(),\n    scaleFactors: z.array(z.number().int())\n});\nconst imageServiceTypes = [\n    'ImageService1',\n    'ImageService2',\n    'ImageService3'\n];\nexport const ImageServiceTypesSchema = z.enum(imageServiceTypes);\n// https://iiif.io/api/presentation/3.0/#navdate\nconst ValidNavDateSchema = z.coerce.date();\nexport const NavDateSchema = z\n    .union([\n    ValidNavDateSchema,\n    // Catchall for incorrect values\n    z.any()\n])\n    .transform((val) => {\n    const { success, data } = ValidNavDateSchema.safeParse(val);\n    if (success) {\n        return data;\n    }\n});\n// For now, Allmaps does not parse GeoJSON values\n// This is left to clients consuming this data\nexport const NavPlaceSchema = z.object({}).passthrough();\n", "// Image API 2.1.1\n// https://iiif.io/api/image/2.1/#image-information\nimport { z } from 'zod';\nimport { TilesetSchema, SizeSchema } from './shared.js';\n// The following compliance levels URIs are valid in the IIIF Image API 2.1:\n//  - \"http://iiif.io/api/image/2/level0.json\"\n//  - \"http://iiif.io/api/image/2/level1.json\"\n//  - \"http://iiif.io/api/image/2/level2.json\"\n//\n// However, many IIIF servers use incorrect profile URIs, like these:\n//  - \"http://iiif.io/api/image/2/level0\"\n//  - \"https://iiif.io/api/image/2/level0\"\n//  - \"http://iiif.io/api/image/2/profiles/level0.json\"\n//\n// This happens very often - @allmaps/iiif-parser should parse them regardless.\n// To do this, we use this regular expression:\nexport const image2ProfileUriRegex = /^https?:\\/\\/iiif.io\\/api\\/image\\/2.*level(?<level>[012])(.json)?$/;\nexport const Image2ProfileUri = z.string().regex(image2ProfileUriRegex);\nexport const Image2ProfileDescriptionSchema = z.object({\n    formats: z.string().array().optional(),\n    maxArea: z.number().int().optional(),\n    maxHeight: z.number().int().optional(),\n    maxWidth: z.number().int().optional(),\n    qualities: z.string().array().optional(),\n    supports: z.string().array().optional()\n});\nconst ValidImage2ProfileArrayItemSchema = z.union([\n    Image2ProfileUri,\n    Image2ProfileDescriptionSchema\n]);\nfunction isValidImage2ProfileArrayItem(item) {\n    return item !== undefined;\n}\nexport const Image2ProfileSchema = z\n    .union([\n    Image2ProfileUri,\n    z.array(z\n        .union([\n        ValidImage2ProfileArrayItemSchema,\n        // Catchall for incorrect profiles\n        z.unknown()\n    ])\n        .transform((val) => {\n        const { success, data } = ValidImage2ProfileArrayItemSchema.safeParse(val);\n        if (success) {\n            return data;\n        }\n    }))\n])\n    .transform((val) => {\n    if (val && Array.isArray(val)) {\n        const firstProfile = val[0];\n        if (typeof firstProfile !== 'string') {\n            throw new Error('First profile must be a string');\n        }\n        return [\n            firstProfile,\n            ...val.slice(1).filter(isValidImage2ProfileArrayItem)\n        ];\n    }\n    return val;\n});\nexport const Image2ContextString = 'http://iiif.io/api/image/2/context.json';\nexport const Image2Context = z.union([\n    z.literal(Image2ContextString),\n    // Invalid, but used by https://iiif.archivelab.org\n    z.literal('https://iiif.io/api/image/2/context.json'),\n    z.string().url()\n]);\nexport const Image2Schema = z.object({\n    '@id': z.string().url(),\n    '@type': z\n        .union([z.literal('iiif:Image'), z.literal('ImageService2')])\n        .optional(),\n    '@context': Image2Context,\n    protocol: z.literal('http://iiif.io/api/image'),\n    width: z.number().int(),\n    height: z.number().int(),\n    profile: Image2ProfileSchema,\n    sizes: SizeSchema.array().optional(),\n    tiles: TilesetSchema.array().optional()\n});\n", "// Image API 3.0.0\n// https://iiif.io/api/image/3.0/#51-image-information-request\nimport { z } from 'zod';\nimport { TilesetSchema, SizeSchema } from './shared.js';\nexport const image3Profiles = ['level0', 'level1', 'level2'];\nexport const Image3ProfileSchema = z.enum(image3Profiles);\nexport const Image3Schema = z.object({\n    id: z.string().url(),\n    type: z.literal('ImageService3'),\n    protocol: z.literal('http://iiif.io/api/image'),\n    profile: Image3ProfileSchema,\n    width: z.number().int(),\n    height: z.number().int(),\n    maxWidth: z.number().int().optional(),\n    maxHeight: z.number().int().optional(),\n    maxArea: z.number().int().optional(),\n    sizes: SizeSchema.array().optional(),\n    tiles: TilesetSchema.array().optional(),\n    extraFeatures: z.string().array().optional()\n    // TODO: add partOf, seeAlso, and service\n});\n", "import { z } from 'zod';\nimport { Image1ProfileSchema, Image1Context } from './image.1.js';\nimport { Image2ProfileSchema, Image2Context } from './image.2.js';\nimport { Image3ProfileSchema } from './image.3.js';\nimport { ImageServiceTypesSchema } from './shared.js';\n// TODO: also support Presentation API 2 with Image API 3\n// TODO: also support Image3Context (a string or an array of strings)\nexport const ImageService2Schema = z.object({\n    '@id': z.string().url(),\n    '@type': ImageServiceTypesSchema.optional(),\n    profile: z.union([\n        Image1ProfileSchema,\n        Image2ProfileSchema,\n        Image3ProfileSchema\n    ]),\n    width: z.number().int().optional(),\n    height: z.number().int().optional(),\n    '@context': z\n        .union([\n        Image1Context,\n        z.literal('http://iiif.io/api/image/1/context.json'),\n        Image2Context\n    ])\n        .optional()\n});\n", "import { z } from 'zod';\nimport { Image2ProfileSchema } from './image.2.js';\nimport { ImageServiceTypesSchema } from './shared.js';\nexport const complianceLevels = ['level0', 'level1', 'level2'];\nexport const Presentation3ImageService2Schema = z.union([\n    z.object({\n        id: z.string().url(),\n        type: z.literal('ImageService2'),\n        profile: Image2ProfileSchema\n    }),\n    z.object({\n        '@id': z.string().url(),\n        '@type': z.literal('ImageService2'),\n        profile: Image2ProfileSchema\n    })\n]);\nexport const Presentation3ImageService3Schema = z.object({\n    id: z.string().url(),\n    type: ImageServiceTypesSchema,\n    profile: z.enum(complianceLevels)\n});\nexport const ImageService3Schema = z.union([\n    Presentation3ImageService2Schema,\n    Presentation3ImageService3Schema\n]);\n", "import { z } from 'zod';\nimport { ImageService2Schema } from './image-service.2.js';\nimport { ImageService3Schema } from './image-service.3.js';\n// TODO: it seems we don't need ImageServiceSchema, we can use Image.2.ts and Image.3.ts instead\nexport const ImageServiceSchema = z.union([\n    ImageService2Schema,\n    ImageService3Schema\n]);\n", "import { z } from 'zod';\nexport const LanguageString3Schema = z.record(z.string(), z.string().array());\nexport const MetadataStringItem3Schema = z.object({\n    label: LanguageString3Schema.optional(),\n    value: LanguageString3Schema.optional()\n});\nexport function ensureArray(val) {\n    if (val) {\n        return Array.isArray(val) ? val : [val];\n    }\n}\nexport function parseVersion2String(str) {\n    // TODO: use type guards!\n    if (typeof str === 'string') {\n        return {\n            none: [str]\n        };\n    }\n    else if (Array.isArray(str)) {\n        let strings = {};\n        str.forEach((item) => {\n            if (typeof item === 'string') {\n                if (!strings['none']) {\n                    strings['none'] = [];\n                }\n                strings['none'].push(item);\n            }\n            else if (typeof item === 'object') {\n                // TODO: find test input data for this scenario\n                strings = { ...strings, ...parseVersion2String(item) };\n            }\n            else {\n                throw new Error('Unable to parse string');\n            }\n        });\n        return strings;\n    }\n    else if (str && typeof str === 'object') {\n        str;\n        const language = str['@language'] || 'none';\n        const valueOrValues = str['@value'] || '';\n        return {\n            [language]: Array.isArray(valueOrValues) ? valueOrValues : [valueOrValues]\n        };\n    }\n}\nexport function parseVersion3String(str) {\n    if (!str) {\n        return;\n    }\n    const parsedStr = {};\n    for (const language in str) {\n        parsedStr[language] = str[language];\n    }\n    return parsedStr;\n}\nexport function parseMetadata2Item(item) {\n    if (item) {\n        const label = parseVersion2String(item.label);\n        const value = parseVersion2String(item.value);\n        if (label && value) {\n            return { label, value };\n        }\n    }\n}\nexport function parseMetadata3Item(item) {\n    if (item) {\n        const label = parseVersion3String(item.label);\n        const value = parseVersion3String(item.value);\n        if (label && value) {\n            return { label, value };\n        }\n    }\n}\nexport function isValidMetadataItem(item) {\n    return item !== undefined;\n}\nexport function parseVersion2Metadata(metadata) {\n    if (Array.isArray(metadata)) {\n        if (metadata.length === 0) {\n            return undefined;\n        }\n        return metadata.map(parseMetadata2Item).filter(isValidMetadataItem);\n    }\n    else if (!metadata) {\n        return undefined;\n    }\n    else {\n        throw new Error('Unable to parse metadata');\n    }\n}\nexport function parseVersion3Metadata(metadata) {\n    if (Array.isArray(metadata)) {\n        if (metadata.length === 0) {\n            return undefined;\n        }\n        return metadata.map(parseMetadata3Item).filter(isValidMetadataItem);\n    }\n    else if (!metadata) {\n        return undefined;\n    }\n    else {\n        throw new Error('Unable to parse metadata');\n    }\n}\nexport function parseVersion2Attribution(attribution) {\n    if (attribution) {\n        if (typeof attribution === 'string') {\n            return {\n                label: {\n                    none: ['Attribution']\n                },\n                value: {\n                    none: [attribution]\n                }\n            };\n        }\n        else {\n            const value = parseVersion2String(attribution);\n            if (value) {\n                return {\n                    label: {\n                        none: ['Attribution']\n                    },\n                    value\n                };\n            }\n        }\n    }\n}\nexport function parseVersion2Thumbnail(thumbnail2) {\n    return thumbnail2?.map((thumbnail) => {\n        if (typeof thumbnail === 'string') {\n            return {\n                id: thumbnail\n            };\n        }\n        else {\n            return {\n                id: thumbnail['@id'],\n                type: thumbnail['@type'],\n                format: thumbnail.format,\n                width: thumbnail.width,\n                height: thumbnail.height\n            };\n        }\n    });\n}\nexport function parseVersion2Rendering(rendering2) {\n    return rendering2?.map((rendering) => ({\n        id: rendering['@id'],\n        type: rendering['@type'],\n        label: parseVersion2String(rendering.label),\n        format: rendering.format\n    }));\n}\nexport function parseVersion2Related(related) {\n    if (related) {\n        if (typeof related === 'string') {\n            return [\n                {\n                    id: related\n                }\n            ];\n        }\n        else if (Array.isArray(related)) {\n            return related.map((item) => {\n                return {\n                    id: item['@id'],\n                    label: parseVersion2String(item.label),\n                    format: item.format\n                };\n            });\n        }\n        else {\n            return [\n                {\n                    id: related['@id'],\n                    label: parseVersion2String(related.label),\n                    format: related.format\n                }\n            ];\n        }\n    }\n}\n", "// Presentation API 2.1 - Manifest\n// https://iiif.io/api/presentation/2.1/#manifest\nimport { z } from 'zod';\nimport { ImageServiceSchema } from './image-service.js';\nimport { NavPlaceSchema, NavDateSchema } from '../schemas/shared.js';\nimport { ensureArray } from '../lib/convert.js';\nexport const SingleValue2Schema = z\n    .union([z.string(), z.number(), z.boolean()])\n    .transform((val) => String(val));\nexport const Value2Schema = z.union([\n    SingleValue2Schema.array(),\n    SingleValue2Schema\n]);\nexport const RelatedItem2Schema = z.object({\n    '@id': z.string().url(),\n    format: z.string().optional(),\n    label: Value2Schema.optional()\n});\nexport const Related2Schema = z.union([\n    RelatedItem2Schema.array(),\n    RelatedItem2Schema,\n    SingleValue2Schema\n]);\nexport const ThumbnailItem2Schema = z.union([\n    z.string(),\n    z.object({\n        '@id': z.string().url(),\n        '@type': z.string().optional(),\n        format: z.string().optional(),\n        height: z.number().optional(),\n        width: z.number().optional()\n    })\n]);\nexport const Thumbnail2Schema = z\n    .union([ThumbnailItem2Schema.array(), ThumbnailItem2Schema])\n    .transform(ensureArray);\nexport const RenderingItem2Schema = z.object({\n    '@id': z.string().url(),\n    '@type': z.string().optional(),\n    label: Value2Schema.optional(),\n    format: z.string().optional()\n});\nexport const Rendering2Schema = z\n    .union([RenderingItem2Schema.array(), RenderingItem2Schema])\n    .transform(ensureArray);\nconst ValidLanguageValue2Schema = z\n    .union([\n    z.object({ '@value': Value2Schema, '@language': z.string().optional() }),\n    // This is invalid but some IIIF manifests use this incorrect format\n    z.object({ value: Value2Schema, language: z.string().optional() })\n])\n    .transform((val) => {\n    if ('value' in val) {\n        return {\n            '@value': val.value,\n            '@language': val.language\n        };\n    }\n    else {\n        return val;\n    }\n});\nexport const LanguageValue2Schema = ValidLanguageValue2Schema;\nexport const PossibleLanguageValue2Schema = z.union([\n    LanguageValue2Schema.array(),\n    LanguageValue2Schema,\n    Value2Schema\n]);\nexport const Attribution2Schema = z.union([\n    z.string(),\n    PossibleLanguageValue2Schema\n]);\nconst ValidMetadataItem2Schema = z.object({\n    label: PossibleLanguageValue2Schema.optional(),\n    value: PossibleLanguageValue2Schema.optional()\n});\nexport const MetadataItem2Schema = z\n    .union([\n    ValidMetadataItem2Schema,\n    // Catchall for incorrect values\n    z.any()\n])\n    .transform((val) => {\n    const { success, data } = ValidMetadataItem2Schema.safeParse(val);\n    if (success) {\n        return data;\n    }\n});\nexport const Metadata2Schema = MetadataItem2Schema.array();\nexport const ImageResource2Schema = z.object({\n    width: z.number().int().optional(),\n    height: z.number().int().optional(),\n    service: ImageServiceSchema\n});\nexport const Annotation2Schema = z.object({\n    resource: ImageResource2Schema\n});\nexport const Canvas2Schema = z.object({\n    '@id': z.string().url(),\n    '@type': z.literal('sc:Canvas'),\n    width: z.number().int(),\n    height: z.number().int(),\n    images: Annotation2Schema.array().length(1),\n    label: PossibleLanguageValue2Schema.optional(),\n    description: PossibleLanguageValue2Schema.optional(),\n    related: Related2Schema.optional(),\n    attribution: Attribution2Schema.optional(),\n    thumbnail: Thumbnail2Schema.optional(),\n    rendering: Rendering2Schema.optional(),\n    metadata: Metadata2Schema.optional(),\n    navDate: NavDateSchema.optional(),\n    navPlace: NavPlaceSchema.optional()\n});\nconst Sequence2Schema = z.object({\n    canvases: Canvas2Schema.array().nonempty()\n});\nexport const Manifest2Schema = z.object({\n    '@id': z.string().url(),\n    '@type': z.literal('sc:Manifest'),\n    sequences: Sequence2Schema.array().length(1),\n    label: PossibleLanguageValue2Schema.optional(),\n    description: PossibleLanguageValue2Schema.optional(),\n    metadata: Metadata2Schema.optional(),\n    related: Related2Schema.optional(),\n    attribution: Attribution2Schema.optional(),\n    rendering: Rendering2Schema.optional(),\n    thumbnail: Thumbnail2Schema.optional(),\n    navDate: NavDateSchema.optional(),\n    navPlace: NavPlaceSchema.optional()\n});\n// @ts-expect-error - Lazy type is not correctly inferred\nexport const EmbeddedManifest2Schema = z.lazy(() => z.object({\n    '@id': z.string().url(),\n    '@type': z.literal('sc:Manifest'),\n    label: PossibleLanguageValue2Schema.optional()\n}));\n// @ts-expect-error - Lazy type is not correctly inferred\nexport const Collection2Schema = z.lazy(() => z.object({\n    '@id': z.string().url(),\n    '@type': z.literal('sc:Collection'),\n    manifests: EmbeddedManifest2Schema.array().optional(),\n    collections: Collection2Schema.array().optional(),\n    members: z\n        .union([\n        EmbeddedManifest2Schema,\n        Collection2Schema,\n        EmbeddedCollection2Schema\n    ])\n        .array()\n        .optional(),\n    label: PossibleLanguageValue2Schema.optional(),\n    description: PossibleLanguageValue2Schema.optional(),\n    metadata: Metadata2Schema.optional(),\n    related: Related2Schema.optional(),\n    attribution: Attribution2Schema.optional(),\n    thumbnail: Thumbnail2Schema.optional(),\n    rendering: Rendering2Schema.optional(),\n    navDate: NavDateSchema.optional(),\n    navPlace: NavPlaceSchema.optional()\n}));\nexport const EmbeddedCollection2Schema = z.object({\n    '@id': z.string().url(),\n    '@type': z.literal('sc:Collection'),\n    label: PossibleLanguageValue2Schema.optional()\n});\n", "// Presentation API 3.0 - Manifest\n// https://iiif.io/api/presentation/3.0/#52-manifest\nimport { z } from 'zod';\nimport { ImageServiceSchema } from './image-service.js';\nimport { NavDateSchema, NavPlaceSchema } from '../schemas/shared.js';\nimport { ensureArray } from '../lib/convert.js';\nexport const SingleValue3Schema = z\n    .union([z.string(), z.number(), z.boolean()])\n    .transform((val) => String(val));\nexport const LanguageValue3Schema = z.record(z.string(), SingleValue3Schema.array());\nexport const Summary3Schema = LanguageValue3Schema;\nexport const HomepageItem3Schema = z.object({\n    id: z.string().url(),\n    type: z.string().optional(),\n    label: LanguageValue3Schema,\n    format: z.string().optional(),\n    language: z.union([z.string(), z.array(z.string())]).optional()\n});\nexport const Rendering3ItemSchema = z.object({\n    id: z.string().url(),\n    type: z.string().optional(),\n    label: LanguageValue3Schema,\n    format: z.string().optional()\n});\nexport const Rendering3Schema = z\n    .union([Rendering3ItemSchema.array(), Rendering3ItemSchema])\n    .transform(ensureArray);\nexport const Homepage3Schema = z\n    .union([HomepageItem3Schema.array(), HomepageItem3Schema])\n    .transform(ensureArray);\nexport const ThumbnailItem3Schema = z.object({\n    id: z.string().url(),\n    type: z.string().optional(),\n    format: z.string().optional(),\n    width: z.number().int().optional(),\n    height: z.number().int().optional()\n});\nexport const Thumbnail3Schema = z\n    .union([ThumbnailItem3Schema.array(), ThumbnailItem3Schema])\n    .transform(ensureArray);\nexport const SeeAlsoItem3Schema = z.object({\n    id: z.string().url(),\n    type: z.string().optional(),\n    format: z.string().optional(),\n    profile: z.string().optional()\n});\nexport const SeeAlso3Schema = z\n    .union([SeeAlsoItem3Schema.array(), SeeAlsoItem3Schema])\n    .transform(ensureArray);\nexport const NonPaintingAnnotations3 = z\n    .object({\n    id: z.string().url(),\n    type: z.literal('AnnotationPage'),\n    items: z.object({}).passthrough().array().optional()\n})\n    .array();\nconst ValidMetadataItem3Schema = z.object({\n    label: LanguageValue3Schema,\n    value: LanguageValue3Schema\n});\nexport const MetadataItem3Schema = z\n    .union([\n    ValidMetadataItem3Schema,\n    // Catchall for incorrect values\n    z.any()\n])\n    .transform((val) => {\n    const { success, data } = ValidMetadataItem3Schema.safeParse(val);\n    if (success) {\n        return data;\n    }\n});\nexport const Metadata3Schema = MetadataItem3Schema.array();\nexport const RequiredStatement3Schema = MetadataItem3Schema;\nexport const AnnotationBody3Schema = z.object({\n    type: z.literal('Image'),\n    width: z.number().int().optional(),\n    height: z.number().int().optional(),\n    service: ImageServiceSchema.array()\n});\nconst Choice3Schema = z.object({\n    type: z.literal('Choice'),\n    items: AnnotationBody3Schema.array()\n});\nconst Annotation3Schema = z.object({\n    type: z.literal('Annotation'),\n    body: z.union([\n        AnnotationBody3Schema,\n        AnnotationBody3Schema.array().length(1),\n        Choice3Schema\n    ])\n});\nconst AnnotationPage3Schema = z.object({\n    type: z.literal('AnnotationPage'),\n    items: Annotation3Schema.array().length(1)\n});\nexport const Canvas3Schema = z.object({\n    id: z.string().url(),\n    type: z.literal('Canvas'),\n    width: z.number().int(),\n    height: z.number().int(),\n    items: AnnotationPage3Schema.array().length(1),\n    label: LanguageValue3Schema.optional(),\n    description: LanguageValue3Schema.optional(),\n    metadata: Metadata3Schema.optional(),\n    navDate: NavDateSchema.optional(),\n    navPlace: NavPlaceSchema.optional(),\n    homepage: Homepage3Schema.optional(),\n    thumbnail: Thumbnail3Schema.optional(),\n    rendering: Rendering3Schema.optional(),\n    seeAlso: SeeAlso3Schema.optional(),\n    summary: Summary3Schema.optional(),\n    requiredStatement: RequiredStatement3Schema.optional(),\n    annotations: NonPaintingAnnotations3.optional()\n});\nexport const Manifest3Schema = z.object({\n    id: z.string().url(),\n    type: z.literal('Manifest'),\n    items: Canvas3Schema.array().nonempty(),\n    label: LanguageValue3Schema.optional(),\n    description: LanguageValue3Schema.optional(),\n    metadata: Metadata3Schema.optional(),\n    navDate: NavDateSchema.optional(),\n    navPlace: NavPlaceSchema.optional(),\n    homepage: Homepage3Schema.optional(),\n    thumbnail: Thumbnail3Schema.optional(),\n    rendering: Rendering3Schema.optional(),\n    seeAlso: SeeAlso3Schema.optional(),\n    summary: Summary3Schema.optional(),\n    requiredStatement: RequiredStatement3Schema.optional(),\n    annotations: NonPaintingAnnotations3.optional()\n});\n// @ts-expect-error - Lazy type is not correctly inferred\nexport const EmbeddedManifest3Schema = z.lazy(() => z.object({\n    id: z.string().url(),\n    type: z.literal('Manifest'),\n    label: LanguageValue3Schema.optional()\n}));\n// @ts-expect-error - Lazy type is not correctly inferred\nexport const Collection3Schema = z.lazy(() => z.object({\n    id: z.string().url(),\n    type: z.literal('Collection'),\n    items: z\n        .union([\n        EmbeddedManifest3Schema,\n        Collection3Schema,\n        EmbeddedCollection3Schema\n    ])\n        .array(),\n    label: LanguageValue3Schema.optional(),\n    description: LanguageValue3Schema.optional(),\n    metadata: Metadata3Schema.optional(),\n    navDate: NavDateSchema.optional(),\n    navPlace: NavPlaceSchema.optional(),\n    homepage: Homepage3Schema.optional(),\n    thumbnail: Thumbnail3Schema.optional(),\n    rendering: Rendering3Schema.optional(),\n    seeAlso: SeeAlso3Schema.optional(),\n    summary: Summary3Schema.optional(),\n    requiredStatement: RequiredStatement3Schema.optional(),\n    annotations: NonPaintingAnnotations3.optional()\n}));\nexport const EmbeddedCollection3Schema = z.object({\n    id: z.string().url(),\n    type: z.literal('Collection'),\n    label: LanguageValue3Schema.optional()\n});\n", "import { z } from 'zod';\nimport { Image1Schema } from './image.1.js';\nimport { Image2Schema } from './image.2.js';\nimport { Image3Schema } from './image.3.js';\nimport { Canvas2Schema, Manifest2Schema, Collection2Schema } from './presentation.2.js';\nimport { Canvas3Schema, Manifest3Schema, Collection3Schema } from './presentation.3.js';\nexport { Image1Schema, Image2Schema, Image3Schema };\nexport { Canvas2Schema, Canvas3Schema };\nexport { Manifest2Schema, Manifest3Schema };\nexport { Collection2Schema, Collection3Schema };\nexport const ImageSchema = z.union([Image1Schema, Image2Schema, Image3Schema]);\nexport const CanvasSchema = z.union([Canvas2Schema, Canvas3Schema]);\nexport const ManifestSchema = z.union([Manifest2Schema, Manifest3Schema]);\nexport const CollectionSchema = z.union([Collection2Schema, Collection3Schema]);\nexport const IIIF1Schema = Image1Schema;\nexport const IIIF2Schema = z.union([\n    Collection2Schema,\n    Manifest2Schema,\n    Canvas2Schema,\n    Image2Schema\n]);\nexport const IIIF3Schema = z.union([\n    Collection3Schema,\n    Manifest3Schema,\n    Canvas3Schema,\n    Image3Schema\n]);\nexport const IIIFSchema = z.union([IIIF1Schema, IIIF2Schema, IIIF3Schema]);\n", "export function getTileImageRequest({ width: imageWidth, height: imageHeight }, zoomLevel, column, row) {\n    // See https://iiif.io/api/image/3.0/implementation/#3-tile-region-parameter-calculation\n    const regionX = column * zoomLevel.originalWidth;\n    const regionY = row * zoomLevel.originalHeight;\n    const regionWidth = column * zoomLevel.originalWidth + zoomLevel.width * zoomLevel.scaleFactor >\n        imageWidth\n        ? imageWidth - column * zoomLevel.originalWidth\n        : zoomLevel.width * zoomLevel.scaleFactor;\n    const regionHeight = row * zoomLevel.originalHeight + zoomLevel.height * zoomLevel.scaleFactor >\n        imageHeight\n        ? imageHeight - row * zoomLevel.originalHeight\n        : zoomLevel.height * zoomLevel.scaleFactor;\n    let tileWidth = zoomLevel.width;\n    let tileHeight = zoomLevel.height;\n    if (regionX + zoomLevel.width * zoomLevel.scaleFactor > imageWidth) {\n        tileWidth = Math.floor((imageWidth - regionX + zoomLevel.scaleFactor - 1) / zoomLevel.scaleFactor);\n    }\n    if (regionY + zoomLevel.height * zoomLevel.scaleFactor > imageHeight) {\n        tileHeight = Math.floor((imageHeight - regionY + zoomLevel.scaleFactor - 1) /\n            zoomLevel.scaleFactor);\n    }\n    return {\n        region: {\n            x: regionX,\n            y: regionY,\n            width: regionWidth,\n            height: regionHeight\n        },\n        size: {\n            width: tileWidth,\n            height: tileHeight\n        }\n    };\n}\nfunction getDefaultTileset({ width: imageWidth, height: imageHeight }, tileWidth = 768) {\n    const maxTilesPerSide = Math.max(imageWidth, imageHeight) / tileWidth;\n    const maxExponent = Math.ceil(Math.log(maxTilesPerSide) / Math.log(2));\n    // let maxTileSide\n    // if (parsedImage.maxWidth) {\n    //   maxTileSide = parsedImage.maxWidth\n    // }\n    // if (parsedImage.maxHeight) {\n    //   maxTileSide = maxTileSide\n    //     ? Math.min(maxTileSide, parsedImage.maxHeight)\n    //     : parsedImage.maxHeight\n    // }\n    // if (parsedImage.maxArea) {\n    //   maxTileSide = maxTileSide\n    //     ? Math.min(maxTileSide, Math.sqrt(parsedImage.maxArea))\n    //     : Math.sqrt(parsedImage.maxArea)\n    // }\n    return {\n        scaleFactors: Array.from({ length: maxExponent }, (_, exponent) => 2 ** exponent),\n        // .filter((scaleFactor) => {\n        //   if (maxTileSide) {\n        //     return tileWidth * scaleFactor <= maxTileSide\n        //   } else {\n        //     return true\n        //   }\n        // }),\n        width: tileWidth\n    };\n}\nfunction getTileZoomLevelFromScaleFactor({ width: imageWidth, height: imageHeight }, tileset, scaleFactor) {\n    const height = tileset.height || tileset.width;\n    const originalWidth = tileset.width * scaleFactor;\n    const originalHeight = height * scaleFactor;\n    return {\n        scaleFactor,\n        width: tileset.width,\n        height,\n        originalWidth,\n        originalHeight,\n        columns: Math.ceil(imageWidth / originalWidth),\n        rows: Math.ceil(imageHeight / originalHeight)\n    };\n}\nfunction getTileZoomLevelsFromTilesets(imageSize, tilesets) {\n    return tilesets\n        .map((tileset) => tileset.scaleFactors.map((scaleFactor) => getTileZoomLevelFromScaleFactor(imageSize, tileset, scaleFactor)))\n        .flat();\n}\nfunction hasValidTileset(tilesets) {\n    if (tilesets.some((tileset) => tileset.width && tileset.scaleFactors && tileset.scaleFactors.length)) {\n        return true;\n    }\n    return false;\n}\nexport function getTileZoomLevels(imageSize, tilesets, supportsAnyRegionAndSize) {\n    if (!tilesets || !hasValidTileset(tilesets)) {\n        if (supportsAnyRegionAndSize) {\n            tilesets = [getDefaultTileset(imageSize)];\n        }\n        else {\n            throw new Error('Image does not support tiles or custom regions and sizes.');\n        }\n    }\n    return getTileZoomLevelsFromTilesets(imageSize, tilesets);\n}\n", "import { getTileImageRequest } from './tiles.js';\nfunction getImageRequestSize(imageSize, containerSize, mode = 'cover') {\n    if (mode === 'cover' || mode === 'contain') {\n        const widthRatio = containerSize.width / imageSize.width;\n        const heightRatio = containerSize.height / imageSize.height;\n        const ratio = mode === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const width = imageSize.width * ratio;\n        const height = imageSize.height * ratio;\n        return {\n            width,\n            height\n        };\n    }\n    else {\n        throw new Error('Mode must be either \"cover\" or \"contain\"');\n    }\n}\nconst maxThumbnailDownscale = 0.8;\nconst maxThumbnailUpscale = 1.5;\nexport function getImageRequest(imageSize, containerSize, mode = 'cover', { sizes, tileZoomLevels, supportsAnyRegionAndSize, maxWidth, maxHeight, maxArea }) {\n    let { width, height } = getImageRequestSize(imageSize, containerSize, mode);\n    if (maxWidth && width > maxWidth) {\n        height = (height / width) * maxWidth;\n        width = maxWidth;\n    }\n    if (maxHeight && height > maxHeight) {\n        width = (width / height) * maxHeight;\n        height = maxHeight;\n    }\n    if (maxArea && width * height > maxArea) {\n        const aspectRatio = height / width;\n        const thumbnailMaxWidth = Math.floor(Math.sqrt(maxArea / aspectRatio));\n        const thumbnailMaxHeight = thumbnailMaxWidth * aspectRatio;\n        width = Math.floor(thumbnailMaxHeight) / aspectRatio;\n        height = width * aspectRatio;\n    }\n    const aspectRatio = imageSize.width / imageSize.height;\n    width = Math.floor(width);\n    height = Math.round(width / aspectRatio);\n    if (sizes) {\n        let matchingSize;\n        for (const size of sizes) {\n            const scaleFactor = size.width / width;\n            if (scaleFactor >= maxThumbnailDownscale &&\n                scaleFactor <= maxThumbnailUpscale) {\n                matchingSize = size;\n                break;\n            }\n        }\n        if (matchingSize) {\n            return {\n                size: matchingSize\n            };\n        }\n    }\n    if (supportsAnyRegionAndSize) {\n        // TODO: can request smaller region than full\n        return {\n            size: {\n                width: Math.round(width),\n                height: Math.round(height)\n            }\n        };\n    }\n    if (tileZoomLevels) {\n        // TODO: take maxThumbnailDownscale and maxThumbnailUpscale into account\n        const ratio = imageSize.width / width;\n        const nearestZoomLevels = tileZoomLevels\n            .map(({ scaleFactor }, index) => ({\n            index,\n            scaleFactor,\n            diff: Math.abs(scaleFactor - ratio)\n        }))\n            .sort((a, b) => a.diff - b.diff);\n        const zoomLevel = tileZoomLevels[nearestZoomLevels[0].index];\n        const tilesX = Math.ceil(imageSize.width / (zoomLevel.scaleFactor * tileZoomLevels[0].width));\n        const tilesY = Math.ceil(imageSize.height / (zoomLevel.scaleFactor * tileZoomLevels[0].height));\n        const thumbnailTiles = [];\n        for (let y = 0; y < tilesY; y++) {\n            const thumbnailRow = [];\n            for (let x = 0; x < tilesX; x++) {\n                const thumbnailTile = getTileImageRequest(imageSize, zoomLevel, x, y);\n                thumbnailRow.push(thumbnailTile);\n            }\n            thumbnailTiles.push(thumbnailRow);\n        }\n        return thumbnailTiles;\n    }\n    throw new Error('Unable to create thumbnail');\n}\n", "import { image1ProfileUriRegex, Image1ContextString, Image1ContextStringIncorrect } from '../schemas/image.1.js';\nimport { image2ProfileUriRegex, Image2ContextString } from '../schemas/image.2.js';\nconst anyRegionAndSizeFeatures = ['regionByPx', 'sizeByWh'];\nfunction parseImage1ProfileUri(uri) {\n    const match = uri.match(image1ProfileUriRegex);\n    if (match && match.groups) {\n        const level = parseInt(match.groups.level);\n        return level;\n    }\n}\nfunction parseImage2ProfileUri(uri) {\n    const match = uri.match(image2ProfileUriRegex);\n    if (match && match.groups) {\n        const level = parseInt(match.groups.level);\n        return level;\n    }\n}\nfunction parseImage2ProfileDescription(parsedProfileDescription) {\n    return {\n        maxWidth: parsedProfileDescription?.maxWidth,\n        maxHeight: parsedProfileDescription?.maxHeight,\n        maxArea: parsedProfileDescription?.maxArea,\n        supportsAnyRegionAndSize: anyRegionAndSizeFeatures.every((feature) => parsedProfileDescription?.supports &&\n            parsedProfileDescription?.supports?.includes(feature))\n    };\n}\nexport function getMajorIiifVersionFromImageService(imageService) {\n    if ('type' in imageService && imageService.type === 'ImageService3') {\n        return 3;\n    }\n    else if (('type' in imageService && imageService.type === 'ImageService2') ||\n        ('@type' in imageService && imageService['@type'] === 'ImageService2') ||\n        ('@context' in imageService &&\n            imageService['@context'] === Image2ContextString)) {\n        return 2;\n    }\n    else if ('@context' in imageService &&\n        (imageService['@context'] === Image1ContextString ||\n            imageService['@context'] === Image1ContextStringIncorrect)) {\n        return 1;\n    }\n    else if ('profile' in imageService) {\n        let profile;\n        if (Array.isArray(imageService.profile)) {\n            profile = imageService.profile[0];\n        }\n        else {\n            profile = imageService.profile;\n        }\n        if (profile.match(image1ProfileUriRegex)) {\n            return 1;\n        }\n        else if (profile.match(image2ProfileUriRegex)) {\n            return 2;\n        }\n        else {\n            return 3;\n        }\n    }\n    else {\n        throw new Error('Unsupported IIIF Image Service');\n    }\n}\nexport function getProfileProperties(parsedImage) {\n    // TODO: this function is very messy and needs cleaning up.\n    // Probably also needs a better way to keep ImageService and ImageInfo apart.\n    if ('type' in parsedImage || '@type' in parsedImage) {\n        const profile = parsedImage.profile;\n        let supportsAnyRegionAndSize = false;\n        if (profile === 'level0' ||\n            (typeof profile === 'string' && profile.endsWith('level0.json'))) {\n            if ('extraFeatures' in parsedImage) {\n                supportsAnyRegionAndSize = anyRegionAndSizeFeatures.every((feature) => parsedImage.extraFeatures &&\n                    parsedImage.extraFeatures.includes(feature));\n            }\n        }\n        else {\n            supportsAnyRegionAndSize = true;\n        }\n        return {\n            maxWidth: 'maxWidth' in parsedImage ? parsedImage.maxWidth : undefined,\n            maxHeight: 'maxHeight' in parsedImage ? parsedImage.maxHeight : undefined,\n            maxArea: 'maxArea' in parsedImage ? parsedImage.maxArea : undefined,\n            supportsAnyRegionAndSize\n        };\n    }\n    else if (Array.isArray(parsedImage.profile)) {\n        let supportsAnyRegionAndSize = false;\n        let maxHeight = Number.NEGATIVE_INFINITY;\n        let maxWidth = Number.NEGATIVE_INFINITY;\n        let maxArea = Number.NEGATIVE_INFINITY;\n        parsedImage.profile.forEach((profile) => {\n            if (typeof profile === 'string') {\n                const profileLevel = parseImage2ProfileUri(profile);\n                if (profileLevel) {\n                    supportsAnyRegionAndSize =\n                        supportsAnyRegionAndSize || profileLevel >= 1;\n                }\n            }\n            else {\n                const { maxWidth: profileMaxWidth, maxHeight: profileMaxHeight, maxArea: profileMaxArea, supportsAnyRegionAndSize: profileSupportsAnyRegionAndSize } = parseImage2ProfileDescription(profile);\n                if (profileMaxWidth !== undefined) {\n                    maxWidth = Math.max(profileMaxWidth, maxWidth);\n                }\n                if (profileMaxHeight !== undefined) {\n                    maxHeight = Math.max(profileMaxHeight, maxHeight);\n                }\n                if (profileMaxArea !== undefined) {\n                    maxArea = Math.max(profileMaxArea, maxArea);\n                }\n                supportsAnyRegionAndSize =\n                    supportsAnyRegionAndSize || profileSupportsAnyRegionAndSize;\n            }\n        });\n        return {\n            maxWidth: maxWidth >= 0 ? maxWidth : undefined,\n            maxHeight: maxHeight >= 0 ? maxHeight : undefined,\n            maxArea: maxArea >= 0 ? maxArea : undefined,\n            supportsAnyRegionAndSize\n        };\n    }\n    else if ('profile' in parsedImage && parsedImage.profile) {\n        const profileLevel1 = parseImage1ProfileUri(parsedImage.profile);\n        const profileLevel2 = parseImage2ProfileUri(parsedImage.profile);\n        if (profileLevel1) {\n            return {\n                supportsAnyRegionAndSize: profileLevel1 >= 1\n            };\n        }\n        else if (profileLevel2) {\n            return {\n                supportsAnyRegionAndSize: profileLevel2 >= 1\n            };\n        }\n        else {\n            return {\n                supportsAnyRegionAndSize: false\n            };\n        }\n    }\n    else {\n        throw new Error('Invalid Image');\n    }\n}\n", "import { Image1Schema, Image2Schema, Image3Schema, ImageSchema } from '../schemas/iiif.js';\nimport { Image1ContextString, Image1ContextStringIncorrect, image1ProfileUriRegex } from '../schemas/image.1.js';\nimport { Image2ContextString, image2ProfileUriRegex } from '../schemas/image.2.js';\nimport { getTileZoomLevels, getTileImageRequest } from '../lib/tiles.js';\nimport { getImageRequest } from '../lib/image-requests.js';\nimport { getProfileProperties, getMajorIiifVersionFromImageService } from '../lib/profile.js';\nconst ImageTypeString = 'image';\n/**\n * Parsed IIIF Image, embedded in a Canvas\n *\n * @property embedded - Whether the Image is embedded in a Canvas\n * @property type - Resource type, equals 'image'\n * @property uri - URI of Image\n * @property majorVersion - IIIF API version of Image\n * @property supportsAnyRegionAndSize - Whether the associated Image Service supports any region and size\n * @property maxWidth - Maximum width of the associated Image Service\n * @property maxHeight - Maximum height of the associated Image Service\n * @property maxArea - Maximum area of the associated Image Service\n * @property width - Width of Image\n * @property height - Height of Image\n */\nexport class EmbeddedImage {\n    embedded = true;\n    uri;\n    type = ImageTypeString;\n    maxWidth;\n    maxHeight;\n    maxArea;\n    supportsAnyRegionAndSize;\n    width;\n    height;\n    majorVersion;\n    constructor(...args) {\n        const parsedImage = args[0];\n        const parsedCanvas = args[1];\n        if (args.length === 2) {\n            const parsedEmbeddedImage = args[0];\n            let imageService;\n            let majorVersion;\n            if (Array.isArray(parsedEmbeddedImage.service)) {\n                parsedEmbeddedImage.service.forEach((currentImageService) => {\n                    try {\n                        const currentMajorVersion = getMajorIiifVersionFromImageService(currentImageService);\n                        if (!majorVersion || currentMajorVersion > majorVersion) {\n                            majorVersion = currentMajorVersion;\n                            imageService = currentImageService;\n                        }\n                    }\n                    catch {\n                        // Ignore this error, throw error later if no valid image service is found\n                    }\n                });\n            }\n            else {\n                imageService = parsedEmbeddedImage.service;\n            }\n            if (!imageService) {\n                throw new Error('Unsupported IIIF Image Service');\n            }\n            if ('@id' in imageService) {\n                this.uri = imageService['@id'];\n            }\n            else if ('id' in imageService) {\n                this.uri = imageService.id;\n            }\n            else {\n                throw new Error('Unsupported IIIF Image Service');\n            }\n            if ('type' in imageService && imageService.type === 'ImageService3') {\n                this.majorVersion = 3;\n            }\n            else if (('type' in imageService && imageService.type === 'ImageService2') ||\n                ('@type' in imageService &&\n                    imageService['@type'] === 'ImageService2') ||\n                ('@context' in imageService &&\n                    imageService['@context'] === Image2ContextString)) {\n                this.majorVersion = 2;\n            }\n            else if ('@context' in imageService &&\n                (imageService['@context'] === Image1ContextString ||\n                    imageService['@context'] === Image1ContextStringIncorrect)) {\n                this.majorVersion = 1;\n            }\n            else if ('profile' in imageService) {\n                let profile;\n                if (Array.isArray(imageService.profile) &&\n                    imageService.profile.length > 0) {\n                    profile = imageService.profile[0];\n                }\n                else if (typeof imageService.profile === 'string') {\n                    profile = imageService.profile;\n                }\n                else {\n                    throw new Error('Unsupported IIIF Image Service');\n                }\n                if (profile.match(image1ProfileUriRegex)) {\n                    this.majorVersion = 1;\n                }\n                else if (profile.match(image2ProfileUriRegex)) {\n                    this.majorVersion = 2;\n                }\n                else {\n                    this.majorVersion = 3;\n                }\n            }\n            else {\n                throw new Error('Unsupported IIIF Image Service');\n            }\n            if ('profile' in imageService) {\n                const profileProperties = getProfileProperties(imageService);\n                this.supportsAnyRegionAndSize =\n                    profileProperties.supportsAnyRegionAndSize;\n                this.maxWidth = profileProperties.maxWidth;\n                this.maxHeight = profileProperties.maxHeight;\n                this.maxArea = profileProperties.maxArea;\n            }\n            else {\n                this.supportsAnyRegionAndSize = false;\n            }\n        }\n        else {\n            if ('@id' in parsedImage) {\n                this.uri = parsedImage['@id'];\n            }\n            else if ('id' in parsedImage) {\n                this.uri = parsedImage.id;\n            }\n            else {\n                throw new Error('Unsupported IIIF Image');\n            }\n            if ('type' in parsedImage && parsedImage.type === 'ImageService3') {\n                this.majorVersion = 3;\n            }\n            else if (('@type' in parsedImage && parsedImage['@type'] === 'iiif:Image') ||\n                ('@context' in parsedImage &&\n                    parsedImage['@context'] === Image2ContextString)) {\n                this.majorVersion = 2;\n            }\n            else if ('@context' in parsedImage &&\n                parsedImage['@context'] === Image1ContextString) {\n                this.majorVersion = 1;\n            }\n            else {\n                throw new Error('Unsupported IIIF Image');\n            }\n            if ('profile' in parsedImage) {\n                const profileProperties = getProfileProperties(parsedImage);\n                this.supportsAnyRegionAndSize =\n                    profileProperties.supportsAnyRegionAndSize;\n                this.maxWidth = profileProperties.maxWidth;\n                this.maxHeight = profileProperties.maxHeight;\n                this.maxArea = profileProperties.maxArea;\n            }\n            else {\n                this.supportsAnyRegionAndSize = false;\n            }\n        }\n        if (parsedImage.width !== undefined) {\n            this.width = parsedImage.width;\n        }\n        else if (parsedCanvas) {\n            this.width = parsedCanvas.width;\n        }\n        else {\n            throw new Error('Width not present on either Canvas or Image Resource');\n        }\n        if (parsedImage.height !== undefined) {\n            this.height = parsedImage.height;\n        }\n        else if (parsedCanvas) {\n            this.height = parsedCanvas.height;\n        }\n        else {\n            throw new Error('Height not present on either Canvas or Image Resource');\n        }\n    }\n    /**\n     * Generates a IIIF Image API URL for the requested region and size\n     * @param imageRequest - Image request object containing the desired region and size of the requested image\n     * @returns Image API URL that can be used to fetch the requested image\n     */\n    getImageUrl(imageRequest) {\n        const { region, size } = imageRequest;\n        let width;\n        let height;\n        let regionHeight;\n        let regionWidth;\n        let urlRegion;\n        if (region) {\n            urlRegion = `${region.x},${region.y},${region.width},${region.height}`;\n            regionHeight = region.height;\n            regionWidth = region.width;\n        }\n        else {\n            urlRegion = 'full';\n            regionHeight = this.height;\n            regionWidth = this.width;\n        }\n        let urlSize;\n        if (size) {\n            width = Math.round(size.width);\n            height = Math.round(size.height);\n            const widthStr = String(width);\n            let heightStr = String(height);\n            const aspectRatio = regionWidth / regionHeight;\n            const aspectRatioWidth = height * aspectRatio;\n            const aspectRatioHeight = aspectRatioWidth / aspectRatio;\n            if (this.majorVersion <= 2) {\n                // In IIIF Image API 2.1 and below, use\n                // \"the w, syntax for images that should be scaled maintaining the aspect ratio\"\n                // In version 3, use \"w,h if the size requested does not require upscaling\"\n                // See:\n                // - https://iiif.io/api/image/2.1/#canonical-uri-syntax\n                // - https://iiif.io/api/image/3.0/#48-canonical-uri-syntax\n                // And see also:\n                // - https://www.jack-reed.com/2016/10/14/rounding-strategies-used-in-iiif.html\n                if (height === Math.round(aspectRatioHeight)) {\n                    heightStr = '';\n                }\n            }\n            urlSize = `${widthStr},${heightStr}`;\n        }\n        else {\n            width = this.width;\n            height = this.height;\n            urlSize = this.majorVersion === 2 ? 'full' : 'max';\n        }\n        const area = width * height;\n        if (this.maxWidth !== undefined) {\n            if (width > this.maxWidth) {\n                throw new Error(`Width of requested image is too large: ${width} > ${this.maxWidth}`);\n            }\n        }\n        if (this.maxHeight !== undefined) {\n            if (height > this.maxHeight) {\n                throw new Error(`Height of requested image is too large: ${height} > ${this.maxHeight}`);\n            }\n        }\n        if (this.maxArea !== undefined) {\n            if (area > this.maxArea) {\n                throw new Error(`Area of requested image is too large: ${area} > ${this.maxArea}`);\n            }\n        }\n        const quality = this.majorVersion === 1 ? 'native' : 'default';\n        return `${this.uri}/${urlRegion}/${urlSize}/0/${quality}.jpg`;\n    }\n    getImageRequest(size, mode = 'cover') {\n        return getImageRequest({ width: this.width, height: this.height }, size, mode, {\n            supportsAnyRegionAndSize: this.supportsAnyRegionAndSize,\n            maxWidth: this.maxWidth,\n            maxHeight: this.maxHeight,\n            maxArea: this.maxArea\n        });\n    }\n}\n/**\n * Parsed IIIF Image\n * @property tileZoomLevels - Array of parsed tile zoom levels\n * @property sizes - Array of parsed sizes\n */\nexport class Image extends EmbeddedImage {\n    tileZoomLevels;\n    sizes;\n    embedded = false;\n    constructor(parsedImage) {\n        super(parsedImage);\n        const profileProperties = getProfileProperties(parsedImage);\n        let tilesets;\n        if ('tiles' in parsedImage) {\n            tilesets = parsedImage.tiles;\n        }\n        this.tileZoomLevels = getTileZoomLevels({ width: this.width, height: this.height }, tilesets, profileProperties.supportsAnyRegionAndSize);\n        if ('sizes' in parsedImage) {\n            this.sizes = parsedImage.sizes;\n        }\n    }\n    /**\n     * Parses a IIIF image and returns a [Image](#image) containing the parsed version\n     * @param iiifImage - Source data of IIIF Image\n     * @param majorVersion - IIIF API version of Image. If not provided, it will be determined automatically\n     * @returns Parsed IIIF Image\n     * @static\n     */\n    static parse(iiifImage, majorVersion = null) {\n        let parsedImage;\n        if (majorVersion === 1) {\n            parsedImage = Image1Schema.parse(iiifImage);\n        }\n        else if (majorVersion === 2) {\n            parsedImage = Image2Schema.parse(iiifImage);\n        }\n        else if (majorVersion === 3) {\n            parsedImage = Image3Schema.parse(iiifImage);\n        }\n        else {\n            parsedImage = ImageSchema.parse(iiifImage);\n        }\n        return new Image(parsedImage);\n    }\n    // TODO: rename this to getImageRequest\n    /**\n     * Returns a Image request object for a tile with the requested zoom level, column, and row\n     * @param zoomLevel - Desired zoom level of the requested tile\n     * @param column - Column of the requested tile\n     * @param row - Row of the requested tile\n     * @returns Image request object that can be used to fetch the requested tile\n     */\n    getTileImageRequest(zoomLevel, column, row) {\n        return getTileImageRequest({ width: this.width, height: this.height }, zoomLevel, column, row);\n    }\n    /**\n     * Returns a Image request object for the requested region and size\n     * @param size - Size of the requested thumbnail\n     * @param mode - Desired fit mode of the requested thumbnail\n     * @returns Image request object that can be used to fetch the requested thumbnail\n     */\n    getImageRequest(size, mode = 'cover') {\n        return getImageRequest({ width: this.width, height: this.height }, size, mode, {\n            supportsAnyRegionAndSize: this.supportsAnyRegionAndSize,\n            sizes: this.sizes,\n            tileZoomLevels: this.tileZoomLevels,\n            maxWidth: this.maxWidth,\n            maxHeight: this.maxHeight,\n            maxArea: this.maxArea\n        });\n    }\n}\n", "import { EmbeddedImage } from './image.js';\nimport { parseVersion2String, parseVersion3String, parseVersion2Metadata, parseVersion3Metadata, parseVersion2Attribution, parseVersion2Thumbnail, parseVersion2Rendering, parseVersion2Related } from '../lib/convert.js';\nconst CanvasTypeString = 'canvas';\n/**\n * Parsed IIIF Canvas\n *\n * @property uri - URI of Canvas\n * @property label - Label of Manifest\n * @property metadata - Metadata of Manifest\n * @property image - Image of painted on Canvas\n * @property height - Height of Canvas\n * @property width - Width of Canvas\n * @property type - Resource type, equals 'canvas'\n */\nexport class Canvas {\n    uri;\n    type = CanvasTypeString;\n    height;\n    width;\n    image;\n    label;\n    description;\n    metadata;\n    navDate;\n    navPlace;\n    homepage;\n    thumbnail;\n    rendering;\n    seeAlso;\n    summary;\n    requiredStatement;\n    annotations;\n    constructor(parsedCanvas) {\n        this.width = parsedCanvas.width;\n        this.height = parsedCanvas.height;\n        if ('@id' in parsedCanvas) {\n            // IIIF Presentation API 2.0\n            this.uri = parsedCanvas['@id'];\n            this.description = parseVersion2String(parsedCanvas.description);\n            this.label = parseVersion2String(parsedCanvas.label);\n            this.metadata = parseVersion2Metadata(parsedCanvas.metadata);\n            this.navDate = parsedCanvas.navDate;\n            this.navPlace = parsedCanvas.navPlace;\n            this.requiredStatement = parseVersion2Attribution(parsedCanvas.attribution);\n            this.thumbnail = parseVersion2Thumbnail(parsedCanvas.thumbnail);\n            this.rendering = parseVersion2Rendering(parsedCanvas.rendering);\n            this.homepage = parseVersion2Related(parsedCanvas.related);\n            this.image = new EmbeddedImage(parsedCanvas.images[0].resource, parsedCanvas);\n        }\n        else if ('id' in parsedCanvas) {\n            // IIIF Presentation API 3.0\n            this.uri = parsedCanvas.id;\n            this.label = parseVersion3String(parsedCanvas.label);\n            this.description = parseVersion3String(parsedCanvas.description);\n            this.metadata = parseVersion3Metadata(parsedCanvas.metadata);\n            this.navDate = parsedCanvas.navDate;\n            this.navPlace = parsedCanvas.navPlace;\n            this.homepage = parsedCanvas.homepage;\n            this.thumbnail = parsedCanvas.thumbnail;\n            this.rendering = parsedCanvas.rendering;\n            this.seeAlso = parsedCanvas.seeAlso;\n            this.summary = parsedCanvas.summary;\n            this.requiredStatement = parsedCanvas.requiredStatement;\n            this.annotations = parsedCanvas.annotations;\n            const annotationBodyOrBodies = parsedCanvas.items[0].items[0].body;\n            let annotationBody;\n            if (Array.isArray(annotationBodyOrBodies)) {\n                annotationBody = annotationBodyOrBodies[0];\n            }\n            else if (annotationBodyOrBodies.type === 'Image') {\n                annotationBody = annotationBodyOrBodies;\n            }\n            else if (annotationBodyOrBodies.type === 'Choice') {\n                annotationBody = annotationBodyOrBodies.items[0];\n            }\n            else {\n                throw new Error('Invalid IIIF Canvas');\n            }\n            this.image = new EmbeddedImage(annotationBody, parsedCanvas);\n        }\n        else {\n            throw new Error('Invalid IIIF Canvas');\n        }\n    }\n}\n", "import { Manifest2Schema, Manifest3Schema, ManifestSchema } from '../schemas/iiif.js';\nimport { Image, EmbeddedImage } from './image.js';\nimport { Canvas } from './canvas.js';\nimport { parseVersion2String, parseVersion3String, parseVersion2Metadata, parseVersion3Metadata, parseVersion2Attribution, parseVersion2Thumbnail, parseVersion2Rendering, parseVersion2Related } from '../lib/convert.js';\nconst ManifestTypeString = 'manifest';\n/**\n * Parsed IIIF Manifest, embedded in a Collection\n * @property embedded - Whether the Manifest is embedded in a Collection\n * @property uri - URI of Manifest\n * @property label - Label of Manifest\n * @property majorVersion - IIIF API version of Manifest\n * @property type - Resource type, equals 'manifest'\n */\nexport class EmbeddedManifest {\n    embedded = true;\n    uri;\n    type = ManifestTypeString;\n    label;\n    majorVersion;\n    constructor(parsedManifest) {\n        if ('@type' in parsedManifest) {\n            // IIIF Presentation API 2.0\n            this.uri = parsedManifest['@id'];\n            this.majorVersion = 2;\n            this.label = parseVersion2String(parsedManifest.label);\n        }\n        else if ('type' in parsedManifest) {\n            // IIIF Presentation API 3.0\n            this.uri = parsedManifest.id;\n            this.majorVersion = 3;\n            this.label = parseVersion3String(parsedManifest.label);\n        }\n        else {\n            throw new Error('Unsupported Manifest');\n        }\n    }\n}\n/**\n * Parsed IIIF Manifest\n *\n * @property canvases - Array of parsed canvases\n * @property description - Description of Manifest\n * @property metadata - Metadata of Manifest\n */\nexport class Manifest extends EmbeddedManifest {\n    canvases = [];\n    description;\n    metadata;\n    navDate;\n    navPlace;\n    homepage;\n    thumbnail;\n    rendering;\n    seeAlso;\n    summary;\n    requiredStatement;\n    annotations;\n    embedded = false;\n    constructor(parsedManifest) {\n        super(parsedManifest);\n        if ('@type' in parsedManifest) {\n            // IIIF Presentation API 2.0\n            this.description = parseVersion2String(parsedManifest.description);\n            this.metadata = parseVersion2Metadata(parsedManifest.metadata);\n            const sequence = parsedManifest.sequences[0];\n            this.canvases = sequence.canvases.map((canvas) => new Canvas(canvas));\n            this.navDate = parsedManifest.navDate;\n            this.navPlace = parsedManifest.navPlace;\n            this.requiredStatement = parseVersion2Attribution(parsedManifest.attribution);\n            this.thumbnail = parseVersion2Thumbnail(parsedManifest.thumbnail);\n            this.rendering = parseVersion2Rendering(parsedManifest.rendering);\n            this.homepage = parseVersion2Related(parsedManifest.related);\n        }\n        else if ('type' in parsedManifest) {\n            // IIIF Presentation API 3.0\n            this.description = parseVersion3String(parsedManifest.description);\n            this.metadata = parseVersion3Metadata(parsedManifest.metadata);\n            this.metadata = parseVersion3Metadata(parsedManifest.metadata);\n            this.navDate = parsedManifest.navDate;\n            this.navPlace = parsedManifest.navPlace;\n            this.homepage = parsedManifest.homepage;\n            this.thumbnail = parsedManifest.thumbnail;\n            this.rendering = parsedManifest.rendering;\n            this.seeAlso = parsedManifest.seeAlso;\n            this.summary = parsedManifest.summary;\n            this.requiredStatement = parsedManifest.requiredStatement;\n            this.annotations = parsedManifest.annotations;\n            this.canvases = parsedManifest.items.map((canvas) => new Canvas(canvas));\n        }\n        else {\n            throw new Error('Unsupported Manifest');\n        }\n    }\n    /**\n     * Parses a IIIF resource and returns a [Manifest](#manifest) containing the parsed version\n     * @param iiifManifest - Source data of IIIF Manifest\n     * @param majorVersion - IIIF API version of Manifest. If not provided, it will be determined automatically\n     * @returns Parsed IIIF Manifest\n     */\n    static parse(iiifManifest, majorVersion = null) {\n        let parsedManifest;\n        if (majorVersion === 2) {\n            parsedManifest = Manifest2Schema.parse(iiifManifest);\n        }\n        else if (majorVersion === 3) {\n            parsedManifest = Manifest3Schema.parse(iiifManifest);\n        }\n        else {\n            parsedManifest = ManifestSchema.parse(iiifManifest);\n        }\n        return new Manifest(parsedManifest);\n    }\n    get images() {\n        return this.canvases.map((canvas) => canvas.image);\n    }\n    async #fetchImage(image, fetchFn) {\n        if (image instanceof EmbeddedImage) {\n            const url = `${image.uri}/info.json`;\n            const iiifImage = await fetchFn(url).then((response) => response.json());\n            const fetchedImage = Image.parse(iiifImage);\n            return fetchedImage;\n        }\n        else {\n            return image;\n        }\n    }\n    async fetchAll(fetchFn = globalThis.fetch) {\n        const results = [];\n        for await (const next of this.fetchNext(fetchFn)) {\n            results.push(next);\n        }\n        return results;\n    }\n    async *fetchNext(fetchFn = globalThis.fetch, depth = 0) {\n        for (const canvas of this.canvases) {\n            const fetchedImage = await this.#fetchImage(canvas.image, fetchFn);\n            canvas.image = fetchedImage;\n            yield {\n                item: fetchedImage,\n                depth,\n                parent: {\n                    uri: this.uri,\n                    type: this.type\n                }\n            };\n        }\n    }\n    // TODO: implement fetchByUri function, also for collections\n    async fetchImageByUri(imageUri, fetchFn = globalThis.fetch) {\n        for (const canvas of this.canvases) {\n            if (canvas.image.uri === imageUri) {\n                const fetchedImage = await this.#fetchImage(canvas.image, fetchFn);\n                canvas.image = fetchedImage;\n                return fetchedImage;\n            }\n        }\n    }\n}\n", "import { Collection2Schema, Collection3Schema, CollectionSchema } from '../schemas/iiif.js';\nimport { EmbeddedManifest, Manifest } from './manifest.js';\nimport { parseVersion2String, parseVersion3String, parseVersion2Metadata, parseVersion3Metadata, parseVersion2Attribution, parseVersion2Thumbnail, parseVersion2Rendering, parseVersion2Related } from '../lib/convert.js';\nconst CollectionTypeString = 'collection';\nconst defaulfFetchNextOptions = {\n    maxDepth: Number.POSITIVE_INFINITY,\n    fetchCollections: true,\n    fetchManifests: true,\n    fetchImages: false,\n    fetchFn: globalThis.fetch\n};\nexport class EmbeddedCollection {\n    uri;\n    type = CollectionTypeString;\n    majorVersion;\n    // TODO: add description?\n    // TODO: add metadata?\n    label;\n    embedded = true;\n    constructor(parsedCollection) {\n        if ('@type' in parsedCollection) {\n            // IIIF Presentation API 2.0\n            this.uri = parsedCollection['@id'];\n            this.majorVersion = 2;\n            this.label = parseVersion2String(parsedCollection.label);\n        }\n        else if ('type' in parsedCollection) {\n            // IIIF Presentation API 3.0\n            this.uri = parsedCollection.id;\n            this.majorVersion = 3;\n            this.label = parseVersion3String(parsedCollection.label);\n        }\n        else {\n            // TODO: improve error message\n            throw new Error('Unsupported Collection');\n        }\n    }\n    /**\n     * Parses a IIIF Collection and returns a [Collection](#collection) containing the parsed version\n     * @param iiifCollection - Source data of IIIF Collection\n     * @param majorVersion - IIIF API version of Collection. If not provided, it will be determined automatically\n     * @returns Parsed IIIF Collection\n     * @static\n     */\n    static parse(iiifCollection, majorVersion = null) {\n        let parsedCollection;\n        if (majorVersion === 2) {\n            parsedCollection = Collection2Schema.parse(iiifCollection);\n        }\n        else if (majorVersion === 3) {\n            parsedCollection = Collection3Schema.parse(iiifCollection);\n        }\n        else {\n            parsedCollection = CollectionSchema.parse(iiifCollection);\n        }\n        return new Collection(parsedCollection);\n    }\n}\n/**\n * Parsed IIIF Collection\n *\n * @property uri - URI of Collection\n * @property label - Label of Collection\n * @property items - Items in Collection\n * @property majorVersion - IIIF API version of Collection\n * @property type - Resource type, equals 'collection'\n */\nexport class Collection extends EmbeddedCollection {\n    items = [];\n    embedded = false;\n    description;\n    metadata;\n    navDate;\n    navPlace;\n    homepage;\n    thumbnail;\n    rendering;\n    seeAlso;\n    summary;\n    requiredStatement;\n    annotations;\n    constructor(parsedCollection) {\n        super(parsedCollection);\n        if ('@type' in parsedCollection) {\n            // IIIF Presentation API 2.0\n            this.description = parseVersion2String(parsedCollection.description);\n            this.label = parseVersion2String(parsedCollection.label);\n            this.metadata = parseVersion2Metadata(parsedCollection.metadata);\n            this.navDate = parsedCollection.navDate;\n            this.navPlace = parsedCollection.navPlace;\n            this.requiredStatement = parseVersion2Attribution(parsedCollection.attribution);\n            this.thumbnail = parseVersion2Thumbnail(parsedCollection.thumbnail);\n            this.rendering = parseVersion2Rendering(parsedCollection.rendering);\n            this.homepage = parseVersion2Related(parsedCollection.related);\n            const manifests = 'manifests' in parsedCollection && parsedCollection.manifests\n                ? parsedCollection.manifests\n                : [];\n            const collections = 'collections' in parsedCollection && parsedCollection.collections\n                ? parsedCollection.collections\n                : [];\n            const members = 'members' in parsedCollection && parsedCollection.members\n                ? parsedCollection.members\n                : [];\n            const items = [...manifests, ...collections, ...members];\n            this.items = items.map((item) => {\n                if (item['@type'] === 'sc:Collection') {\n                    return new Collection(item);\n                }\n                else {\n                    return new EmbeddedManifest(item);\n                }\n            });\n        }\n        else if ('type' in parsedCollection) {\n            // IIIF Presentation API 3.0\n            this.description = parseVersion3String(parsedCollection.description);\n            this.metadata = parseVersion3Metadata(parsedCollection.metadata);\n            this.navDate = parsedCollection.navDate;\n            this.navPlace = parsedCollection.navPlace;\n            this.homepage = parsedCollection.homepage;\n            this.thumbnail = parsedCollection.thumbnail;\n            this.rendering = parsedCollection.rendering;\n            this.seeAlso = parsedCollection.seeAlso;\n            this.summary = parsedCollection.summary;\n            this.requiredStatement = parsedCollection.requiredStatement;\n            this.annotations = parsedCollection.annotations;\n            if ('items' in parsedCollection) {\n                this.items = parsedCollection.items.map((item) => {\n                    if (item.type === 'Collection') {\n                        if ('items' in item) {\n                            return new Collection(item);\n                        }\n                        else {\n                            item;\n                            return new EmbeddedCollection(item);\n                        }\n                    }\n                    else {\n                        return new EmbeddedManifest(item);\n                    }\n                });\n            }\n        }\n        else {\n            // TODO: improve error message\n            throw new Error('Unsupported Collection');\n        }\n    }\n    /**\n     * Parses a IIIF Collection and returns a [Collection](#collection) containing the parsed version\n     * @param iiifCollection - Source data of IIIF Collection\n     * @param majorVersion - IIIF API version of Collection. If not provided, it will be determined automatically\n     * @returns Parsed IIIF Collection\n     */\n    static parse(iiifCollection, majorVersion = null) {\n        let parsedCollection;\n        if (majorVersion === 2) {\n            parsedCollection = Collection2Schema.parse(iiifCollection);\n        }\n        else if (majorVersion === 3) {\n            parsedCollection = Collection3Schema.parse(iiifCollection);\n        }\n        else {\n            parsedCollection = CollectionSchema.parse(iiifCollection);\n        }\n        return new Collection(parsedCollection);\n    }\n    get canvases() {\n        const initialValue = [];\n        return this.items.reduce((canvases, item) => {\n            if (item instanceof Manifest) {\n                return [...canvases, ...item.canvases];\n            }\n            else if (item instanceof EmbeddedManifest) {\n                return canvases;\n            }\n            else if (item instanceof Collection) {\n                return [...canvases, ...item.canvases];\n            }\n            return canvases;\n        }, initialValue);\n    }\n    get images() {\n        return this.canvases.map((canvas) => canvas.image);\n    }\n    async fetchAll(options) {\n        const results = [];\n        for await (const next of this.fetchNext(options)) {\n            results.push(next);\n        }\n        return results;\n    }\n    async *fetchNext(options, depth = 0) {\n        options = {\n            ...defaulfFetchNextOptions,\n            ...options\n        };\n        if (Number.isNaN(options.maxDepth)) {\n            return;\n        }\n        if (options.maxDepth === undefined) {\n            options.maxDepth = defaulfFetchNextOptions.maxDepth;\n        }\n        if (options.fetchImages === undefined) {\n            options.fetchImages = defaulfFetchNextOptions.fetchImages;\n        }\n        if (options.fetchManifests === undefined) {\n            options.fetchManifests = defaulfFetchNextOptions.fetchManifests;\n        }\n        let fetchFn = defaulfFetchNextOptions.fetchFn;\n        if (options.fetchFn) {\n            fetchFn = options.fetchFn;\n        }\n        if (depth >= options.maxDepth) {\n            return;\n        }\n        for (const itemIndex in this.items) {\n            let item = this.items[itemIndex];\n            if (item instanceof Manifest) {\n                if (options.fetchImages) {\n                    yield* item.fetchNext(fetchFn, depth + 1);\n                }\n            }\n            else if (item instanceof EmbeddedManifest && options.fetchManifests) {\n                const manifestUri = item.uri;\n                const iiifManifest = await fetchFn(manifestUri).then((response) => response.json());\n                const newParsedManifest = Manifest.parse(iiifManifest);\n                this.items[itemIndex] = newParsedManifest;\n                yield {\n                    item: newParsedManifest,\n                    depth: depth + 1,\n                    parent: {\n                        uri: this.uri,\n                        type: this.type\n                    }\n                };\n                if (depth + 1 < options.maxDepth && options.fetchImages) {\n                    yield* newParsedManifest.fetchNext(fetchFn, depth + 2);\n                }\n            }\n            else if (item instanceof EmbeddedCollection &&\n                options.fetchCollections) {\n                const collectionUri = item.uri;\n                const iiifCollection = await fetchFn(collectionUri).then((response) => response.json());\n                const newParsedCollection = Collection.parse(iiifCollection);\n                this.items[itemIndex] = newParsedCollection;\n                yield {\n                    item: newParsedCollection,\n                    depth: depth + 1,\n                    parent: {\n                        uri: this.uri,\n                        type: this.type\n                    }\n                };\n                item = newParsedCollection;\n                if (depth + 1 < options.maxDepth) {\n                    yield* newParsedCollection.fetchNext(options, depth + 2);\n                }\n            }\n        }\n    }\n}\n", "import { Image1Schema, Image2Schema, Image3Schema, \n// TODO: add Canvas!\nManifest2Schema, Manifest3Schema, Collection2Schema, Collection3Schema } from '../schemas/iiif.js';\nimport { Image1ContextString } from '../schemas/image.1.js';\nimport { Image } from './image.js';\nimport { Manifest } from './manifest.js';\nimport { Collection } from './collection.js';\n/**\n * Base class that contains a static parse function for IIIF resources\n */\nexport class IIIF {\n    /**\n     * Parses as IIIF resource and returns a class containing the parsed version\n     * @param iiifResource - Source data of a IIIF resource\n     * @param majorVersion - IIIF API version of resource. If not provided, it will be determined automatically\n     * @returns Parsed IIIF resource\n     */\n    static parse(iiifResource, majorVersion = null) {\n        if (iiifResource && typeof iiifResource === 'object') {\n            if (majorVersion === 1 ||\n                ('@context' in iiifResource &&\n                    iiifResource['@context'] === Image1ContextString)) {\n                const parsedImage = Image1Schema.parse(iiifResource);\n                return new Image(parsedImage);\n            }\n            else if (majorVersion === 2 || '@id' in iiifResource) {\n                if ('protocol' in iiifResource &&\n                    iiifResource.protocol === 'http://iiif.io/api/image') {\n                    const parsedImage = Image2Schema.parse(iiifResource);\n                    return new Image(parsedImage);\n                }\n                else if ('@type' in iiifResource &&\n                    iiifResource['@type'] === 'sc:Manifest') {\n                    const parsedManifest = Manifest2Schema.parse(iiifResource);\n                    return new Manifest(parsedManifest);\n                }\n                else if ('@type' in iiifResource &&\n                    iiifResource['@type'] === 'sc:Collection') {\n                    const parsedCollection = Collection2Schema.parse(iiifResource);\n                    return new Collection(parsedCollection);\n                }\n            }\n            else if (majorVersion === 3 || 'id' in iiifResource) {\n                if ('protocol' in iiifResource &&\n                    iiifResource.protocol === 'http://iiif.io/api/image') {\n                    const parsedImage = Image3Schema.parse(iiifResource);\n                    return new Image(parsedImage);\n                }\n                else if ('type' in iiifResource && iiifResource.type === 'Manifest') {\n                    const parsedManifest = Manifest3Schema.parse(iiifResource);\n                    return new Manifest(parsedManifest);\n                }\n                else if ('type' in iiifResource &&\n                    iiifResource.type === 'Collection') {\n                    const parsedCollection = Collection3Schema.parse(iiifResource);\n                    return new Collection(parsedCollection);\n                }\n            }\n        }\n        // TODO: improve error message\n        throw new Error('Invalid IIIF data or unsupported IIIF type');\n    }\n}\n", "export { IIIF } from './classes/iiif.js';\nexport { Collection, EmbeddedCollection } from './classes/collection.js';\nexport { Manifest, EmbeddedManifest } from './classes/manifest.js';\nexport { Canvas } from './classes/canvas.js';\nexport { Image, EmbeddedImage } from './classes/image.js';\n", "import type { HomogeneousTransform, Point, Matrix4 } from '@allmaps/types'\n\nexport function applyHomogeneousTransform(\n  homogeneousTransform: HomogeneousTransform,\n  coordinate: Point\n): Point {\n  const x = coordinate[0]\n  const y = coordinate[1]\n\n  return [\n    homogeneousTransform[0] * x +\n      homogeneousTransform[2] * y +\n      homogeneousTransform[4],\n    homogeneousTransform[1] * x +\n      homogeneousTransform[3] * y +\n      homogeneousTransform[5]\n  ]\n}\n\nexport function createHomogeneousTransform(): HomogeneousTransform {\n  return [1, 0, 0, 1, 0, 0]\n}\n\nexport function multiplyHomogeneousTransform(\n  homogeneousTransform1: HomogeneousTransform,\n  homogeneousTransform2: HomogeneousTransform\n): HomogeneousTransform {\n  const a1 = homogeneousTransform1[0]\n  const b1 = homogeneousTransform1[1]\n  const c1 = homogeneousTransform1[2]\n  const d1 = homogeneousTransform1[3]\n  const e1 = homogeneousTransform1[4]\n  const f1 = homogeneousTransform1[5]\n  const a2 = homogeneousTransform2[0]\n  const b2 = homogeneousTransform2[1]\n  const c2 = homogeneousTransform2[2]\n  const d2 = homogeneousTransform2[3]\n  const e2 = homogeneousTransform2[4]\n  const f2 = homogeneousTransform2[5]\n\n  return [\n    a1 * a2 + c1 * b2,\n    b1 * a2 + d1 * b2,\n    a1 * c2 + c1 * d2,\n    b1 * c2 + d1 * d2,\n    a1 * e2 + c1 * f2 + e1,\n    b1 * e2 + d1 * f2 + f1\n  ]\n}\n\nexport function rotateHomogeneousTransform(\n  homogeneousTransform: HomogeneousTransform,\n  angle: number\n): HomogeneousTransform {\n  const cos = Math.cos(angle)\n  const sin = Math.sin(angle)\n  return multiplyHomogeneousTransform(homogeneousTransform, [\n    cos,\n    sin,\n    -sin,\n    cos,\n    0,\n    0\n  ])\n}\n\nexport function scaleHomogeneousTransform(\n  homogeneousTransform: HomogeneousTransform,\n  x: number,\n  y: number\n): HomogeneousTransform {\n  return multiplyHomogeneousTransform(homogeneousTransform, [x, 0, 0, y, 0, 0])\n}\n\nexport function translateHomogeneousTransform(\n  homogeneousTransform: HomogeneousTransform,\n  dx: number,\n  dy: number\n): HomogeneousTransform {\n  return multiplyHomogeneousTransform(homogeneousTransform, [\n    1,\n    0,\n    0,\n    1,\n    dx,\n    dy\n  ])\n}\n\nexport function composeHomogeneousTransform(\n  dx1: number,\n  dy1: number,\n  sx: number,\n  sy: number,\n  angle: number,\n  dx2: number,\n  dy2: number\n): HomogeneousTransform {\n  const sin = Math.sin(angle)\n  const cos = Math.cos(angle)\n\n  return [\n    sx * cos,\n    sy * sin,\n    -sx * sin,\n    sy * cos,\n    dx2 * sx * cos - dy2 * sx * sin + dx1,\n    dx2 * sy * sin + dy2 * sy * cos + dy1\n  ]\n}\n\nexport function invertHomogeneousTransform(\n  source: HomogeneousTransform\n): HomogeneousTransform {\n  const determinant = getDeterminant(source)\n\n  const a = source[0]\n  const b = source[1]\n  const c = source[2]\n  const d = source[3]\n  const e = source[4]\n  const f = source[5]\n\n  return [\n    d / determinant,\n    -b / determinant,\n    -c / determinant,\n    a / determinant,\n    (c * f - d * e) / determinant,\n    -(a * f - b * e) / determinant\n  ]\n}\n\nexport function getDeterminant(mat: HomogeneousTransform): number {\n  return mat[0] * mat[3] - mat[1] * mat[2]\n}\n\nexport function homogeneousTransformToMatrix4(\n  homogeneousTransform: HomogeneousTransform\n): Matrix4 {\n  const matrix4: Matrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\n\n  matrix4[0] = homogeneousTransform[0]\n  matrix4[1] = homogeneousTransform[1]\n  matrix4[4] = homogeneousTransform[2]\n  matrix4[5] = homogeneousTransform[3]\n  matrix4[12] = homogeneousTransform[4]\n  matrix4[13] = homogeneousTransform[5]\n\n  return matrix4\n}\n", "export function createShader(\n  gl: WebGL2RenderingContext,\n  type:\n    | WebGLRenderingContextBase['VERTEX_SHADER']\n    | WebGLRenderingContextBase['FRAGMENT_SHADER'],\n  source: string\n): WebGLShader {\n  // TODO: are all unneeded webgl objects properly deleted?\n\n  const shader = gl.createShader(type)\n  if (shader) {\n    gl.shaderSource(shader, source)\n    gl.compileShader(shader)\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS)\n    if (success) {\n      return shader\n    } else {\n      const message = gl.getShaderInfoLog(shader)\n      gl.deleteShader(shader)\n      throw new Error('Failed to compile shader: ' + message)\n    }\n  } else {\n    throw new Error('Failed to create shader')\n  }\n}\n\nexport function createProgram(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  fragmentShader: WebGLShader\n): WebGLProgram {\n  // TODO: are all unneeded webgl objects properly deleted?\n\n  const program = gl.createProgram()\n  if (program) {\n    gl.attachShader(program, vertexShader)\n    gl.attachShader(program, fragmentShader)\n    gl.linkProgram(program)\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS)\n    if (success) {\n      return program\n    } else {\n      const message = gl.getProgramInfoLog(program)\n      gl.deleteProgram(program)\n      throw new Error('Failed to link program: ' + message)\n    }\n  } else {\n    throw new Error('Failed to create program')\n  }\n}\n\nexport function createBuffer(\n  gl: WebGL2RenderingContext,\n  program: WebGLProgram,\n  data: Float32Array,\n  size: number,\n  name: string\n) {\n  const buffer = gl.createBuffer()\n\n  if (!buffer) {\n    throw new Error('Failed to create buffer')\n  }\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW)\n\n  const type = gl.FLOAT\n  const normalize = false\n  const stride = 0\n  const offset = 0\n\n  const positionAttributeLocation = gl.getAttribLocation(program, name)\n  gl.vertexAttribPointer(\n    positionAttributeLocation,\n    size,\n    type,\n    normalize,\n    stride,\n    offset\n  )\n  gl.enableVertexAttribArray(positionAttributeLocation)\n\n  return buffer\n}\n", "import { FetchableTile } from './FetchableTile.js'\n\nimport type { Tile, ImageRequest, FetchFn } from '@allmaps/types'\n\n/**\n * Class for tiles that can be cached.\n */\nexport abstract class CacheableTile<D> extends EventTarget {\n  readonly tile: Tile\n  readonly imageRequest: ImageRequest\n  readonly tileUrl: string\n  readonly tileKey: string\n  readonly fetchFn?: FetchFn\n\n  protected abortController: AbortController\n\n  protected data?: D\n\n  /**\n   * Creates an instance of CacheableTile.\n   *\n   * @constructor\n   * @param fetchableTile\n   * @param fetchFn - Optional fetch function to use\n   */\n  constructor(fetchableTile: FetchableTile, fetchFn?: FetchFn) {\n    super()\n\n    this.tile = fetchableTile.tile\n    this.imageRequest = fetchableTile.imageRequest\n    this.tileUrl = fetchableTile.tileUrl\n    this.tileKey = fetchableTile.tileKey\n    this.fetchFn = fetchFn\n\n    this.abortController = new AbortController()\n  }\n\n  abstract fetch(): Promise<D | undefined>\n\n  /**\n   * Whether a tile has fetched its data\n   *\n   * @returns\n   */\n  isCachedTile(): this is CachedTile<D> {\n    return this.data !== undefined\n  }\n\n  /**\n   * Abort the fetch\n   */\n  abort() {\n    if (!this.abortController.signal.aborted) {\n      this.abortController.abort()\n    }\n  }\n}\n\n/**\n * Class for tiles that are cached, i.e. their data has been fetched and processed\n */\nexport abstract class CachedTile<D> extends CacheableTile<D> {\n  declare data: D\n}\n", "#version 300 es\n\nprecision highp float;\n\n#include ../helpers.frag;\n\nuniform mat4 u_renderHomogeneousTransform;\nuniform float u_animationProgress;\n\nin vec2 a_resourceTrianglePoint;\nin vec2 a_clipPreviousTrianglePoint;\nin vec2 a_clipTrianglePoint;\nin float a_previousTrianglePointDistortion;\nin float a_trianglePointDistortion;\nin float a_trianglePointIndex;\n\nout vec2 v_resourceTrianglePoint;\nout float v_trianglePointDistortion;\nout float v_trianglePointIndex;\nout vec4 v_trianglePointBarycentric;\n\nvoid main() {\n  // Mixing previous and new triangle points\n  vec2 clipTrianglePoint = mix(a_clipPreviousTrianglePoint, a_clipTrianglePoint, easing(u_animationProgress));\n  float trianglePointDistortion = mix(a_previousTrianglePointDistortion, a_trianglePointDistortion, easing(u_animationProgress));\n\n  // Set triangle points coordinates\n  // Variables that start with gl_ are special global variables\n  // gl_Position stores the vertex (or 'point') positions (or 'coordinates') in clip coordinates (which go from -1 to 1.)\n\n  gl_Position = u_renderHomogeneousTransform * vec4(clipTrianglePoint, 0.0f, 1.0f);\n\n  // Pass attributes as varyings to fragment shader\n  v_resourceTrianglePoint = a_resourceTrianglePoint;\n  v_trianglePointDistortion = trianglePointDistortion;\n  v_trianglePointIndex = a_trianglePointIndex;\n\n  float trianglePointLocalIndex = mod(a_trianglePointIndex, 3.0f);\n  if(trianglePointLocalIndex == 0.0f)\n    v_trianglePointBarycentric = vec4(1.0f, 0, 0, 1.0f);\n  if(trianglePointLocalIndex == 1.0f)\n    v_trianglePointBarycentric = vec4(0.0f, 1.0f, 0, 1.0f);\n  if(trianglePointLocalIndex == 2.0f)\n    v_trianglePointBarycentric = vec4(0.0f, 0, 1.0f, 1.0f);\n}\n", "#version 300 es\n\nprecision highp float;\nprecision highp isampler2D;\n\n#include ../helpers.frag;\n\nuniform float u_debug;\n\nuniform bool u_removeColor;\nuniform vec3 u_removeColorOptionsColor;\nuniform float u_removeColorOptionsThreshold;\nuniform float u_removeColorOptionsHardness;\n\nuniform bool u_colorize;\nuniform vec3 u_colorizeOptionsColor;\n\nuniform bool u_grid;\n\nuniform float u_opacity;\nuniform float u_saturation;\n\nuniform bool u_distortion;\nuniform int u_distortionOptionsdistortionMeasure;\n\nuniform int u_scaleFactorForViewport;\n\nuniform lowp sampler2DArray u_cachedTilesTextureArray;\nuniform isampler2D u_cachedTilesResourceOriginPointsAndDimensionsTexture;\nuniform isampler2D u_cachedTilesScaleFactorsTexture;\n\nuniform vec4 u_colorDistortion00;\nuniform vec4 u_colorDistortion01;\nuniform vec4 u_colorDistortion1;\nuniform vec4 u_colorDistortion2;\nuniform vec4 u_colorDistortion3;\nuniform vec4 u_colorGrid;\n\nin vec2 v_resourceTrianglePoint;\nin float v_trianglePointDistortion;\nin float v_trianglePointIndex;\nin vec4 v_trianglePointBarycentric;\n\nout vec4 color;\n\nvoid main() {\n  float resourceTrianglePointX = v_resourceTrianglePoint.x;\n  float resourceTrianglePointY = v_resourceTrianglePoint.y;\n\n  // Reading information on cached tiles from textures\n  ivec3 cachedTilesTextureSize = textureSize(u_cachedTilesTextureArray, 0);\n  int cachedTilesCount = cachedTilesTextureSize.z;\n\n  // Setting references for the for loop\n  int smallestScaleFactor;\n  bool found = false;\n  int foundIndex;\n\n  // Prepare storage for the resulting cached tiles texture point that corresponds to the triangle point\n  vec3 cachedTilesTexturePoint = vec3(0.0f, 0.0f, 0.0f);\n\n  // Set the initial values\n  color = vec4(0.0f, 0.0f, 0.0f, 0.0f);\n\n  // Loop through all cached tiles\n  for(int index = 0; index < cachedTilesCount; index += 1) {\n\n    // Read the information of the tile\n    float cachedTileResourceOriginPointX = float(texelFetch(u_cachedTilesResourceOriginPointsAndDimensionsTexture, ivec2(0, (index * 4)), 0));\n    float cachedTileResourceOriginPointY = float(texelFetch(u_cachedTilesResourceOriginPointsAndDimensionsTexture, ivec2(0, (index * 4) + 1), 0));\n    float cachedTileDimensionWidth = float(texelFetch(u_cachedTilesResourceOriginPointsAndDimensionsTexture, ivec2(0, (index * 4) + 2), 0));\n    float cachedTileDimensionHeight = float(texelFetch(u_cachedTilesResourceOriginPointsAndDimensionsTexture, ivec2(0, (index * 4) + 3), 0));\n\n    int cachedTileScaleFactor = texelFetch(u_cachedTilesScaleFactorsTexture, ivec2(0, index), 0).r;\n\n    // If the triangle point is inside the tile, consider to use the tile:\n    if(resourceTrianglePointX >= cachedTileResourceOriginPointX &&\n      resourceTrianglePointX < cachedTileResourceOriginPointX + cachedTileDimensionWidth &&\n      resourceTrianglePointY >= cachedTileResourceOriginPointY &&\n      resourceTrianglePointY < cachedTileResourceOriginPointY + cachedTileDimensionHeight) {\n\n      // If the smallest scale factor currently known is not set yet,\n      // or if the scale factor of this tile is smaller (more detailed) then the scale factor currently known\n      // update the smallest scale factor\n      // and compute the cached tiles texture point that corresponds to the triangle point\n      // Note: we can safely take the most detailed tile, since the depth is limited when we gather texture tiles\n      if(!(smallestScaleFactor > 0) || cachedTileScaleFactor <= smallestScaleFactor) {\n        smallestScaleFactor = cachedTileScaleFactor;\n        found = true;\n        foundIndex = index;\n\n        float cachedTilePointX = (resourceTrianglePointX - cachedTileResourceOriginPointX) / float(cachedTileScaleFactor);\n        float cachedTilePointY = (resourceTrianglePointY - cachedTileResourceOriginPointY) / float(cachedTileScaleFactor);\n\n        float cachedTilesTexturePointX = cachedTilePointX / float(cachedTilesTextureSize.x);\n        float cachedTilesTexturePointY = cachedTilePointY / float(cachedTilesTextureSize.y);\n\n        cachedTilesTexturePoint = vec3(cachedTilesTexturePointX, cachedTilesTexturePointY, index);\n      }\n    }\n  }\n\n  if(found == true) {\n    // Read color of the point at its chached tiles texture point coordinates in the cached tiles texture array\n    color = texture(u_cachedTilesTextureArray, cachedTilesTexturePoint);\n\n    #include post.frag;\n    #include distortion.frag;\n    #include debug.frag;\n  }\n}\n", "#version 300 es\n\nprecision highp float;\n\n#include ../helpers.frag;\n\nuniform mat4 u_renderHomogeneousTransform;\nuniform mat4 u_viewportToClipHomogeneousTransform;\nuniform mat4 u_clipToViewportHomogeneousTransform;\nuniform float u_animationProgress;\n\nin vec2 a_clipPoint;\nin vec2 a_clipOtherPoint;\nin vec2 a_clipPreviousPoint;\nin vec2 a_clipPreviousOtherPoint;\nin float a_isOtherPoint;\nin float a_normalSign;\nin float a_viewportSize;\nin vec4 a_color;\nin float a_viewportBorderSize;\nin vec4 a_borderColor;\n\nout float v_viewportLineLength;\nout vec2 v_linePoint;\nout float v_viewportSize;\nout vec4 v_color;\nout float v_viewportBorderSize;\nout vec4 v_borderColor;\nout float v_viewportFeatherSize;\nout float v_viewportTotalSize;\n\nvoid main() {\n  vec2 clipPoint = mix(a_clipPreviousPoint, a_clipPoint, easing(u_animationProgress));\n  vec2 clipOtherPoint = mix(a_clipPreviousOtherPoint, a_clipOtherPoint, easing(u_animationProgress));\n\n  vec2 viewportPoint = (u_clipToViewportHomogeneousTransform * u_renderHomogeneousTransform * vec4(clipPoint, 0.0f, 1.0f)).xy;\n  vec2 viewportOtherPoint = (u_clipToViewportHomogeneousTransform * u_renderHomogeneousTransform * vec4(clipOtherPoint, 0.0f, 1.0f)).xy;\n\n  vec2 viewportLine = vec2(viewportOtherPoint.x-viewportPoint.x, viewportOtherPoint.y-viewportPoint.y);\n  vec2 viewportNormalizedLine = normalize(viewportLine);\n  vec2 viewportNormalizedLineNormal = vec2(viewportNormalizedLine.y, -viewportNormalizedLine.x);\n  v_viewportLineLength = length(viewportLine);\n\n  v_viewportFeatherSize = 1.0;\n\n  // TODO: figure out why size lines need to be devided by two\n  // to have the same effect as point sizes\n  // this could be related to dpr (but then one would expert multiplication by two?)\n  float viewportSize = a_viewportSize / 2.0;\n  float viewportBorderSize = a_viewportBorderSize / 2.0;\n  v_viewportFeatherSize = v_viewportFeatherSize / 2.0;\n\n  v_viewportTotalSize = viewportSize + viewportBorderSize + v_viewportFeatherSize;\n  float lineX = -1.0 * v_viewportTotalSize / 2.0 + a_isOtherPoint * (v_viewportLineLength + 2.0 * (v_viewportTotalSize / 2.0));\n  float lineY = a_normalSign * v_viewportTotalSize / 2.0;\n  v_linePoint = vec2(lineX, lineY);\n  // The border is centered on the edge of a line with diameter = size\n  // so adding half a border left and half a border right\n  // results in adding a full border to the total size.\n  // Also adding half an outside feather left and half an outside feather right,\n  // which also serves as minimal size.\n  // Note: there seems to be a maximum size of 512? Could be due to graphics card (or Float32Array)?\n\n  v_viewportSize = viewportSize;\n  v_color = a_color;\n  v_viewportBorderSize = viewportBorderSize;\n  v_borderColor = a_borderColor;\n\n  gl_Position =  u_viewportToClipHomogeneousTransform * vec4(viewportPoint + lineX * viewportNormalizedLine + lineY * viewportNormalizedLineNormal, 0, 1);\n}\n", "#version 300 es\n\nprecision highp float;\nprecision highp isampler2D;\n\nin float v_viewportLineLength;\nin vec2 v_linePoint;\nin float v_viewportSize;\nin vec4 v_color;\nin float v_viewportBorderSize;\nin vec4 v_borderColor;\nin float v_viewportFeatherSize;\nin float v_viewportTotalSize;\n\nout vec4 color;\n\nvoid main() {\n  float distance;\n  if (v_linePoint.x < 0.0) {\n    distance = length(v_linePoint - vec2(0.0,0.0)) / (v_viewportTotalSize / 2.0);\n  } else if (v_linePoint.x > v_viewportLineLength) {\n    distance = length(v_linePoint - vec2(v_viewportLineLength,0.0)) / (v_viewportTotalSize / 2.0);\n  } else {\n    distance = abs(v_linePoint.y) / (v_viewportTotalSize / 2.0);\n  }\n  if (distance > 1.0) {\n    discard;\n  }\n  float viewportDistance = distance * v_viewportTotalSize / 2.0;\n\n  // Apply color\n  color = vec4(0, 0, 0, 0);\n  if (v_viewportSize >= v_viewportFeatherSize) {\n    color = v_color;\n  }\n\n  // Apply border\n  // Border starts at radius = size / 2 - border size / 2 until outside starts\n  // with step of size feather size\n  float borderSmoothStep;\n  if(v_viewportBorderSize >= v_viewportFeatherSize) {\n    borderSmoothStep = smoothstep(\n      v_viewportSize / 2.0 - v_viewportBorderSize / 2.0 - v_viewportFeatherSize / 2.0,\n      v_viewportSize / 2.0 - v_viewportBorderSize / 2.0 + v_viewportFeatherSize / 2.0,\n      viewportDistance\n    );\n    color = ((1.0 - borderSmoothStep) * color) + (borderSmoothStep * v_borderColor);\n  }\n\n  // Apply outside feather\n  // Outside starts at radius = size / 2 + border size / 2 until total size\n  // with step of size feather size\n  borderSmoothStep = smoothstep(\n      v_viewportSize / 2.0 + v_viewportBorderSize / 2.0 - v_viewportFeatherSize / 2.0,\n      v_viewportSize / 2.0 + v_viewportBorderSize / 2.0 + v_viewportFeatherSize / 2.0,\n      viewportDistance\n  );\n  color = ((1.0 - borderSmoothStep) * color) + (borderSmoothStep * vec4(0, 0, 0, 0));\n}\n", "#version 300 es\n\nprecision highp float;\n\n#include ../helpers.frag;\n\nuniform mat4 u_renderHomogeneousTransform;\nuniform float u_animationProgress;\n\nin float a_viewportSize;\nin vec4 a_color;\nin float a_viewportBorderSize;\nin vec4 a_borderColor;\n\nin vec2 a_clipPoint;\nin vec2 a_clipPreviousPoint;\n\nout float v_viewportSize;\nout vec4 v_color;\nout float v_viewportBorderSize;\nout vec4 v_borderColor;\nout float v_viewportFeatherSize;\nout float v_viewportTotalSize;\n\nvoid main() {\n  vec2 clipPoint = mix(a_clipPreviousPoint, a_clipPoint, easing(u_animationProgress));\n\n  gl_Position = u_renderHomogeneousTransform * vec4(clipPoint, 0.0f, 1.0f);\n\n  v_viewportFeatherSize = 1.0;\n\n  v_viewportTotalSize = a_viewportSize + a_viewportBorderSize + v_viewportFeatherSize;\n  gl_PointSize = v_viewportTotalSize;\n  // gl_PointSize is the diameter of the point.\n  // The border is centered on the edge of a point with diameter = size\n  // so adding half a border left and half a border right\n  // results in adding a full border to the total size.\n  // Also adding half an outside feather left and half an outside feather right,\n  // which also serves as minimal size.\n  // Note: there seems to be a maximum size of 512? Could be due to graphics card (or Float32Array)?\n\n  v_viewportSize = a_viewportSize;\n  v_color = a_color;\n  v_viewportBorderSize = a_viewportBorderSize;\n  v_borderColor = a_borderColor;\n}\n", "#version 300 es\n\nprecision highp float;\nprecision highp isampler2D;\n\nin float v_viewportSize;\nin vec4 v_color;\nin float v_viewportBorderSize;\nin vec4 v_borderColor;\nin float v_viewportFeatherSize;\nin float v_viewportTotalSize;\n\nout vec4 color;\n\nvoid main() {\n  // gl_PointCoord is a vec2 .x and .y between -1.0 and 1.0.\n  float distance = length(2.0 * gl_PointCoord - 1.0);\n  if (distance > 1.0) {\n    discard;\n  }\n  float viewportDistance = distance * v_viewportTotalSize / 2.0;\n\n  // Apply color\n  color = vec4(0, 0, 0, 0);\n  if (v_viewportSize >= v_viewportFeatherSize) {\n    color = v_color;\n  }\n\n  // Apply border\n  // Border starts at radius = size / 2 - border size / 2 until outside starts\n  // with step of size feather size\n  float borderSmoothStep;\n  if(v_viewportBorderSize >= v_viewportFeatherSize) {\n    borderSmoothStep = smoothstep(\n      v_viewportSize / 2.0 - v_viewportBorderSize / 2.0 - v_viewportFeatherSize / 2.0,\n      v_viewportSize / 2.0 - v_viewportBorderSize / 2.0 + v_viewportFeatherSize / 2.0,\n      viewportDistance\n    );\n    color = ((1.0 - borderSmoothStep) * color) + (borderSmoothStep * v_borderColor);\n  }\n\n  // Apply outside feather\n  // Outside starts at radius = size / 2 + border size / 2 until total size\n  // with step of size feather size\n  borderSmoothStep = smoothstep(\n      v_viewportSize / 2.0 + v_viewportBorderSize / 2.0 - v_viewportFeatherSize / 2.0,\n      v_viewportSize / 2.0 + v_viewportBorderSize / 2.0 + v_viewportFeatherSize / 2.0,\n      viewportDistance\n  );\n  color = ((1.0 - borderSmoothStep) * color) + (borderSmoothStep * vec4(0, 0, 0, 0));\n}\n", "const encodedJs = \"LyoqCiAqIEBsaWNlbnNlCiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTEMKICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjAKICovCmNvbnN0IHByb3h5TWFya2VyID0gU3ltYm9sKCJDb21saW5rLnByb3h5Iik7CmNvbnN0IGNyZWF0ZUVuZHBvaW50ID0gU3ltYm9sKCJDb21saW5rLmVuZHBvaW50Iik7CmNvbnN0IHJlbGVhc2VQcm94eSA9IFN5bWJvbCgiQ29tbGluay5yZWxlYXNlUHJveHkiKTsKY29uc3QgZmluYWxpemVyID0gU3ltYm9sKCJDb21saW5rLmZpbmFsaXplciIpOwpjb25zdCB0aHJvd01hcmtlciA9IFN5bWJvbCgiQ29tbGluay50aHJvd24iKTsKY29uc3QgaXNPYmplY3QgPSAodmFsKSA9PiB0eXBlb2YgdmFsID09PSAib2JqZWN0IiAmJiB2YWwgIT09IG51bGwgfHwgdHlwZW9mIHZhbCA9PT0gImZ1bmN0aW9uIjsKY29uc3QgcHJveHlUcmFuc2ZlckhhbmRsZXIgPSB7CiAgY2FuSGFuZGxlOiAodmFsKSA9PiBpc09iamVjdCh2YWwpICYmIHZhbFtwcm94eU1hcmtlcl0sCiAgc2VyaWFsaXplKG9iaikgewogICAgY29uc3QgeyBwb3J0MSwgcG9ydDIgfSA9IG5ldyBNZXNzYWdlQ2hhbm5lbCgpOwogICAgZXhwb3NlKG9iaiwgcG9ydDEpOwogICAgcmV0dXJuIFtwb3J0MiwgW3BvcnQyXV07CiAgfSwKICBkZXNlcmlhbGl6ZShwb3J0KSB7CiAgICBwb3J0LnN0YXJ0KCk7CiAgICByZXR1cm4gd3JhcChwb3J0KTsKICB9Cn07CmNvbnN0IHRocm93VHJhbnNmZXJIYW5kbGVyID0gewogIGNhbkhhbmRsZTogKHZhbHVlKSA9PiBpc09iamVjdCh2YWx1ZSkgJiYgdGhyb3dNYXJrZXIgaW4gdmFsdWUsCiAgc2VyaWFsaXplKHsgdmFsdWUgfSkgewogICAgbGV0IHNlcmlhbGl6ZWQ7CiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBFcnJvcikgewogICAgICBzZXJpYWxpemVkID0gewogICAgICAgIGlzRXJyb3I6IHRydWUsCiAgICAgICAgdmFsdWU6IHsKICAgICAgICAgIG1lc3NhZ2U6IHZhbHVlLm1lc3NhZ2UsCiAgICAgICAgICBuYW1lOiB2YWx1ZS5uYW1lLAogICAgICAgICAgc3RhY2s6IHZhbHVlLnN0YWNrCiAgICAgICAgfQogICAgICB9OwogICAgfSBlbHNlIHsKICAgICAgc2VyaWFsaXplZCA9IHsgaXNFcnJvcjogZmFsc2UsIHZhbHVlIH07CiAgICB9CiAgICByZXR1cm4gW3NlcmlhbGl6ZWQsIFtdXTsKICB9LAogIGRlc2VyaWFsaXplKHNlcmlhbGl6ZWQpIHsKICAgIGlmIChzZXJpYWxpemVkLmlzRXJyb3IpIHsKICAgICAgdGhyb3cgT2JqZWN0LmFzc2lnbihuZXcgRXJyb3Ioc2VyaWFsaXplZC52YWx1ZS5tZXNzYWdlKSwgc2VyaWFsaXplZC52YWx1ZSk7CiAgICB9CiAgICB0aHJvdyBzZXJpYWxpemVkLnZhbHVlOwogIH0KfTsKY29uc3QgdHJhbnNmZXJIYW5kbGVycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKFsKICBbInByb3h5IiwgcHJveHlUcmFuc2ZlckhhbmRsZXJdLAogIFsidGhyb3ciLCB0aHJvd1RyYW5zZmVySGFuZGxlcl0KXSk7CmZ1bmN0aW9uIGlzQWxsb3dlZE9yaWdpbihhbGxvd2VkT3JpZ2lucywgb3JpZ2luKSB7CiAgZm9yIChjb25zdCBhbGxvd2VkT3JpZ2luIG9mIGFsbG93ZWRPcmlnaW5zKSB7CiAgICBpZiAob3JpZ2luID09PSBhbGxvd2VkT3JpZ2luIHx8IGFsbG93ZWRPcmlnaW4gPT09ICIqIikgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGlmIChhbGxvd2VkT3JpZ2luIGluc3RhbmNlb2YgUmVnRXhwICYmIGFsbG93ZWRPcmlnaW4udGVzdChvcmlnaW4pKSB7CiAgICAgIHJldHVybiB0cnVlOwogICAgfQogIH0KICByZXR1cm4gZmFsc2U7Cn0KZnVuY3Rpb24gZXhwb3NlKG9iaiwgZXAgPSBnbG9iYWxUaGlzLCBhbGxvd2VkT3JpZ2lucyA9IFsiKiJdKSB7CiAgZXAuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIGZ1bmN0aW9uIGNhbGxiYWNrKGV2KSB7CiAgICBpZiAoIWV2IHx8ICFldi5kYXRhKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGlmICghaXNBbGxvd2VkT3JpZ2luKGFsbG93ZWRPcmlnaW5zLCBldi5vcmlnaW4pKSB7CiAgICAgIGNvbnNvbGUud2FybihgSW52YWxpZCBvcmlnaW4gJyR7ZXYub3JpZ2lufScgZm9yIGNvbWxpbmsgcHJveHlgKTsKICAgICAgcmV0dXJuOwogICAgfQogICAgY29uc3QgeyBpZCwgdHlwZSwgcGF0aCB9ID0gT2JqZWN0LmFzc2lnbih7IHBhdGg6IFtdIH0sIGV2LmRhdGEpOwogICAgY29uc3QgYXJndW1lbnRMaXN0ID0gKGV2LmRhdGEuYXJndW1lbnRMaXN0IHx8IFtdKS5tYXAoZnJvbVdpcmVWYWx1ZSk7CiAgICBsZXQgcmV0dXJuVmFsdWU7CiAgICB0cnkgewogICAgICBjb25zdCBwYXJlbnQgPSBwYXRoLnNsaWNlKDAsIC0xKS5yZWR1Y2UoKG9iajIsIHByb3ApID0+IG9iajJbcHJvcF0sIG9iaik7CiAgICAgIGNvbnN0IHJhd1ZhbHVlID0gcGF0aC5yZWR1Y2UoKG9iajIsIHByb3ApID0+IG9iajJbcHJvcF0sIG9iaik7CiAgICAgIHN3aXRjaCAodHlwZSkgewogICAgICAgIGNhc2UgIkdFVCI6CiAgICAgICAgICB7CiAgICAgICAgICAgIHJldHVyblZhbHVlID0gcmF3VmFsdWU7CiAgICAgICAgICB9CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJTRVQiOgogICAgICAgICAgewogICAgICAgICAgICBwYXJlbnRbcGF0aC5zbGljZSgtMSlbMF1dID0gZnJvbVdpcmVWYWx1ZShldi5kYXRhLnZhbHVlKTsKICAgICAgICAgICAgcmV0dXJuVmFsdWUgPSB0cnVlOwogICAgICAgICAgfQogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAiQVBQTFkiOgogICAgICAgICAgewogICAgICAgICAgICByZXR1cm5WYWx1ZSA9IHJhd1ZhbHVlLmFwcGx5KHBhcmVudCwgYXJndW1lbnRMaXN0KTsKICAgICAgICAgIH0KICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgIkNPTlNUUlVDVCI6CiAgICAgICAgICB7CiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gbmV3IHJhd1ZhbHVlKC4uLmFyZ3VtZW50TGlzdCk7CiAgICAgICAgICAgIHJldHVyblZhbHVlID0gcHJveHkodmFsdWUpOwogICAgICAgICAgfQogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAiRU5EUE9JTlQiOgogICAgICAgICAgewogICAgICAgICAgICBjb25zdCB7IHBvcnQxLCBwb3J0MiB9ID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7CiAgICAgICAgICAgIGV4cG9zZShvYmosIHBvcnQyKTsKICAgICAgICAgICAgcmV0dXJuVmFsdWUgPSB0cmFuc2Zlcihwb3J0MSwgW3BvcnQxXSk7CiAgICAgICAgICB9CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJSRUxFQVNFIjoKICAgICAgICAgIHsKICAgICAgICAgICAgcmV0dXJuVmFsdWUgPSB2b2lkIDA7CiAgICAgICAgICB9CiAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICB9IGNhdGNoICh2YWx1ZSkgewogICAgICByZXR1cm5WYWx1ZSA9IHsgdmFsdWUsIFt0aHJvd01hcmtlcl06IDAgfTsKICAgIH0KICAgIFByb21pc2UucmVzb2x2ZShyZXR1cm5WYWx1ZSkuY2F0Y2goKHZhbHVlKSA9PiB7CiAgICAgIHJldHVybiB7IHZhbHVlLCBbdGhyb3dNYXJrZXJdOiAwIH07CiAgICB9KS50aGVuKChyZXR1cm5WYWx1ZTIpID0+IHsKICAgICAgY29uc3QgW3dpcmVWYWx1ZSwgdHJhbnNmZXJhYmxlc10gPSB0b1dpcmVWYWx1ZShyZXR1cm5WYWx1ZTIpOwogICAgICBlcC5wb3N0TWVzc2FnZShPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHdpcmVWYWx1ZSksIHsgaWQgfSksIHRyYW5zZmVyYWJsZXMpOwogICAgICBpZiAodHlwZSA9PT0gIlJFTEVBU0UiKSB7CiAgICAgICAgZXAucmVtb3ZlRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIGNhbGxiYWNrKTsKICAgICAgICBjbG9zZUVuZFBvaW50KGVwKTsKICAgICAgICBpZiAoZmluYWxpemVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW2ZpbmFsaXplcl0gPT09ICJmdW5jdGlvbiIpIHsKICAgICAgICAgIG9ialtmaW5hbGl6ZXJdKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9KS5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgY29uc3QgW3dpcmVWYWx1ZSwgdHJhbnNmZXJhYmxlc10gPSB0b1dpcmVWYWx1ZSh7CiAgICAgICAgdmFsdWU6IG5ldyBUeXBlRXJyb3IoIlVuc2VyaWFsaXphYmxlIHJldHVybiB2YWx1ZSIpLAogICAgICAgIFt0aHJvd01hcmtlcl06IDAKICAgICAgfSk7CiAgICAgIGVwLnBvc3RNZXNzYWdlKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgd2lyZVZhbHVlKSwgeyBpZCB9KSwgdHJhbnNmZXJhYmxlcyk7CiAgICB9KTsKICB9KTsKICBpZiAoZXAuc3RhcnQpIHsKICAgIGVwLnN0YXJ0KCk7CiAgfQp9CmZ1bmN0aW9uIGlzTWVzc2FnZVBvcnQoZW5kcG9pbnQpIHsKICByZXR1cm4gZW5kcG9pbnQuY29uc3RydWN0b3IubmFtZSA9PT0gIk1lc3NhZ2VQb3J0IjsKfQpmdW5jdGlvbiBjbG9zZUVuZFBvaW50KGVuZHBvaW50KSB7CiAgaWYgKGlzTWVzc2FnZVBvcnQoZW5kcG9pbnQpKQogICAgZW5kcG9pbnQuY2xvc2UoKTsKfQpmdW5jdGlvbiB3cmFwKGVwLCB0YXJnZXQpIHsKICBjb25zdCBwZW5kaW5nTGlzdGVuZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTsKICBlcC5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIiwgZnVuY3Rpb24gaGFuZGxlTWVzc2FnZShldikgewogICAgY29uc3QgeyBkYXRhIH0gPSBldjsKICAgIGlmICghZGF0YSB8fCAhZGF0YS5pZCkgewogICAgICByZXR1cm47CiAgICB9CiAgICBjb25zdCByZXNvbHZlciA9IHBlbmRpbmdMaXN0ZW5lcnMuZ2V0KGRhdGEuaWQpOwogICAgaWYgKCFyZXNvbHZlcikgewogICAgICByZXR1cm47CiAgICB9CiAgICB0cnkgewogICAgICByZXNvbHZlcihkYXRhKTsKICAgIH0gZmluYWxseSB7CiAgICAgIHBlbmRpbmdMaXN0ZW5lcnMuZGVsZXRlKGRhdGEuaWQpOwogICAgfQogIH0pOwogIHJldHVybiBjcmVhdGVQcm94eShlcCwgcGVuZGluZ0xpc3RlbmVycywgW10sIHRhcmdldCk7Cn0KZnVuY3Rpb24gdGhyb3dJZlByb3h5UmVsZWFzZWQoaXNSZWxlYXNlZCkgewogIGlmIChpc1JlbGVhc2VkKSB7CiAgICB0aHJvdyBuZXcgRXJyb3IoIlByb3h5IGhhcyBiZWVuIHJlbGVhc2VkIGFuZCBpcyBub3QgdXNlYWJsZSIpOwogIH0KfQpmdW5jdGlvbiByZWxlYXNlRW5kcG9pbnQoZXApIHsKICByZXR1cm4gcmVxdWVzdFJlc3BvbnNlTWVzc2FnZShlcCwgLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKSwgewogICAgdHlwZTogIlJFTEVBU0UiCiAgfSkudGhlbigoKSA9PiB7CiAgICBjbG9zZUVuZFBvaW50KGVwKTsKICB9KTsKfQpjb25zdCBwcm94eUNvdW50ZXIgPSAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtNYXAoKTsKY29uc3QgcHJveHlGaW5hbGl6ZXJzID0gIkZpbmFsaXphdGlvblJlZ2lzdHJ5IiBpbiBnbG9iYWxUaGlzICYmIG5ldyBGaW5hbGl6YXRpb25SZWdpc3RyeSgoZXApID0+IHsKICBjb25zdCBuZXdDb3VudCA9IChwcm94eUNvdW50ZXIuZ2V0KGVwKSB8fCAwKSAtIDE7CiAgcHJveHlDb3VudGVyLnNldChlcCwgbmV3Q291bnQpOwogIGlmIChuZXdDb3VudCA9PT0gMCkgewogICAgcmVsZWFzZUVuZHBvaW50KGVwKTsKICB9Cn0pOwpmdW5jdGlvbiByZWdpc3RlclByb3h5KHByb3h5MiwgZXApIHsKICBjb25zdCBuZXdDb3VudCA9IChwcm94eUNvdW50ZXIuZ2V0KGVwKSB8fCAwKSArIDE7CiAgcHJveHlDb3VudGVyLnNldChlcCwgbmV3Q291bnQpOwogIGlmIChwcm94eUZpbmFsaXplcnMpIHsKICAgIHByb3h5RmluYWxpemVycy5yZWdpc3Rlcihwcm94eTIsIGVwLCBwcm94eTIpOwogIH0KfQpmdW5jdGlvbiB1bnJlZ2lzdGVyUHJveHkocHJveHkyKSB7CiAgaWYgKHByb3h5RmluYWxpemVycykgewogICAgcHJveHlGaW5hbGl6ZXJzLnVucmVnaXN0ZXIocHJveHkyKTsKICB9Cn0KZnVuY3Rpb24gY3JlYXRlUHJveHkoZXAsIHBlbmRpbmdMaXN0ZW5lcnMsIHBhdGggPSBbXSwgdGFyZ2V0ID0gZnVuY3Rpb24oKSB7Cn0pIHsKICBsZXQgaXNQcm94eVJlbGVhc2VkID0gZmFsc2U7CiAgY29uc3QgcHJveHkyID0gbmV3IFByb3h5KHRhcmdldCwgewogICAgZ2V0KF90YXJnZXQsIHByb3ApIHsKICAgICAgdGhyb3dJZlByb3h5UmVsZWFzZWQoaXNQcm94eVJlbGVhc2VkKTsKICAgICAgaWYgKHByb3AgPT09IHJlbGVhc2VQcm94eSkgewogICAgICAgIHJldHVybiAoKSA9PiB7CiAgICAgICAgICB1bnJlZ2lzdGVyUHJveHkocHJveHkyKTsKICAgICAgICAgIHJlbGVhc2VFbmRwb2ludChlcCk7CiAgICAgICAgICBwZW5kaW5nTGlzdGVuZXJzLmNsZWFyKCk7CiAgICAgICAgICBpc1Byb3h5UmVsZWFzZWQgPSB0cnVlOwogICAgICAgIH07CiAgICAgIH0KICAgICAgaWYgKHByb3AgPT09ICJ0aGVuIikgewogICAgICAgIGlmIChwYXRoLmxlbmd0aCA9PT0gMCkgewogICAgICAgICAgcmV0dXJuIHsgdGhlbjogKCkgPT4gcHJveHkyIH07CiAgICAgICAgfQogICAgICAgIGNvbnN0IHIgPSByZXF1ZXN0UmVzcG9uc2VNZXNzYWdlKGVwLCBwZW5kaW5nTGlzdGVuZXJzLCB7CiAgICAgICAgICB0eXBlOiAiR0VUIiwKICAgICAgICAgIHBhdGg6IHBhdGgubWFwKChwKSA9PiBwLnRvU3RyaW5nKCkpCiAgICAgICAgfSkudGhlbihmcm9tV2lyZVZhbHVlKTsKICAgICAgICByZXR1cm4gci50aGVuLmJpbmQocik7CiAgICAgIH0KICAgICAgcmV0dXJuIGNyZWF0ZVByb3h5KGVwLCBwZW5kaW5nTGlzdGVuZXJzLCBbLi4ucGF0aCwgcHJvcF0pOwogICAgfSwKICAgIHNldChfdGFyZ2V0LCBwcm9wLCByYXdWYWx1ZSkgewogICAgICB0aHJvd0lmUHJveHlSZWxlYXNlZChpc1Byb3h5UmVsZWFzZWQpOwogICAgICBjb25zdCBbdmFsdWUsIHRyYW5zZmVyYWJsZXNdID0gdG9XaXJlVmFsdWUocmF3VmFsdWUpOwogICAgICByZXR1cm4gcmVxdWVzdFJlc3BvbnNlTWVzc2FnZShlcCwgcGVuZGluZ0xpc3RlbmVycywgewogICAgICAgIHR5cGU6ICJTRVQiLAogICAgICAgIHBhdGg6IFsuLi5wYXRoLCBwcm9wXS5tYXAoKHApID0+IHAudG9TdHJpbmcoKSksCiAgICAgICAgdmFsdWUKICAgICAgfSwgdHJhbnNmZXJhYmxlcykudGhlbihmcm9tV2lyZVZhbHVlKTsKICAgIH0sCiAgICBhcHBseShfdGFyZ2V0LCBfdGhpc0FyZywgcmF3QXJndW1lbnRMaXN0KSB7CiAgICAgIHRocm93SWZQcm94eVJlbGVhc2VkKGlzUHJveHlSZWxlYXNlZCk7CiAgICAgIGNvbnN0IGxhc3QgPSBwYXRoW3BhdGgubGVuZ3RoIC0gMV07CiAgICAgIGlmIChsYXN0ID09PSBjcmVhdGVFbmRwb2ludCkgewogICAgICAgIHJldHVybiByZXF1ZXN0UmVzcG9uc2VNZXNzYWdlKGVwLCBwZW5kaW5nTGlzdGVuZXJzLCB7CiAgICAgICAgICB0eXBlOiAiRU5EUE9JTlQiCiAgICAgICAgfSkudGhlbihmcm9tV2lyZVZhbHVlKTsKICAgICAgfQogICAgICBpZiAobGFzdCA9PT0gImJpbmQiKSB7CiAgICAgICAgcmV0dXJuIGNyZWF0ZVByb3h5KGVwLCBwZW5kaW5nTGlzdGVuZXJzLCBwYXRoLnNsaWNlKDAsIC0xKSk7CiAgICAgIH0KICAgICAgY29uc3QgW2FyZ3VtZW50TGlzdCwgdHJhbnNmZXJhYmxlc10gPSBwcm9jZXNzQXJndW1lbnRzKHJhd0FyZ3VtZW50TGlzdCk7CiAgICAgIHJldHVybiByZXF1ZXN0UmVzcG9uc2VNZXNzYWdlKGVwLCBwZW5kaW5nTGlzdGVuZXJzLCB7CiAgICAgICAgdHlwZTogIkFQUExZIiwKICAgICAgICBwYXRoOiBwYXRoLm1hcCgocCkgPT4gcC50b1N0cmluZygpKSwKICAgICAgICBhcmd1bWVudExpc3QKICAgICAgfSwgdHJhbnNmZXJhYmxlcykudGhlbihmcm9tV2lyZVZhbHVlKTsKICAgIH0sCiAgICBjb25zdHJ1Y3QoX3RhcmdldCwgcmF3QXJndW1lbnRMaXN0KSB7CiAgICAgIHRocm93SWZQcm94eVJlbGVhc2VkKGlzUHJveHlSZWxlYXNlZCk7CiAgICAgIGNvbnN0IFthcmd1bWVudExpc3QsIHRyYW5zZmVyYWJsZXNdID0gcHJvY2Vzc0FyZ3VtZW50cyhyYXdBcmd1bWVudExpc3QpOwogICAgICByZXR1cm4gcmVxdWVzdFJlc3BvbnNlTWVzc2FnZShlcCwgcGVuZGluZ0xpc3RlbmVycywgewogICAgICAgIHR5cGU6ICJDT05TVFJVQ1QiLAogICAgICAgIHBhdGg6IHBhdGgubWFwKChwKSA9PiBwLnRvU3RyaW5nKCkpLAogICAgICAgIGFyZ3VtZW50TGlzdAogICAgICB9LCB0cmFuc2ZlcmFibGVzKS50aGVuKGZyb21XaXJlVmFsdWUpOwogICAgfQogIH0pOwogIHJlZ2lzdGVyUHJveHkocHJveHkyLCBlcCk7CiAgcmV0dXJuIHByb3h5MjsKfQpmdW5jdGlvbiBteUZsYXQoYXJyKSB7CiAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5jb25jYXQuYXBwbHkoW10sIGFycik7Cn0KZnVuY3Rpb24gcHJvY2Vzc0FyZ3VtZW50cyhhcmd1bWVudExpc3QpIHsKICBjb25zdCBwcm9jZXNzZWQgPSBhcmd1bWVudExpc3QubWFwKHRvV2lyZVZhbHVlKTsKICByZXR1cm4gW3Byb2Nlc3NlZC5tYXAoKHYpID0+IHZbMF0pLCBteUZsYXQocHJvY2Vzc2VkLm1hcCgodikgPT4gdlsxXSkpXTsKfQpjb25zdCB0cmFuc2ZlckNhY2hlID0gLyogQF9fUFVSRV9fICovIG5ldyBXZWFrTWFwKCk7CmZ1bmN0aW9uIHRyYW5zZmVyKG9iaiwgdHJhbnNmZXJzKSB7CiAgdHJhbnNmZXJDYWNoZS5zZXQob2JqLCB0cmFuc2ZlcnMpOwogIHJldHVybiBvYmo7Cn0KZnVuY3Rpb24gcHJveHkob2JqKSB7CiAgcmV0dXJuIE9iamVjdC5hc3NpZ24ob2JqLCB7IFtwcm94eU1hcmtlcl06IHRydWUgfSk7Cn0KZnVuY3Rpb24gdG9XaXJlVmFsdWUodmFsdWUpIHsKICBmb3IgKGNvbnN0IFtuYW1lLCBoYW5kbGVyXSBvZiB0cmFuc2ZlckhhbmRsZXJzKSB7CiAgICBpZiAoaGFuZGxlci5jYW5IYW5kbGUodmFsdWUpKSB7CiAgICAgIGNvbnN0IFtzZXJpYWxpemVkVmFsdWUsIHRyYW5zZmVyYWJsZXNdID0gaGFuZGxlci5zZXJpYWxpemUodmFsdWUpOwogICAgICByZXR1cm4gWwogICAgICAgIHsKICAgICAgICAgIHR5cGU6ICJIQU5ETEVSIiwKICAgICAgICAgIG5hbWUsCiAgICAgICAgICB2YWx1ZTogc2VyaWFsaXplZFZhbHVlCiAgICAgICAgfSwKICAgICAgICB0cmFuc2ZlcmFibGVzCiAgICAgIF07CiAgICB9CiAgfQogIHJldHVybiBbCiAgICB7CiAgICAgIHR5cGU6ICJSQVciLAogICAgICB2YWx1ZQogICAgfSwKICAgIHRyYW5zZmVyQ2FjaGUuZ2V0KHZhbHVlKSB8fCBbXQogIF07Cn0KZnVuY3Rpb24gZnJvbVdpcmVWYWx1ZSh2YWx1ZSkgewogIHN3aXRjaCAodmFsdWUudHlwZSkgewogICAgY2FzZSAiSEFORExFUiI6CiAgICAgIHJldHVybiB0cmFuc2ZlckhhbmRsZXJzLmdldCh2YWx1ZS5uYW1lKS5kZXNlcmlhbGl6ZSh2YWx1ZS52YWx1ZSk7CiAgICBjYXNlICJSQVciOgogICAgICByZXR1cm4gdmFsdWUudmFsdWU7CiAgfQp9CmZ1bmN0aW9uIHJlcXVlc3RSZXNwb25zZU1lc3NhZ2UoZXAsIHBlbmRpbmdMaXN0ZW5lcnMsIG1zZywgdHJhbnNmZXJzKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjb25zdCBpZCA9IGdlbmVyYXRlVVVJRCgpOwogICAgcGVuZGluZ0xpc3RlbmVycy5zZXQoaWQsIHJlc29sdmUpOwogICAgaWYgKGVwLnN0YXJ0KSB7CiAgICAgIGVwLnN0YXJ0KCk7CiAgICB9CiAgICBlcC5wb3N0TWVzc2FnZShPYmplY3QuYXNzaWduKHsgaWQgfSwgbXNnKSwgdHJhbnNmZXJzKTsKICB9KTsKfQpmdW5jdGlvbiBnZW5lcmF0ZVVVSUQoKSB7CiAgcmV0dXJuIG5ldyBBcnJheSg0KS5maWxsKDApLm1hcCgoKSA9PiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUikudG9TdHJpbmcoMTYpKS5qb2luKCItIik7Cn0KYXN5bmMgZnVuY3Rpb24gZmV0Y2hVcmwoaW5wdXQsIGluaXQsIGZldGNoRm4pIHsKICBsZXQgcmVzcG9uc2U7CiAgaWYgKHR5cGVvZiBmZXRjaEZuID09PSAiZnVuY3Rpb24iKSB7CiAgICByZXNwb25zZSA9IGF3YWl0IGZldGNoRm4oaW5wdXQsIGluaXQpOwogIH0gZWxzZSB7CiAgICByZXNwb25zZSA9IGF3YWl0IGZldGNoKGlucHV0LCBpbml0KTsKICB9CiAgaWYgKCFyZXNwb25zZS5vaykgewogICAgY29uc3QganNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsKICAgIGlmIChqc29uICYmIGpzb24uZXJyb3IpIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKGpzb24uZXJyb3IpOwogICAgfSBlbHNlIGlmIChyZXNwb25zZS5zdGF0dXNUZXh0KSB7CiAgICAgIHRocm93IG5ldyBFcnJvcihyZXNwb25zZS5zdGF0dXNUZXh0KTsKICAgIH0gZWxzZSBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDQpIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKGBOb3QgZm91bmQ6ICR7aW5wdXR9ICg0MDQpYCk7CiAgICB9IGVsc2UgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNTAwKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcigiSW50ZXJuYWwgc2VydmVyIGVycm9yICg1MDApIik7CiAgICB9IGVsc2UgewogICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBmZXRjaDogJHtpbnB1dH0gKCR7cmVzcG9uc2Uuc3RhdHVzfSlgKTsKICAgIH0KICB9CiAgcmV0dXJuIHJlc3BvbnNlOwp9CmNvbnN0IGZldGNoQW5kR2V0SW1hZ2VEYXRhV29ya2VyID0gewogIGFzeW5jIGdldEltYWdlRGF0YSh0aWxlVXJsLCBvbkFib3J0LCBmZXRjaEZuLCB3aWR0aCwgaGVpZ2h0KSB7CiAgICBjb25zdCB3b3JrZXJBYm9ydENvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7CiAgICBvbkFib3J0KCk7CiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoVXJsKAogICAgICB0aWxlVXJsLAogICAgICB7CiAgICAgICAgc2lnbmFsOiB3b3JrZXJBYm9ydENvbnRyb2xsZXIuc2lnbmFsCiAgICAgIH0sCiAgICAgIGZldGNoRm4KICAgICk7CiAgICBjb25zdCBibG9iID0gYXdhaXQgcmVzcG9uc2UuYmxvYigpOwogICAgY29uc3QgaW1hZ2VCaXRtYXAgPSBhd2FpdCBjcmVhdGVJbWFnZUJpdG1hcChibG9iLCAwLCAwLCB3aWR0aCwgaGVpZ2h0KTsKICAgIGNvbnN0IGNhbnZhcyA9IG5ldyBPZmZzY3JlZW5DYW52YXMod2lkdGgsIGhlaWdodCk7CiAgICBjb25zdCBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoIjJkIik7CiAgICBpZiAoIWNvbnRleHQpIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKCJDb3VsZCBub3QgY3JlYXRlIE9mZnNjcmVlbkNhbnZhcyBjb250ZXh0Iik7CiAgICB9CiAgICBjb250ZXh0LmRyYXdJbWFnZShpbWFnZUJpdG1hcCwgMCwgMCk7CiAgICBjb25zdCBpbWFnZURhdGEgPSBjb250ZXh0LmdldEltYWdlRGF0YSgwLCAwLCB3aWR0aCwgaGVpZ2h0KTsKICAgIHJldHVybiB0cmFuc2ZlcihpbWFnZURhdGEsIFtpbWFnZURhdGEuZGF0YS5idWZmZXJdKTsKICB9Cn07CmV4cG9zZShmZXRjaEFuZEdldEltYWdlRGF0YVdvcmtlcik7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoLWFuZC1nZXQtaW1hZ2UtZGF0YS1CQzRZc0lHNy5qcy5tYXAK\";\nconst decodeBase64 = (base64) => Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\nconst blob = typeof self !== \"undefined\" && self.Blob && new Blob([\"URL.revokeObjectURL(import.meta.url);\", decodeBase64(encodedJs)], { type: \"text/javascript;charset=utf-8\" });\nfunction WorkerWrapper(options) {\n  let objURL;\n  try {\n    objURL = blob && (self.URL || self.webkitURL).createObjectURL(blob);\n    if (!objURL) throw \"\";\n    const worker = new Worker(objURL, {\n      type: \"module\",\n      name: options?.name\n    });\n    worker.addEventListener(\"error\", () => {\n      (self.URL || self.webkitURL).revokeObjectURL(objURL);\n    });\n    return worker;\n  } catch (e) {\n    return new Worker(\n      \"data:text/javascript;base64,\" + encodedJs,\n      {\n        type: \"module\",\n        name: options?.name\n      }\n    );\n  }\n}\nexport {\n  WorkerWrapper as default\n};\n//# sourceMappingURL=fetch-and-get-image-data.js.map\n", "import { throttle } from 'lodash-es'\nimport { wrap as comlinkWtap } from 'comlink'\n\nimport {\n  hexToFractionalRgb,\n  maxOfNumberOrUndefined,\n  mergeOptions,\n  squaredDistance\n} from '@allmaps/stdlib'\nimport { supportedDistortionMeasures } from '@allmaps/transform'\nimport { red, green, darkblue, yellow, black } from '@allmaps/tailwind'\n\nimport { BaseRenderer } from './BaseRenderer.js'\nimport {\n  WebGL2WarpedMap,\n  createWebGL2WarpedMapFactory\n} from '../maps/WebGL2WarpedMap.js'\nimport { CacheableWorkerImageDataTile } from '../tilecache/CacheableWorkerImageDataTile.js'\nimport {\n  WarpedMapEvent,\n  WarpedMapEventType,\n  WarpedMapTileEventDetail\n} from '../shared/events.js'\nimport {\n  multiplyHomogeneousTransform,\n  invertHomogeneousTransform,\n  homogeneousTransformToMatrix4\n} from '../shared/homogeneous-transform.js'\nimport { createShader, createProgram } from '../shared/webgl2.js'\nimport { Viewport } from '../viewport/Viewport.js'\n\nimport mapVertexShaderSource from '../shaders/map/vertex-shader.glsl'\nimport mapFragmentShaderSource from '../shaders/map/fragment-shader.glsl'\nimport linesVertexShaderSource from '../shaders/lines/vertex-shader.glsl'\nimport linesFragmentShaderSource from '../shaders/lines/fragment-shader.glsl'\nimport pointsVertexShaderSource from '../shaders/points/vertex-shader.glsl'\nimport pointsFragmentShaderSource from '../shaders/points/fragment-shader.glsl'\n\n// Using the recommended URL constructor -\n// See https://vite.dev/guide/features.html#import-with-constructors -\n// leads to import errors when publising on platforms like jsdelivr.\n// Using the inline query parameter solves this.\nimport FetchAndGetImageDataWorker from '../workers/fetch-and-get-image-data.js?worker&inline'\n\nimport type { DebouncedFunc } from 'lodash-es'\n\nimport type { FetchableTile } from '../tilecache/FetchableTile.js'\n\nimport type { FetchAndGetImageDataWorkerType } from '../workers/fetch-and-get-image-data.js'\n\nimport type {\n  Renderer,\n  RenderOptions,\n  RemoveColorOptions,\n  ColorizeOptions,\n  GridOptions,\n  WebGL2RendererOptions\n} from '../shared/types.js'\n\nconst THROTTLE_PREPARE_RENDER_WAIT_MS = 200\nconst THROTTLE_PREPARE_RENDER_OPTIONS = {\n  leading: true,\n  trailing: true\n}\n\nconst THROTTLE_CHANGED_WAIT_MS = 50\nconst THROTTLE_CHANGED_OPTIONS = {\n  leading: true,\n  trailing: true\n}\n\nconst defaultWebgl2RendererOptions = {\n  debugMaps: false,\n  renderMaps: true,\n  renderLines: true,\n  renderPoints: true\n}\n\nconst DEFAULT_OPACITY = 1\nconst DEFAULT_SATURATION = 1\nconst DEFAULT_REMOVE_COLOR_THRESHOLD = 0\nconst DEFAULT_REMOVE_COLOR_HARDNESS = 0.7\nconst SIGNIFICANT_VIEWPORT_EPSILON = 100 * Number.EPSILON\nconst SIGNIFICANT_VIEWPORT_DISTANCE = 5\nconst ANIMATION_DURATION = 750\n\n/**\n * Class that renders WarpedMaps to a WebGL 2 context\n */\nexport class WebGL2Renderer\n  extends BaseRenderer<WebGL2WarpedMap, ImageData>\n  implements Renderer\n{\n  #worker: Worker\n\n  gl: WebGL2RenderingContext\n\n  partialWebgl2RendererOptions: Partial<WebGL2RendererOptions>\n\n  mapProgram: WebGLProgram\n  linesProgram: WebGLProgram\n  pointsProgram: WebGLProgram\n\n  previousSignificantViewport: Viewport | undefined\n\n  opacity: number = DEFAULT_OPACITY\n  saturation: number = DEFAULT_SATURATION\n  renderOptions: RenderOptions = {}\n\n  lastAnimationFrameRequestId: number | undefined\n  animating = false\n  transformaterTransitionStart: number | undefined\n  animationProgress = 0\n\n  disableRender = false\n\n  private throttledPrepareRenderInternal: DebouncedFunc<\n    typeof this.prepareRenderInternal\n  >\n\n  private throttledChanged: DebouncedFunc<typeof this.changed>\n\n  /**\n   * Creates an instance of WebGL2Renderer.\n   *\n   * @constructor\n   * @param gl - WebGL 2 rendering context\n   * @param options - options\n   */\n  constructor(\n    gl: WebGL2RenderingContext,\n    options?: Partial<WebGL2RendererOptions>\n  ) {\n    const mapVertexShader = createShader(\n      gl,\n      gl.VERTEX_SHADER,\n      mapVertexShaderSource\n    )\n    const mapFragmentShader = createShader(\n      gl,\n      gl.FRAGMENT_SHADER,\n      mapFragmentShaderSource\n    )\n\n    const linesVertexShader = createShader(\n      gl,\n      gl.VERTEX_SHADER,\n      linesVertexShaderSource\n    )\n    const linesFragmentShader = createShader(\n      gl,\n      gl.FRAGMENT_SHADER,\n      linesFragmentShaderSource\n    )\n\n    const pointsVertexShader = createShader(\n      gl,\n      gl.VERTEX_SHADER,\n      pointsVertexShaderSource\n    )\n    const pointsFragmentShader = createShader(\n      gl,\n      gl.FRAGMENT_SHADER,\n      pointsFragmentShaderSource\n    )\n\n    const mapProgram = createProgram(gl, mapVertexShader, mapFragmentShader)\n    const linesProgram = createProgram(\n      gl,\n      linesVertexShader,\n      linesFragmentShader\n    )\n    const pointsProgram = createProgram(\n      gl,\n      pointsVertexShader,\n      pointsFragmentShader\n    )\n\n    const worker = new FetchAndGetImageDataWorker()\n    const wrappedWorker = comlinkWtap<FetchAndGetImageDataWorkerType>(worker)\n\n    super(\n      CacheableWorkerImageDataTile.createFactory(wrappedWorker),\n      createWebGL2WarpedMapFactory(gl, mapProgram, linesProgram, pointsProgram),\n      options\n    )\n\n    this.#worker = worker\n    this.gl = gl\n\n    this.partialWebgl2RendererOptions = mergeOptions(\n      defaultWebgl2RendererOptions,\n      options\n    )\n\n    this.mapProgram = mapProgram\n    this.linesProgram = linesProgram\n    this.pointsProgram = pointsProgram\n\n    // Unclear how to remove shaders, possibly already after linking to program, see:\n    // https://stackoverflow.com/questions/9113154/proper-way-to-delete-glsl-shader\n    // https://stackoverflow.com/questions/27237696/webgl-detach-and-delete-shaders-after-linking\n    gl.deleteShader(mapVertexShader)\n    gl.deleteShader(mapFragmentShader)\n    gl.deleteShader(mapVertexShader)\n    gl.deleteShader(mapFragmentShader)\n    gl.deleteShader(mapVertexShader)\n    gl.deleteShader(mapFragmentShader)\n\n    gl.disable(gl.DEPTH_TEST)\n\n    this.addEventListeners()\n\n    this.throttledPrepareRenderInternal = throttle(\n      this.prepareRenderInternal.bind(this),\n      THROTTLE_PREPARE_RENDER_WAIT_MS,\n      THROTTLE_PREPARE_RENDER_OPTIONS\n    )\n\n    this.throttledChanged = throttle(\n      this.changed.bind(this),\n      THROTTLE_CHANGED_WAIT_MS,\n      THROTTLE_CHANGED_OPTIONS\n    )\n  }\n\n  initializeWebGL(gl: WebGL2RenderingContext) {\n    // This code is duplicated from the constructor to allow for context loss and restoration\n    // Can't call this function in the constructor, because 'super' must be called before accessing 'this'\n    const mapVertexShader = createShader(\n      gl,\n      gl.VERTEX_SHADER,\n      mapVertexShaderSource\n    )\n    const mapFragmentShader = createShader(\n      gl,\n      gl.FRAGMENT_SHADER,\n      mapFragmentShaderSource\n    )\n\n    const linesVertexShader = createShader(\n      gl,\n      gl.VERTEX_SHADER,\n      linesVertexShaderSource\n    )\n    const linesFragmentShader = createShader(\n      gl,\n      gl.FRAGMENT_SHADER,\n      linesFragmentShaderSource\n    )\n\n    const pointsVertexShader = createShader(\n      gl,\n      gl.VERTEX_SHADER,\n      pointsVertexShaderSource\n    )\n    const pointsFragmentShader = createShader(\n      gl,\n      gl.FRAGMENT_SHADER,\n      pointsFragmentShaderSource\n    )\n\n    const mapProgram = createProgram(gl, mapVertexShader, mapFragmentShader)\n    const linesProgram = createProgram(\n      gl,\n      linesVertexShader,\n      linesFragmentShader\n    )\n    const pointsProgram = createProgram(\n      gl,\n      pointsVertexShader,\n      pointsFragmentShader\n    )\n\n    this.gl = gl\n    this.mapProgram = mapProgram\n    this.linesProgram = linesProgram\n    this.pointsProgram = pointsProgram\n\n    gl.disable(gl.DEPTH_TEST)\n\n    for (const webgl2WarpedMap of this.warpedMapList.getWarpedMaps()) {\n      webgl2WarpedMap.initializeWebGL(mapProgram, linesProgram, pointsProgram)\n    }\n  }\n\n  /**\n   * Get the opacity of the renderer\n   *\n   * @returns\n   */\n  getOpacity(): number | undefined {\n    return this.opacity\n  }\n\n  /**\n   * Set the opacity of the renderer\n   *\n   * @param opacity - opacity to set\n   */\n  setOpacity(opacity: number): void {\n    this.opacity = opacity\n  }\n\n  /**\n   * Reset the opacity of the renderer\n   */\n  resetOpacity(): void {\n    this.opacity = DEFAULT_OPACITY\n  }\n\n  /**\n   * Get the opacity of a map\n   *\n   * @param mapId - ID of the map\n   * @returns\n   */\n  getMapOpacity(mapId: string): number | undefined {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n\n    if (webgl2WarpedMap) {\n      return webgl2WarpedMap.opacity\n    }\n  }\n\n  /**\n   * Set the opacity of a map\n   *\n   * @param mapId - ID of the map\n   * @param opacity - opacity to set\n   */\n  setMapOpacity(mapId: string, opacity: number): void {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webgl2WarpedMap) {\n      webgl2WarpedMap.opacity = Math.min(Math.max(opacity, 0), 1)\n    }\n  }\n\n  /**\n   * Rreset the opacity of a map\n   *\n   * @param mapId - ID of the map\n   */\n  resetMapOpacity(mapId: string): void {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webgl2WarpedMap) {\n      webgl2WarpedMap.opacity = DEFAULT_OPACITY\n    }\n  }\n\n  /**\n   * Get the remove color options of the renderer\n   *\n   * @returns\n   */\n  getRemoveColorOptions(): Partial<RemoveColorOptions> | undefined {\n    return this.renderOptions.removeColorOptions\n  }\n\n  /**\n   * Set the remove color options of the renderer\n   *\n   * @param removeColorOptions\n   */\n  setRemoveColorOptions(removeColorOptions: RemoveColorOptions) {\n    this.renderOptions.removeColorOptions = removeColorOptions\n  }\n\n  /**\n   * Reset the remove color options of the renderer\n   */\n  resetRemoveColorOptions() {\n    this.renderOptions.removeColorOptions = undefined\n  }\n\n  /**\n   * Get the remove color options of a map\n   *\n   * @param mapId - ID of the map\n   * @returns\n   */\n  getMapRemoveColorOptions(\n    mapId: string\n  ): Partial<RemoveColorOptions> | undefined {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webgl2WarpedMap) {\n      return webgl2WarpedMap.renderOptions.removeColorOptions\n    }\n  }\n\n  /**\n   * Set the WebGL2 Renderer options\n   *\n   * @param partialWebgl2RendererOptions - Options\n   */\n  setOptions(\n    partialWebgl2RendererOptions?: Partial<WebGL2RendererOptions>\n  ): void {\n    this.partialWebgl2RendererOptions = mergeOptions(\n      this.partialWebgl2RendererOptions,\n      partialWebgl2RendererOptions\n    )\n    super.setOptions(partialWebgl2RendererOptions)\n  }\n\n  /**\n   * Set the remove color options of a map\n   *\n   * @param mapId - ID of the map\n   * @param removeColorOptions - the 'remove color options' to set\n   */\n  setMapRemoveColorOptions(\n    mapId: string,\n    removeColorOptions: RemoveColorOptions\n  ): void {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webgl2WarpedMap) {\n      webgl2WarpedMap.renderOptions.removeColorOptions = removeColorOptions\n    }\n  }\n\n  /**\n   * Reset the remove color options of a map\n   *\n   * @param mapId - ID of the map\n   */\n  resetMapRemoveColorOptions(mapId: string): void {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webgl2WarpedMap) {\n      webgl2WarpedMap.renderOptions.removeColorOptions = undefined\n    }\n  }\n\n  /**\n   * Get the colorize options of the renderer\n   *\n   * @returns\n   */\n  getColorizeOptions(): Partial<ColorizeOptions> | undefined {\n    return this.renderOptions.colorizeOptions\n  }\n\n  /**\n   * Set the colorize options of the renderer\n   *\n   * @param colorizeOptions - the colorize options to set\n   */\n  setColorizeOptions(colorizeOptions: ColorizeOptions): void {\n    this.renderOptions.colorizeOptions = colorizeOptions\n  }\n\n  /**\n   * Reset the colorize options of the renderer\n   */\n  resetColorizeOptions(): void {\n    this.renderOptions.colorizeOptions = undefined\n  }\n\n  /**\n   * Get the colorize options of a map\n   *\n   * @param mapId - ID of the map\n   * @returns Colorize options\n   */\n  getMapColorizeOptions(mapId: string): Partial<ColorizeOptions> | undefined {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webgl2WarpedMap) {\n      return webgl2WarpedMap.renderOptions.colorizeOptions\n    }\n  }\n\n  /**\n   * Set the colorize options of a map\n   *\n   * @param mapId - ID of the map\n   * @param colorizeOptions - the colorize options to set\n   */\n  setMapColorizeOptions(mapId: string, colorizeOptions: ColorizeOptions): void {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webgl2WarpedMap) {\n      webgl2WarpedMap.renderOptions.colorizeOptions = colorizeOptions\n    }\n  }\n\n  /**\n   * Reset the colorize options of a map\n   *\n   * @param mapId - ID of the map\n   */\n  resetMapColorizeOptions(mapId: string): void {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webgl2WarpedMap) {\n      webgl2WarpedMap.renderOptions.colorizeOptions = undefined\n    }\n  }\n\n  /**\n   * Get the grid options of the renderer\n   *\n   * @returns\n   */\n  getGridOptions(): Partial<GridOptions> | undefined {\n    return this.renderOptions.gridOptions\n  }\n\n  /**\n   * Set the grid options of the renderer\n   *\n   * @param gridOptions - the grid options to set\n   */\n  setGridOptions(gridOptions: GridOptions): void {\n    this.renderOptions.gridOptions = gridOptions\n  }\n\n  /**\n   * Reset the grid options of the renderer\n   */\n  resetGridOptions(): void {\n    this.renderOptions.gridOptions = undefined\n  }\n\n  /**\n   * Get the grid options of a map\n   *\n   * @param mapId - ID of the map\n   * @returns\n   */\n  getMapGridOptions(mapId: string): Partial<GridOptions> | undefined {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webgl2WarpedMap) {\n      return webgl2WarpedMap.renderOptions.gridOptions\n    }\n  }\n\n  /**\n   * Set the grid options of a map\n   *\n   * @param mapId - ID of the map\n   * @param gridOptions - the grid options to set\n   */\n  setMapGridOptions(mapId: string, gridOptions: GridOptions): void {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webgl2WarpedMap) {\n      webgl2WarpedMap.renderOptions.gridOptions = gridOptions\n    }\n  }\n\n  /**\n   * Reset the grid options of a map\n   *\n   * @param mapId - ID of the map\n   */\n  resetMapGridOptions(mapId: string): void {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webgl2WarpedMap) {\n      webgl2WarpedMap.renderOptions.gridOptions = undefined\n    }\n  }\n\n  /**\n   * Get the saturation of the renderer\n   *\n   * @returns\n   */\n  getSaturation(): number {\n    return this.saturation\n  }\n\n  /**\n   * Set the saturation of the renderer\n   *\n   * 0 - grayscale, 1 - original colors\n   *\n   * @param saturation - the satuation to set\n   */\n  setSaturation(saturation: number): void {\n    this.saturation = saturation\n  }\n\n  /**\n   * Reset the satuation of the renderer\n   */\n  resetSaturation(): void {\n    this.saturation = DEFAULT_SATURATION\n  }\n\n  /**\n   * Get the saturation of a map\n   *\n   * @param mapId - ID of the map\n   * @returns\n   */\n  getMapSaturation(mapId: string): number | undefined {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webgl2WarpedMap) {\n      return webgl2WarpedMap.saturation\n    }\n  }\n\n  /**\n   * Set the saturation of a map\n   *\n   * 0 - grayscale, 1 - original colors\n   *\n   * @param mapId - ID of the map\n   * @param saturation - the saturation to set\n   */\n  setMapSaturation(mapId: string, saturation: number): void {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webgl2WarpedMap) {\n      webgl2WarpedMap.saturation = saturation\n    }\n  }\n\n  /**\n   * Reset the saturation of a map\n   *\n   * @param mapId - ID of the map\n   */\n  resetMapSaturation(mapId: string): void {\n    const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webgl2WarpedMap) {\n      webgl2WarpedMap.saturation = DEFAULT_SATURATION\n    }\n  }\n\n  /**\n   * Render the map for a given viewport.\n   *\n   * If no viewport is specified the current viewport is rerendered.\n   * If no current viewport is known, a viewport is deduced based on the WarpedMapList and canvas width and hight.\n   *\n   * @param viewport - the current viewport\n   */\n  render(viewport?: Viewport): void {\n    if (this.disableRender) {\n      return\n    }\n\n    this.viewport =\n      viewport ||\n      this.viewport ||\n      Viewport.fromSizeAndMaps(\n        [this.gl.canvas.width, this.gl.canvas.width],\n        this.warpedMapList\n      )\n\n    // Not awaiting this, using events to trigger new render calls\n    this.loadMissingImageInfosInViewport()\n\n    // Don't fire throttled function unless it could result in something\n    // Otherwise we have to wait for that cycle to finish before useful cycle can be started\n    if (this.someImageInfosInViewport()) {\n      this.throttledPrepareRenderInternal()\n    }\n\n    this.renderInternal()\n  }\n\n  clear() {\n    this.warpedMapList.clear()\n    this.mapsInViewport = new Set()\n    this.mapsWithRequestedTilesForViewport = new Set()\n    this.gl.clear(this.gl.DEPTH_BUFFER_BIT | this.gl.COLOR_BUFFER_BIT)\n    this.tileCache.clear()\n  }\n\n  cancelThrottledFunctions() {\n    this.throttledPrepareRenderInternal.cancel()\n    this.throttledChanged.cancel()\n  }\n\n  destroy() {\n    this.cancelThrottledFunctions()\n\n    for (const webgl2WarpedMap of this.warpedMapList.getWarpedMaps()) {\n      this.removeEventListenersFromWebGL2WarpedMap(webgl2WarpedMap)\n    }\n\n    this.removeEventListeners()\n\n    super.destroy()\n\n    this.gl.deleteProgram(this.mapProgram)\n    this.gl.deleteProgram(this.linesProgram)\n    this.gl.deleteProgram(this.pointsProgram)\n\n    this.#worker.terminate()\n    // Can't delete context, see:\n    // https://stackoverflow.com/questions/14970206/deleting-webgl-contexts\n  }\n\n  protected updateMapsForViewport(tiles: FetchableTile[]): {\n    mapsEnteringViewport: string[]\n    mapsLeavingViewport: string[]\n  } {\n    const { mapsEnteringViewport, mapsLeavingViewport } =\n      super.updateMapsForViewport(tiles)\n\n    this.updateVertexBuffers(mapsEnteringViewport)\n\n    return { mapsEnteringViewport, mapsLeavingViewport }\n  }\n\n  protected resetPrevious(mapIds?: string[]) {\n    const webgl2WarpedMaps = this.warpedMapList.getWarpedMaps({ mapIds })\n    for (const webgl2WarpedMap of webgl2WarpedMaps) {\n      webgl2WarpedMap.resetPrevious()\n    }\n  }\n\n  protected updateVertexBuffers(mapIds?: string[]) {\n    if (!this.viewport) {\n      return\n    }\n\n    const webgl2WarpedMaps = this.warpedMapList.getWarpedMaps({ mapIds })\n    for (const webgl2WarpedMap of webgl2WarpedMaps) {\n      webgl2WarpedMap.updateVertexBuffers(\n        this.viewport.projectedGeoToClipHomogeneousTransform,\n        this.partialWebgl2RendererOptions\n      )\n    }\n  }\n\n  private prepareRenderInternal(): void {\n    this.assureProjection()\n    this.requestFetchableTiles()\n  }\n\n  protected shouldRequestFetchableTiles(): boolean {\n    // Returns whether requested tiles should be updated\n\n    // Returns true when the viewport moved significantly\n    // > to prevent updating requested tiles on minimal movements/\n    // Returns true when the viewport didn't move at all\n    // > since this function is called (possibly multiple times) during startup, without changes to the viewport\n    // Returns false in other cases\n\n    // TODO: this could be a problem if the viewport is quickly and continuously moved\n    // within the tolerance during initial loading.\n    // Possible solution: adding a 'allrendered' event and listening to it.\n\n    if (!this.viewport) {\n      return false\n    }\n    if (this.animating) {\n      return false\n    }\n    if (!this.previousSignificantViewport) {\n      this.previousSignificantViewport = this.viewport\n      return true\n    } else {\n      const rectangleSquaredDistances = []\n      for (let i = 0; i < 4; i++) {\n        rectangleSquaredDistances.push(\n          squaredDistance(\n            this.previousSignificantViewport.projectedGeoRectangle[i],\n            this.viewport.projectedGeoRectangle[i]\n          ) / Math.pow(this.viewport.projectedGeoPerViewportScale, 2)\n        )\n      }\n      const maxSquaredDistance = Math.max(...rectangleSquaredDistances)\n      if (maxSquaredDistance < SIGNIFICANT_VIEWPORT_EPSILON) {\n        return true\n      }\n      if (maxSquaredDistance > Math.pow(SIGNIFICANT_VIEWPORT_DISTANCE, 2)) {\n        this.previousSignificantViewport = this.viewport\n        return true\n      } else {\n        return false\n      }\n    }\n  }\n\n  protected shouldAnticipateInteraction() {\n    // Get a map's overview tiles only for this render\n    return true\n  }\n\n  private renderInternal(): void {\n    if (!this.viewport) {\n      return\n    }\n\n    const gl = this.gl\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\n    gl.enable(gl.BLEND)\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA)\n\n    if (this.partialWebgl2RendererOptions.renderMaps) {\n      this.renderMapsInternal()\n    }\n    if (this.partialWebgl2RendererOptions.renderLines) {\n      this.renderLinesInternal()\n    }\n    if (this.partialWebgl2RendererOptions.renderPoints) {\n      this.renderPointsInternal()\n    }\n  }\n\n  private renderMapsInternal(): void {\n    if (!this.viewport) {\n      return\n    }\n\n    this.setMapProgramUniforms()\n\n    for (const mapId of this.mapsWithRequestedTilesForViewport) {\n      const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n\n      if (!webgl2WarpedMap) {\n        continue\n      }\n\n      this.setMapProgramRenderOptionsUniforms(\n        this.renderOptions,\n        webgl2WarpedMap.renderOptions\n      )\n      this.setMapProgramMapUniforms(webgl2WarpedMap)\n\n      // Draw map\n      const count = webgl2WarpedMap.resourceTrianglePoints.length\n      const primitiveType = this.gl.TRIANGLES\n      const offset = 0\n      this.gl.bindVertexArray(webgl2WarpedMap.mapVao)\n      this.gl.drawArrays(primitiveType, offset, count)\n    }\n  }\n\n  private renderLinesInternal(): void {\n    this.setLinesProgramUniforms()\n\n    for (const mapId of this.mapsInViewport) {\n      const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n\n      if (!webgl2WarpedMap) {\n        continue\n      }\n\n      this.setLinesProgramMapUniforms(webgl2WarpedMap)\n\n      // Draw lines for each map\n      const count =\n        webgl2WarpedMap.lineLayers.reduce(\n          (accumulator: number, lineLayer) =>\n            accumulator + lineLayer.projectedGeoLines.length,\n          0\n        ) * 6\n      const primitiveType = this.gl.TRIANGLES\n      const offset = 0\n      this.gl.bindVertexArray(webgl2WarpedMap.linesVao)\n      this.gl.drawArrays(primitiveType, offset, count)\n    }\n  }\n\n  private renderPointsInternal(): void {\n    this.setPointsProgramUniforms()\n\n    for (const mapId of this.mapsInViewport) {\n      const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n\n      if (!webgl2WarpedMap) {\n        continue\n      }\n\n      this.setPointsProgramMapUniforms(webgl2WarpedMap)\n\n      // Draw points for each map\n      const count = webgl2WarpedMap.pointLayers.reduce(\n        (accumulator: number, pointLayer) =>\n          accumulator + pointLayer.projectedGeoPoints.length,\n        0\n      )\n      const primitiveType = this.gl.POINTS\n      const offset = 0\n      this.gl.bindVertexArray(webgl2WarpedMap.pointsVao)\n      this.gl.drawArrays(primitiveType, offset, count)\n    }\n  }\n\n  private setMapProgramUniforms() {\n    const program = this.mapProgram\n    const gl = this.gl\n    gl.useProgram(program)\n\n    // Debug\n    const debugLocation = gl.getUniformLocation(program, 'u_debug')\n    gl.uniform1f(\n      debugLocation,\n      this.partialWebgl2RendererOptions.debugMaps ? 1 : 0\n    )\n\n    // Animation progress\n    const animationProgressLocation = gl.getUniformLocation(\n      program,\n      'u_animationProgress'\n    )\n    gl.uniform1f(animationProgressLocation, this.animationProgress)\n\n    // Distortion colors\n    // TODO: make these colors pickable\n    const colorDistortion00 = gl.getUniformLocation(\n      program,\n      'u_colorDistortion00'\n    )\n    gl.uniform4f(colorDistortion00, ...hexToFractionalRgb(red), 1)\n\n    const colorDistortion01 = gl.getUniformLocation(\n      program,\n      'u_colorDistortion01'\n    )\n    gl.uniform4f(colorDistortion01, ...hexToFractionalRgb(darkblue), 1)\n\n    const colorDistortion1 = gl.getUniformLocation(\n      program,\n      'u_colorDistortion1'\n    )\n    gl.uniform4f(colorDistortion1, ...hexToFractionalRgb(green), 1)\n\n    const colorDistortion2 = gl.getUniformLocation(\n      program,\n      'u_colorDistortion2'\n    )\n    gl.uniform4f(colorDistortion2, ...hexToFractionalRgb(yellow), 1)\n\n    const colorDistortion3 = gl.getUniformLocation(\n      program,\n      'u_colorDistortion3'\n    )\n    gl.uniform4f(colorDistortion3, ...hexToFractionalRgb(red), 1)\n\n    const colorGrid = gl.getUniformLocation(program, 'u_colorGrid')\n    gl.uniform4f(colorGrid, ...hexToFractionalRgb(black), 1)\n  }\n\n  private setMapProgramRenderOptionsUniforms(\n    layerRenderOptions: RenderOptions,\n    mapRenderOptions: RenderOptions\n  ) {\n    const gl = this.gl\n    const program = this.mapProgram\n    gl.useProgram(program)\n\n    const renderOptions: RenderOptions = {\n      removeColorOptions: {\n        color:\n          mapRenderOptions.removeColorOptions?.color ||\n          layerRenderOptions.removeColorOptions?.color,\n        hardness: maxOfNumberOrUndefined(\n          mapRenderOptions.removeColorOptions?.hardness,\n          layerRenderOptions.removeColorOptions?.hardness\n        ),\n        threshold: maxOfNumberOrUndefined(\n          mapRenderOptions.removeColorOptions?.threshold,\n          layerRenderOptions.removeColorOptions?.threshold\n        )\n      },\n      colorizeOptions: {\n        ...layerRenderOptions.colorizeOptions,\n        ...mapRenderOptions.colorizeOptions\n      },\n      gridOptions: {\n        ...layerRenderOptions.gridOptions,\n        ...mapRenderOptions.gridOptions\n      }\n    }\n\n    // Remove color uniforms\n    const removeColorOptionsColor = renderOptions.removeColorOptions?.color\n\n    const removeColorLocation = gl.getUniformLocation(program, 'u_removeColor')\n    gl.uniform1f(removeColorLocation, removeColorOptionsColor ? 1 : 0)\n\n    if (removeColorOptionsColor) {\n      const removeColorOptionsColorLocation = gl.getUniformLocation(\n        program,\n        'u_removeColorOptionsColor'\n      )\n      gl.uniform3fv(removeColorOptionsColorLocation, removeColorOptionsColor)\n\n      const removeColorOptionsThresholdLocation = gl.getUniformLocation(\n        program,\n        'u_removeColorOptionsThreshold'\n      )\n      gl.uniform1f(\n        removeColorOptionsThresholdLocation,\n        renderOptions.removeColorOptions?.threshold ||\n          DEFAULT_REMOVE_COLOR_THRESHOLD\n      )\n\n      const removeColorOptionsHardnessLocation = gl.getUniformLocation(\n        program,\n        'u_removeColorOptionsHardness'\n      )\n      gl.uniform1f(\n        removeColorOptionsHardnessLocation,\n        renderOptions.removeColorOptions?.hardness ||\n          DEFAULT_REMOVE_COLOR_HARDNESS\n      )\n    }\n\n    // Colorize uniforms\n    const colorizeOptionsColor = renderOptions.colorizeOptions?.color\n\n    const colorizeLocation = gl.getUniformLocation(program, 'u_colorize')\n    gl.uniform1f(colorizeLocation, colorizeOptionsColor ? 1 : 0)\n\n    if (colorizeOptionsColor) {\n      const colorizeOptionsColorLocation = gl.getUniformLocation(\n        program,\n        'u_colorizeOptionsColor'\n      )\n      gl.uniform3fv(colorizeOptionsColorLocation, colorizeOptionsColor)\n    }\n\n    // Grid uniforms\n    const gridOptionsGrid = renderOptions.gridOptions?.enabled\n\n    const gridLocation = gl.getUniformLocation(program, 'u_grid')\n    gl.uniform1f(gridLocation, gridOptionsGrid ? 1 : 0)\n  }\n\n  private setMapProgramMapUniforms(webgl2WarpedMap: WebGL2WarpedMap) {\n    if (!this.viewport) {\n      return\n    }\n\n    const gl = this.gl\n    const program = this.mapProgram\n    gl.useProgram(program)\n\n    // Render Transform\n    const renderHomogeneousTransform = multiplyHomogeneousTransform(\n      this.viewport.projectedGeoToClipHomogeneousTransform,\n      webgl2WarpedMap.invertedRenderHomogeneousTransform\n    )\n    const renderHomogeneousTransformLocation = gl.getUniformLocation(\n      program,\n      'u_renderHomogeneousTransform'\n    )\n    gl.uniformMatrix4fv(\n      renderHomogeneousTransformLocation,\n      false,\n      homogeneousTransformToMatrix4(renderHomogeneousTransform)\n    )\n\n    // Opacity\n    const opacityLocation = gl.getUniformLocation(program, 'u_opacity')\n    gl.uniform1f(opacityLocation, this.opacity * webgl2WarpedMap.opacity)\n\n    // Saturation\n    const saturationLocation = gl.getUniformLocation(program, 'u_saturation')\n    gl.uniform1f(\n      saturationLocation,\n      this.saturation * webgl2WarpedMap.saturation\n    )\n\n    // Distortion\n    const distortionLocation = gl.getUniformLocation(program, 'u_distortion')\n    gl.uniform1f(distortionLocation, webgl2WarpedMap.distortionMeasure ? 1 : 0)\n\n    const distortionOptionsDistortionMeasureLocation = gl.getUniformLocation(\n      program,\n      'u_distortionOptionsdistortionMeasure'\n    )\n    gl.uniform1i(\n      distortionOptionsDistortionMeasureLocation,\n      webgl2WarpedMap.distortionMeasure\n        ? supportedDistortionMeasures.indexOf(webgl2WarpedMap.distortionMeasure)\n        : 0\n    )\n\n    // Best scale factor\n    const scaleFactorForViewportLocation = gl.getUniformLocation(\n      program,\n      'u_scaleFactorForViewport'\n    )\n    const scaleFactorForViewport = webgl2WarpedMap.tileZoomLevelForViewport\n      ? webgl2WarpedMap.tileZoomLevelForViewport.scaleFactor\n      : 1\n    gl.uniform1i(scaleFactorForViewportLocation, scaleFactorForViewport)\n\n    // Cached tiles texture array\n    const cachedTilesTextureArrayLocation = gl.getUniformLocation(\n      program,\n      'u_cachedTilesTextureArray'\n    )\n    gl.uniform1i(cachedTilesTextureArrayLocation, 0)\n    gl.activeTexture(gl.TEXTURE0)\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, webgl2WarpedMap.cachedTilesTextureArray)\n\n    // Cached tiles resource origin points and dimensions texture\n    const cachedTilesResourceOriginPointsAndDimensionsLocation =\n      gl.getUniformLocation(\n        program,\n        'u_cachedTilesResourceOriginPointsAndDimensionsTexture'\n      )\n    gl.uniform1i(cachedTilesResourceOriginPointsAndDimensionsLocation, 1)\n    gl.activeTexture(gl.TEXTURE1)\n\n    gl.bindTexture(\n      gl.TEXTURE_2D,\n      webgl2WarpedMap.cachedTilesResourceOriginPointsAndDimensionsTexture\n    )\n\n    // Cached tiles scale factors texture\n    const cachedTileScaleFactorsTextureLocation = gl.getUniformLocation(\n      program,\n      'u_cachedTilesScaleFactorsTexture'\n    )\n    gl.uniform1i(cachedTileScaleFactorsTextureLocation, 2)\n    gl.activeTexture(gl.TEXTURE2)\n    gl.bindTexture(\n      gl.TEXTURE_2D,\n      webgl2WarpedMap.cachedTilesScaleFactorsTexture\n    )\n  }\n\n  private setLinesProgramUniforms() {\n    if (!this.viewport) {\n      return\n    }\n\n    const gl = this.gl\n    const program = this.linesProgram\n    gl.useProgram(program)\n\n    // ViewportToClip Transform\n    const viewportToClipHomogeneousTransformLocation = gl.getUniformLocation(\n      program,\n      'u_viewportToClipHomogeneousTransform'\n    )\n    gl.uniformMatrix4fv(\n      viewportToClipHomogeneousTransformLocation,\n      false,\n      homogeneousTransformToMatrix4(\n        this.viewport.viewportToClipHomogeneousTransform\n      )\n    )\n\n    // clipToViewport Transform\n    const clipToViewportHomogeneousTransformLocation = gl.getUniformLocation(\n      program,\n      'u_clipToViewportHomogeneousTransform'\n    )\n    gl.uniformMatrix4fv(\n      clipToViewportHomogeneousTransformLocation,\n      false,\n      homogeneousTransformToMatrix4(\n        invertHomogeneousTransform(\n          this.viewport.viewportToClipHomogeneousTransform\n        )\n      )\n    )\n\n    // Animation progress\n    const animationProgressLocation = gl.getUniformLocation(\n      program,\n      'u_animationProgress'\n    )\n    gl.uniform1f(animationProgressLocation, this.animationProgress)\n  }\n\n  private setLinesProgramMapUniforms(webgl2WarpedMap: WebGL2WarpedMap) {\n    if (!this.viewport) {\n      return\n    }\n\n    const gl = this.gl\n    const program = this.linesProgram\n    gl.useProgram(program)\n\n    // Render Transform\n    const renderHomogeneousTransform = multiplyHomogeneousTransform(\n      this.viewport.projectedGeoToClipHomogeneousTransform,\n      webgl2WarpedMap.invertedRenderHomogeneousTransform\n    )\n    const renderHomogeneousTransformLocation = gl.getUniformLocation(\n      program,\n      'u_renderHomogeneousTransform'\n    )\n    gl.uniformMatrix4fv(\n      renderHomogeneousTransformLocation,\n      false,\n      homogeneousTransformToMatrix4(renderHomogeneousTransform)\n    )\n  }\n\n  private setPointsProgramUniforms() {\n    if (!this.viewport) {\n      return\n    }\n\n    const gl = this.gl\n    const program = this.pointsProgram\n    gl.useProgram(program)\n\n    // Animation progress\n    const animationProgressLocation = gl.getUniformLocation(\n      program,\n      'u_animationProgress'\n    )\n    gl.uniform1f(animationProgressLocation, this.animationProgress)\n  }\n\n  private setPointsProgramMapUniforms(webgl2WarpedMap: WebGL2WarpedMap) {\n    if (!this.viewport) {\n      return\n    }\n\n    const gl = this.gl\n    const program = this.pointsProgram\n    gl.useProgram(program)\n\n    // Render Transform\n    const renderHomogeneousTransform = multiplyHomogeneousTransform(\n      this.viewport.projectedGeoToClipHomogeneousTransform,\n      webgl2WarpedMap.invertedRenderHomogeneousTransform\n    )\n    const renderHomogeneousTransformLocation = gl.getUniformLocation(\n      program,\n      'u_renderHomogeneousTransform'\n    )\n    gl.uniformMatrix4fv(\n      renderHomogeneousTransformLocation,\n      false,\n      homogeneousTransformToMatrix4(renderHomogeneousTransform)\n    )\n  }\n\n  private startTransformerTransition(mapIds: string[]) {\n    this.updateVertexBuffers(mapIds)\n\n    if (this.lastAnimationFrameRequestId !== undefined) {\n      cancelAnimationFrame(this.lastAnimationFrameRequestId)\n    }\n\n    this.animating = true\n    this.transformaterTransitionStart = undefined\n    this.lastAnimationFrameRequestId = requestAnimationFrame(\n      ((now: number) => this.transformerTransitionFrame(now, mapIds)).bind(this)\n    )\n  }\n\n  private transformerTransitionFrame(now: number, mapIds: string[]) {\n    if (!this.transformaterTransitionStart) {\n      this.transformaterTransitionStart = now\n    }\n\n    if (now - this.transformaterTransitionStart < ANIMATION_DURATION) {\n      // Animation is ongoing\n      // animationProgress goes from 0 to 1 throughout animation\n      this.animationProgress =\n        (now - this.transformaterTransitionStart) / ANIMATION_DURATION\n\n      // First trigger a general repaint to clear canvas\n      this.changed()\n\n      this.renderInternal()\n\n      this.lastAnimationFrameRequestId = requestAnimationFrame(\n        ((now: number) => this.transformerTransitionFrame(now, mapIds)).bind(\n          this\n        )\n      )\n    } else {\n      // Animation ended\n      this.finishTransformerTransition(mapIds)\n    }\n  }\n\n  private finishTransformerTransition(mapIds: string[]) {\n    this.resetPrevious(mapIds)\n    this.updateVertexBuffers(mapIds)\n\n    this.animating = false\n    this.animationProgress = 0\n    this.transformaterTransitionStart = undefined\n\n    this.changed()\n  }\n\n  private changed() {\n    this.dispatchEvent(new WarpedMapEvent(WarpedMapEventType.CHANGED))\n  }\n\n  protected imageInfoLoaded(event: Event) {\n    if (event instanceof WarpedMapEvent) {\n      this.dispatchEvent(new WarpedMapEvent(WarpedMapEventType.IMAGEINFOLOADED))\n    }\n  }\n\n  protected clearMap(mapId: string) {\n    const webGL2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n    if (webGL2WarpedMap) {\n      webGL2WarpedMap.clearTextures()\n    }\n  }\n\n  protected mapTileLoaded(event: Event) {\n    if (event instanceof WarpedMapEvent) {\n      const { mapId, tileUrl } = event.data as WarpedMapTileEventDetail\n      const tile = this.tileCache.getCacheableTile(tileUrl)\n\n      if (!tile) {\n        return\n      }\n\n      if (!tile.isCachedTile()) {\n        return\n      }\n\n      const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n      if (!webgl2WarpedMap) {\n        return\n      }\n\n      webgl2WarpedMap.addCachedTileAndUpdateTextures(tile)\n    }\n  }\n\n  protected mapTileRemoved(event: Event) {\n    if (event instanceof WarpedMapEvent) {\n      const { mapId, tileUrl } = event.data as WarpedMapTileEventDetail\n      const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n\n      if (!webgl2WarpedMap) {\n        return\n      }\n\n      webgl2WarpedMap.removeCachedTileAndUpdateTextures(tileUrl)\n    }\n  }\n\n  protected warpedMapAdded(event: Event) {\n    if (event instanceof WarpedMapEvent) {\n      const mapId = event.data as string\n      const webgl2WarpedMap = this.warpedMapList.getWarpedMap(mapId)\n      if (webgl2WarpedMap) {\n        this.addEventListenersToWebGL2WarpedMap(webgl2WarpedMap)\n      }\n    }\n  }\n\n  protected preChange(event: Event) {\n    if (event instanceof WarpedMapEvent) {\n      const mapIds = event.data as string[]\n      for (const webgl2WarpedMap of this.warpedMapList.getWarpedMaps({\n        mapIds\n      })) {\n        if (this.animating) {\n          webgl2WarpedMap.mixPreviousAndNew(1 - this.animationProgress)\n        }\n      }\n    }\n  }\n\n  protected optionsChanged(event: Event) {\n    if (event instanceof WarpedMapEvent) {\n      const mapIds = event.data as string[]\n      this.finishTransformerTransition(mapIds)\n    }\n    this.changed()\n  }\n\n  protected gcpsChanged(event: Event) {\n    if (event instanceof WarpedMapEvent) {\n      const mapIds = event.data as string[]\n      this.finishTransformerTransition(mapIds)\n    }\n    this.changed()\n  }\n\n  protected resourceMaskChanged(event: Event) {\n    if (event instanceof WarpedMapEvent) {\n      const mapIds = event.data as string[]\n      this.finishTransformerTransition(mapIds)\n    }\n    this.changed()\n  }\n\n  protected transformationChanged(event: Event) {\n    if (event instanceof WarpedMapEvent) {\n      const mapIds = event.data as string[]\n      this.startTransformerTransition(mapIds)\n    }\n  }\n\n  protected distortionChanged(event: Event) {\n    if (event instanceof WarpedMapEvent) {\n      const mapIds = event.data as string[]\n      this.startTransformerTransition(mapIds)\n    }\n  }\n\n  protected internalProjectionChanged(event: Event) {\n    if (event instanceof WarpedMapEvent) {\n      const mapIds = event.data as string[]\n      this.startTransformerTransition(mapIds)\n    }\n  }\n\n  protected projectionChanged(event: Event) {\n    if (event instanceof WarpedMapEvent) {\n      const mapIds = event.data as string[]\n      this.finishTransformerTransition(mapIds)\n    }\n    this.changed()\n  }\n\n  private addEventListenersToWebGL2WarpedMap(webgl2WarpedMap: WebGL2WarpedMap) {\n    webgl2WarpedMap.addEventListener(\n      WarpedMapEventType.TEXTURESUPDATED,\n      this.throttledChanged.bind(this)\n    )\n  }\n\n  private removeEventListenersFromWebGL2WarpedMap(\n    webgl2WarpedMap: WebGL2WarpedMap\n  ) {\n    webgl2WarpedMap.removeEventListener(\n      WarpedMapEventType.TEXTURESUPDATED,\n      this.throttledChanged.bind(this)\n    )\n  }\n\n  contextLost() {\n    this.disableRender = true\n\n    this.cancelThrottledFunctions()\n    for (const webgl2WarpedMap of this.warpedMapList.getWarpedMaps()) {\n      webgl2WarpedMap.cancelThrottledFunctions()\n    }\n\n    this.tileCache.clear()\n  }\n\n  contextRestored() {\n    this.initializeWebGL(this.gl)\n\n    this.disableRender = false\n  }\n}\n", "import { WebGL2Renderer } from \"./renderers/WebGL2Renderer.js\";\nimport { WebGL2WarpedMap } from \"./maps/WebGL2WarpedMap.js\";\nexport {\n  WebGL2Renderer,\n  WebGL2WarpedMap\n};\n//# sourceMappingURL=webgl2.js.map\n", "import { Viewport } from \"./viewport/Viewport.js\";\nimport { WarpedMapList } from \"./maps/WarpedMapList.js\";\nimport { WarpedMap, createWarpedMapFactory } from \"./maps/WarpedMap.js\";\nimport { TriangulatedWarpedMap } from \"./maps/TriangulatedWarpedMap.js\";\nimport { WarpedMapEvent, WarpedMapEventType } from \"./shared/events.js\";\nexport {\n  TriangulatedWarpedMap,\n  Viewport,\n  WarpedMap,\n  WarpedMapEvent,\n  WarpedMapEventType,\n  WarpedMapList,\n  createWarpedMapFactory\n};\n//# sourceMappingURL=index.js.map\n", "import { WarpedMapLayer } from \"./WarpedMapLayer.js\";\nimport { OLWarpedMapEvent } from \"./OLWarpedMapEvent.js\";\nimport { WarpedMapEvent, WarpedMapEventType } from \"@allmaps/render\";\nexport {\n  OLWarpedMapEvent,\n  WarpedMapEvent,\n  WarpedMapEventType,\n  WarpedMapLayer\n};\n//# sourceMappingURL=index.js.map\n", "/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n", "/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n", "/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n", "/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n", "import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n", "/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n", "/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n", "/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n", "/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n", "/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n", "/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n", "/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n", "/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n", "/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n", "/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n", "/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n", "/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n", "/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n", "/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n", "/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n", "/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          this.push_(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          this.push_(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @param {...*} args Arguments to push to the instructions array.\n   * @private\n   */\n  push_(...args) {\n    const instructions = this.instructions_;\n    const index = this.zIndex + this.offset_;\n    if (!instructions[index]) {\n      instructions[index] = [];\n    }\n    instructions[index].push(...args);\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.push_(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.push_(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n", "/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n", "/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  equivalent,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS transform matrix.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && equivalent(context.canvas.style.transform, transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n", "/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {import(\"../../source/Tile.js\").default} source The tile source.\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(source, sourceKey, z, x, y) {\n  return `${getUid(source)},${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource, tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedSourceRevision_) {\n      this.renderedSourceRevision_ = sourceRevision;\n    } else if (this.renderedSourceRevision_ !== sourceRevision) {\n      this.renderedSourceRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(\n        this.getLayer().getSource(),\n        staleKeys[i],\n        z,\n        x,\n        y,\n      );\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n", "/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n", "/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n", "/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n", "/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n", "/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n", "/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n", "/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n", "/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n", "/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n", "/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n", "/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n", "/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n", "/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n", "/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n", "/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n", "/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n", "/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n", "/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'\u00A9 Acme Inc.'`)\n * an array of simple strings (e.g. `['\u00A9 Acme Inc.', '\u00A9 Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n", "/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n", "/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n", "/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n", "/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n", "/**\n * @module ol/source/XYZ\n */\n\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n", "/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n", "/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n", "/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n", "/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {fontWeights, getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\nconst genericFontFamilies = new Set([\n  'serif',\n  'sans-serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'emoji',\n  'math',\n  'fangsong',\n]);\n\n/**\n * @param {string} style Css font-style\n * @param {string} weight Css font-weight\n * @param {string} family Css font-family\n * @return {string} Font key.\n */\nfunction getFontKey(style, weight, family) {\n  return `${style} ${weight} 16px \"${family}\"`;\n}\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  let timeout, fontFaceSet;\n\n  /**\n   * @param {string} fontSpec Css font spec\n   * @return {Promise<boolean>} Font with style and weight is available\n   */\n  async function isAvailable(fontSpec) {\n    await fontFaceSet.ready;\n    const fontFaces = await fontFaceSet.load(fontSpec);\n    if (fontFaces.length === 0) {\n      return false;\n    }\n    const font = getFontParameters(fontSpec);\n    const checkFamily = font.families[0].toLowerCase();\n    const checkWeight = font.weight;\n    return fontFaces.some(\n      /**\n       * @param {import('../css.js').FontParameters} f Font.\n       * @return {boolean} Font matches.\n       */\n      (f) => {\n        const family = f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase();\n        const weight = fontWeights[f.weight] || f.weight;\n        return (\n          family === checkFamily &&\n          f.style === font.style &&\n          weight == checkWeight\n        );\n      },\n    );\n  }\n\n  async function check() {\n    await fontFaceSet.ready;\n    let done = true;\n    const checkedFontsProperties = checkedFonts.getProperties();\n    const fonts = Object.keys(checkedFontsProperties).filter(\n      (key) => checkedFontsProperties[key] < retries,\n    );\n    for (let i = fonts.length - 1; i >= 0; --i) {\n      const font = fonts[i];\n      let currentRetries = checkedFontsProperties[font];\n      if (currentRetries < retries) {\n        if (await isAvailable(font)) {\n          clear(textHeights);\n          checkedFonts.set(font, retries);\n        } else {\n          currentRetries += 10;\n          checkedFonts.set(font, currentRetries, true);\n          if (currentRetries < retries) {\n            done = false;\n          }\n        }\n      }\n    }\n    timeout = undefined;\n    if (!done) {\n      timeout = setTimeout(check, 100);\n    }\n  }\n\n  return async function (fontSpec) {\n    if (!fontFaceSet) {\n      fontFaceSet = WORKER_OFFSCREEN_CANVAS ? self.fonts : document.fonts;\n    }\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    let needCheck = false;\n    for (const family of families) {\n      if (genericFontFamilies.has(family)) {\n        continue;\n      }\n      const key = getFontKey(font.style, font.weight, family);\n      if (checkedFonts.get(key) !== undefined) {\n        continue;\n      }\n      checkedFonts.set(key, 0, true);\n      needCheck = true;\n    }\n    if (needCheck) {\n      clearTimeout(timeout);\n      timeout = setTimeout(check, 100);\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, '\u017Dg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n", "/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n", "/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |\u03B1                                   .   .\n    //       /                                         .   .\n    //      \u00B0 center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n", "/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n", "/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n", "/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n", "/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n", "import { a as attr, b as attr_class, e as ensure_array_like, c as bind_props } from \"./index2.js\";\nimport { _ as ssr_context, Y as fallback, X as escape_html } from \"./context.js\";\nimport { fromLonLat } from \"ol/proj.js\";\nimport GeoJSON from \"ol/format/GeoJSON.js\";\nimport { unByKey } from \"ol/Observable.js\";\nimport Feature from \"ol/Feature.js\";\nimport Point from \"ol/geom/Point.js\";\nimport \"@allmaps/openlayers\";\nimport \"@allmaps/iiif-parser\";\nimport \"@allmaps/stdlib\";\nimport TileLayer from \"ol/layer/Tile.js\";\nimport XYZ from \"ol/source/XYZ.js\";\nimport Style from \"ol/style/Style.js\";\nimport Fill from \"ol/style/Fill.js\";\nimport Stroke from \"ol/style/Stroke.js\";\nimport CircleStyle from \"ol/style/Circle.js\";\nfunction onDestroy(fn) {\n  /** @type {SSRContext} */\n  ssr_context.r.on_destroy(fn);\n}\nconst DEFAULT_ANNOTATION_COLOR = \"#2563eb\";\nfromLonLat([106.70098, 10.77653]);\nconst BASEMAP_DEFS = [\n  {\n    key: \"g-streets\",\n    label: \"Google Maps\",\n    layer: () => new TileLayer({\n      source: new XYZ({\n        urls: [\n          \"https://mt0.google.com/vt/lyrs=m&x={x}&y={y}&z={z}\",\n          \"https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}\",\n          \"https://mt2.google.com/vt/lyrs=m&x={x}&y={y}&z={z}\",\n          \"https://mt3.google.com/vt/lyrs=m&x={x}&y={y}&z={z}\"\n        ],\n        attributions: \"Tiles \u00A9 Google\",\n        maxZoom: 22,\n        crossOrigin: \"anonymous\"\n      }),\n      visible: true,\n      properties: { name: \"g-streets\", base: true },\n      zIndex: 0\n    })\n  },\n  {\n    key: \"g-satellite\",\n    label: \"Google Satellite\",\n    layer: () => new TileLayer({\n      source: new XYZ({\n        urls: [\n          \"https://mt0.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\",\n          \"https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\",\n          \"https://mt2.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\",\n          \"https://mt3.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\"\n        ],\n        attributions: \"Tiles \u00A9 Google\",\n        maxZoom: 22,\n        crossOrigin: \"anonymous\"\n      }),\n      visible: false,\n      properties: { name: \"g-satellite\", base: true },\n      zIndex: 0\n    })\n  }\n];\nfunction SearchOverlay($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    const noop = () => {\n    };\n    let panelCollapsed = fallback($$props[\"panelCollapsed\"], false);\n    let searchQuery = fallback($$props[\"searchQuery\"], \"\");\n    let searchResults = fallback($$props[\"searchResults\"], () => [], true);\n    let searchLoading = fallback($$props[\"searchLoading\"], false);\n    let searchNotice = fallback($$props[\"searchNotice\"], null);\n    let searchNoticeType = fallback($$props[\"searchNoticeType\"], \"info\");\n    let appMode = fallback($$props[\"appMode\"], \"explore\");\n    let queueSearch = fallback($$props[\"queueSearch\"], noop);\n    let locateUser = fallback($$props[\"locateUser\"], noop);\n    let clearSearch = fallback($$props[\"clearSearch\"], noop);\n    let zoomToSearchResult = fallback($$props[\"zoomToSearchResult\"], noop);\n    let addSearchResultToAnnotations = fallback($$props[\"addSearchResultToAnnotations\"], noop);\n    let presenting = fallback($$props[\"presenting\"], false);\n    if (!panelCollapsed && !presenting) {\n      $$renderer2.push(\"<!--[-->\");\n      $$renderer2.push(`<div class=\"search-overlay svelte-bzaubf\"><div class=\"search-box svelte-bzaubf\"><div class=\"search-row svelte-bzaubf\"><div class=\"input-wrapper svelte-bzaubf\"><span class=\"input-icon svelte-bzaubf\" aria-hidden=\"true\"><svg viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"svelte-bzaubf\"><path fill-rule=\"evenodd\" d=\"M8.5 3.5a5 5 0 013.95 8.08l3.23 3.23a.75.75 0 11-1.06 1.06l-3.23-3.23A5 5 0 118.5 3.5zm0 1.5a3.5 3.5 0 100 7 3.5 3.5 0 000-7z\" clip-rule=\"evenodd\"></path></svg></span> <input type=\"text\" placeholder=\"Search for a place or address\u2026\"${attr(\"value\", searchQuery)} aria-label=\"Search for a place or address\" class=\"svelte-bzaubf\"/></div> <button type=\"button\" class=\"chip ghost svelte-bzaubf\"${attr(\"disabled\", searchLoading, true)}><span class=\"chip-icon\" aria-hidden=\"true\">\uD83D\uDCCD</span> Locate</button> <button type=\"button\" class=\"chip ghost svelte-bzaubf\"${attr(\"disabled\", !searchQuery && !searchResults.length, true)}><span class=\"chip-icon\" aria-hidden=\"true\">\u2715</span> Clear</button></div> <div class=\"search-status svelte-bzaubf\">`);\n      if (searchLoading) {\n        $$renderer2.push(\"<!--[-->\");\n        $$renderer2.push(`<span>Searching\u2026</span>`);\n      } else {\n        $$renderer2.push(\"<!--[!-->\");\n        if (searchNotice) {\n          $$renderer2.push(\"<!--[-->\");\n          $$renderer2.push(`<span${attr_class(\"svelte-bzaubf\", void 0, {\n            \"errored\": searchNoticeType === \"error\",\n            \"success\": searchNoticeType === \"success\"\n          })}>${escape_html(searchNotice)}</span>`);\n        } else {\n          $$renderer2.push(\"<!--[!-->\");\n        }\n        $$renderer2.push(`<!--]-->`);\n      }\n      $$renderer2.push(`<!--]--></div> `);\n      if (searchResults.length) {\n        $$renderer2.push(\"<!--[-->\");\n        $$renderer2.push(`<div class=\"search-results svelte-bzaubf\"><!--[-->`);\n        const each_array = ensure_array_like(searchResults);\n        for (let $$index = 0, $$length = each_array.length; $$index < $$length; $$index++) {\n          let result = each_array[$$index];\n          $$renderer2.push(`<div class=\"search-result svelte-bzaubf\"><button type=\"button\" class=\"result-main svelte-bzaubf\"><span class=\"result-title svelte-bzaubf\">${escape_html(result.display_name)}</span> `);\n          if (result.type) {\n            $$renderer2.push(\"<!--[-->\");\n            $$renderer2.push(`<span class=\"result-type svelte-bzaubf\">${escape_html(result.type)}</span>`);\n          } else {\n            $$renderer2.push(\"<!--[!-->\");\n          }\n          $$renderer2.push(`<!--]--></button> `);\n          if (appMode === \"create\") {\n            $$renderer2.push(\"<!--[-->\");\n            $$renderer2.push(`<button type=\"button\" class=\"chip add\"><span class=\"chip-icon\" aria-hidden=\"true\">\uFF0B</span> Add</button>`);\n          } else {\n            $$renderer2.push(\"<!--[!-->\");\n          }\n          $$renderer2.push(`<!--]--></div>`);\n        }\n        $$renderer2.push(`<!--]--></div>`);\n      } else {\n        $$renderer2.push(\"<!--[!-->\");\n      }\n      $$renderer2.push(`<!--]--></div></div>`);\n    } else {\n      $$renderer2.push(\"<!--[!-->\");\n    }\n    $$renderer2.push(`<!--]-->`);\n    bind_props($$props, {\n      panelCollapsed,\n      searchQuery,\n      searchResults,\n      searchLoading,\n      searchNotice,\n      searchNoticeType,\n      appMode,\n      queueSearch,\n      locateUser,\n      clearSearch,\n      zoomToSearchResult,\n      addSearchResultToAnnotations,\n      presenting\n    });\n  });\n}\nfunction BasemapButtons($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    let basemaps = fallback($$props[\"basemaps\"], () => [], true);\n    let selected = fallback($$props[\"selected\"], \"\");\n    let label = fallback($$props[\"label\"], \"Basemap selection\");\n    $$renderer2.push(`<div class=\"basemap-buttons svelte-8cdsst\" role=\"group\"${attr(\"aria-label\", label)}><!--[-->`);\n    const each_array = ensure_array_like(basemaps);\n    for (let $$index = 0, $$length = each_array.length; $$index < $$length; $$index++) {\n      let basemap = each_array[$$index];\n      $$renderer2.push(`<button type=\"button\"${attr(\"aria-pressed\", selected === basemap.key)}${attr_class(\"svelte-8cdsst\", void 0, { \"selected\": selected === basemap.key })}>${escape_html(basemap.label)}</button>`);\n    }\n    $$renderer2.push(`<!--]--></div>`);\n    bind_props($$props, { basemaps, selected, label });\n  });\n}\nfunction randomId(prefix = \"anno\") {\n  const random = Math.random().toString(36).slice(2, 8);\n  if (typeof crypto !== \"undefined\" && typeof crypto.randomUUID === \"function\") {\n    return `${prefix}-${crypto.randomUUID()}`;\n  }\n  return `${prefix}-${Date.now().toString(36)}-${random}`;\n}\nfunction ensureAnnotationDefaults(feature) {\n  let id = feature.getId();\n  if (!id) {\n    id = randomId();\n    feature.setId(id);\n  }\n  if (!feature.get(\"label\")) {\n    feature.set(\"label\", \"Untitled\");\n  }\n  if (!feature.get(\"color\")) {\n    feature.set(\"color\", DEFAULT_ANNOTATION_COLOR);\n  }\n  if (typeof feature.get(\"hidden\") !== \"boolean\") {\n    feature.set(\"hidden\", false);\n  }\n}\nfunction toAnnotationSummary(feature) {\n  ensureAnnotationDefaults(feature);\n  return {\n    id: feature.getId(),\n    label: feature.get(\"label\") ?? \"Untitled\",\n    type: feature.getGeometry()?.getType() ?? \"Geometry\",\n    color: feature.get(\"color\") ?? DEFAULT_ANNOTATION_COLOR,\n    details: feature.get(\"details\") ?? \"\",\n    hidden: Boolean(feature.get(\"hidden\"))\n  };\n}\nnew Style({\n  image: new CircleStyle({\n    radius: 6,\n    fill: new Fill({ color: \"#06b6d4\" }),\n    stroke: new Stroke({ color: \"#0e7490\", width: 2 })\n  }),\n  stroke: new Stroke({ color: \"#06b6d4\", width: 2 }),\n  fill: new Fill({ color: \"rgba(6, 182, 212, 0.18)\" })\n});\nfunction MapViewport($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    let visibleStoryScenes, currentStoryScene, basemapLabel, selectedMapLabel, opacityPercent, modeLabel;\n    const geoJsonFormat = new GeoJSON();\n    let initialMode = fallback($$props[\"initialMode\"], \"explore\");\n    let showWelcomeOverlay = fallback($$props[\"showWelcomeOverlay\"], true);\n    let layout = fallback($$props[\"layout\"], \"desktop\");\n    let basemapSelection = \"g-streets\";\n    let mapTypeSelection = \"all\";\n    let selectedMapId = \"\";\n    let statusMessage = \"Select a map from the list.\";\n    let mapList = [];\n    let filteredMapList = [];\n    let panelCollapsed = false;\n    let statusError = false;\n    let opacity = 0.8;\n    let showWelcome = showWelcomeOverlay;\n    let appMode = initialMode;\n    let modeMenuOpen = false;\n    let selectedAnnotationId = null;\n    let searchQuery = \"\";\n    let searchResults = [];\n    let searchLoading = false;\n    let searchNotice = null;\n    let searchNoticeType = \"info\";\n    let searchDebounce = null;\n    let searchAbortController = null;\n    let storyScenes = [];\n    let storyPresenting = false;\n    let storyActiveSceneIndex = 0;\n    let createPanelTab = \"map\";\n    let map = null;\n    let warpedLayer = null;\n    let annotationSource = null;\n    let searchSource = null;\n    let drawInteraction = null;\n    let modifyInteraction = null;\n    let selectInteraction = null;\n    let annotationListenerKeys = [];\n    let viewMode = \"overlay\";\n    function updateAnnotationSummaries() {\n      const list = annotationSource ? annotationSource.getFeatures().map((feature) => toAnnotationSummary(feature)) : [];\n      if (selectedAnnotationId && !list.some((item) => item.id === selectedAnnotationId)) {\n        selectedAnnotationId = null;\n      }\n    }\n    function applyBasemap(name) {\n      if (!map) return;\n      map.getLayers().getArray().forEach((layer) => {\n        const props = layer.getProperties();\n        if (props.base) {\n          layer.setVisible(props.name === name);\n        }\n      });\n    }\n    function ensureOverlayCanvas() {\n      return warpedLayer?.getCanvas() ?? null;\n    }\n    function updateClipMask() {\n      const canvas = ensureOverlayCanvas();\n      if (!canvas || !map) return;\n      const size = map.getSize();\n      if (!size) return;\n      const [w, h] = size;\n      {\n        canvas.style.clipPath = \"\";\n      }\n    }\n    function updateDividersAndHandles() {\n      if (!map) return;\n      const size = map.getSize();\n      if (!size) return;\n      const [w, h] = size;\n    }\n    function updateLens() {\n      if (!map) return;\n      const size = map.getSize();\n      if (!size) return;\n      const [w, h] = size;\n    }\n    function refreshDecorations() {\n      updateClipMask();\n      updateDividersAndHandles();\n      updateLens();\n    }\n    function handlePointerDrag(event) {\n      if (!map) return;\n      return;\n    }\n    function stopPointerDrag() {\n      return;\n    }\n    function removeDrawInteraction() {\n      if (!map || !drawInteraction) return;\n      map.removeInteraction(drawInteraction);\n      drawInteraction = null;\n    }\n    function clearSearchResults() {\n      searchResults = [];\n      searchNotice = null;\n      searchNoticeType = \"info\";\n      searchLoading = false;\n    }\n    function featureFromSearchResult(result) {\n      try {\n        if (result.geojson) {\n          const feature = geoJsonFormat.readFeature({ type: \"Feature\", geometry: result.geojson, properties: {} }, { dataProjection: \"EPSG:4326\", featureProjection: \"EPSG:3857\" });\n          feature.set(\"label\", result.display_name ?? result.type ?? \"Search result\");\n          return feature;\n        }\n        if (result.lon && result.lat) {\n          const point = new Point(fromLonLat([Number(result.lon), Number(result.lat)]));\n          const feature = new Feature({ geometry: point });\n          feature.set(\"label\", result.display_name ?? result.type ?? \"Search result\");\n          return feature;\n        }\n      } catch (error) {\n        console.warn(\"Unable to create feature from search result\", error);\n      }\n      return null;\n    }\n    async function runSearch(query) {\n      const trimmed = query.trim();\n      searchQuery = query;\n      if (!trimmed) {\n        clearSearchResults();\n        searchSource?.clear();\n        searchAbortController?.abort();\n        searchAbortController = null;\n        return;\n      }\n      searchAbortController?.abort();\n      searchAbortController = new AbortController();\n      searchLoading = true;\n      searchNotice = null;\n      searchNoticeType = \"info\";\n      try {\n        const params = new URLSearchParams({\n          format: \"jsonv2\",\n          q: trimmed,\n          addressdetails: \"1\",\n          polygon_geojson: \"1\",\n          limit: \"10\"\n        });\n        const response = await fetch(`https://nominatim.openstreetmap.org/search?${params.toString()}`, {\n          signal: searchAbortController.signal,\n          headers: { Accept: \"application/json\" }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP ${response.status}`);\n        }\n        const data = await response.json();\n        searchResults = data;\n        if (!data.length) {\n          searchNotice = \"No results found.\";\n          searchNoticeType = \"info\";\n        }\n      } catch (error) {\n        if (error.name === \"AbortError\") return;\n        searchNotice = \"Search failed. Please try again.\";\n        searchNoticeType = \"error\";\n        console.error(\"Search error:\", error);\n        searchResults = [];\n      } finally {\n        searchLoading = false;\n      }\n    }\n    function queueSearch(query) {\n      searchQuery = query;\n      if (searchDebounce) clearTimeout(searchDebounce);\n      const delay = 1e3;\n      searchDebounce = window.setTimeout(\n        () => {\n          runSearch(query);\n        },\n        delay\n      );\n    }\n    function zoomToSearchResult(result) {\n      if (!map || !searchSource) return;\n      const feature = featureFromSearchResult(result);\n      if (!feature) return;\n      searchSource.clear();\n      searchSource.addFeature(feature);\n      const geometry = feature.getGeometry();\n      if (!geometry) return;\n      if (geometry.getType() === \"Point\") {\n        const coords = geometry.getCoordinates();\n        map.getView().animate({\n          center: coords,\n          zoom: Math.max(map.getView().getZoom() ?? 12, 16),\n          duration: 400\n        });\n      } else {\n        map.getView().fit(geometry.getExtent(), { padding: [80, 80, 80, 80], duration: 400, maxZoom: 18 });\n      }\n    }\n    function addSearchResultToAnnotations(result) {\n      if (!annotationSource) return;\n      const feature = featureFromSearchResult(result);\n      if (!feature) return;\n      ensureAnnotationDefaults(feature);\n      annotationSource.addFeature(feature);\n      selectedAnnotationId = feature.getId();\n      updateAnnotationSummaries();\n      clearSearchResults();\n      searchNotice = \"Feature added to annotations.\";\n      searchNoticeType = \"success\";\n      searchSource?.clear();\n      searchQuery = \"\";\n    }\n    function clearSearch() {\n      searchQuery = \"\";\n      clearSearchResults();\n      searchSource?.clear();\n      searchAbortController?.abort();\n      searchAbortController = null;\n      searchNotice = null;\n      searchNoticeType = \"info\";\n    }\n    function locateUser() {\n      const currentMap = map;\n      const currentSearchSource = searchSource;\n      if (!currentMap || !currentSearchSource) return;\n      if (!(\"geolocation\" in navigator)) {\n        searchNotice = \"Geolocation is not available.\";\n        searchNoticeType = \"error\";\n        return;\n      }\n      searchLoading = true;\n      searchNotice = null;\n      searchNoticeType = \"info\";\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          const coords = fromLonLat([longitude, latitude]);\n          currentSearchSource.clear();\n          const feature = new Feature({ geometry: new Point(coords) });\n          feature.set(\"label\", \"Current location\");\n          currentSearchSource.addFeature(feature);\n          const view = currentMap.getView();\n          view.animate({\n            center: coords,\n            zoom: Math.max(view.getZoom() ?? 12, 16),\n            duration: 450\n          });\n          searchLoading = false;\n          searchNotice = \"Centered on your location.\";\n          searchNoticeType = \"success\";\n        },\n        (error) => {\n          searchLoading = false;\n          searchNotice = `Could not get location: ${error.message}`;\n          searchNoticeType = \"error\";\n        }\n      );\n    }\n    onDestroy(() => {\n      searchAbortController?.abort();\n      window.removeEventListener(\"pointermove\", handlePointerDrag);\n      window.removeEventListener(\"pointerup\", stopPointerDrag);\n      window.removeEventListener(\"pointercancel\", stopPointerDrag);\n      annotationListenerKeys.forEach((key) => unByKey(key));\n      annotationListenerKeys = [];\n      removeDrawInteraction();\n      if (map && modifyInteraction) {\n        map.removeInteraction(modifyInteraction);\n      }\n      if (map && selectInteraction) {\n        map.removeInteraction(selectInteraction);\n      }\n      map?.setTarget(void 0);\n      map = null;\n      warpedLayer = null;\n      annotationSource = null;\n      searchSource = null;\n      modifyInteraction = null;\n      selectInteraction = null;\n    });\n    visibleStoryScenes = storyScenes.filter((scene) => !scene.hidden);\n    currentStoryScene = storyScenes[storyActiveSceneIndex] ?? null;\n    currentStoryScene ? visibleStoryScenes.findIndex((scene) => scene.id === currentStoryScene.id) + 1 : 0;\n    basemapLabel = BASEMAP_DEFS.find((base) => base.key === basemapSelection)?.label ?? \"Basemap\";\n    selectedMapLabel = mapList.find((m) => m.id === selectedMapId)?.name ?? \"Select a map\";\n    opacityPercent = Math.round(opacity * 100);\n    modeLabel = appMode === \"explore\" ? \"Exploring\" : \"Creating\";\n    filteredMapList = mapList;\n    applyBasemap(basemapSelection);\n    refreshDecorations();\n    let $$settled = true;\n    let $$inner_renderer;\n    function $$render_inner($$renderer3) {\n      $$renderer3.push(`<div${attr_class(\"viewer svelte-1gd50sk\", void 0, {\n        \"layout-mobile\": layout === \"mobile\",\n        \"layout-tablet\": layout === \"tablet\",\n        \"layout-desktop\": layout === \"desktop\"\n      })}>`);\n      if (showWelcome) {\n        $$renderer3.push(\"<!--[-->\");\n        $$renderer3.push(`<div class=\"welcome-overlay svelte-1gd50sk\"><div class=\"welcome-card svelte-1gd50sk\"><h1 class=\"svelte-1gd50sk\">Welcome to the viewer</h1> <p class=\"svelte-1gd50sk\">This experience lets you explore historic maps alongside the modern web. Pick how you want to get started.</p> <div class=\"welcome-actions svelte-1gd50sk\"><button type=\"button\"${attr_class(\"svelte-1gd50sk\", void 0, { \"selected\": appMode === \"explore\" })}>Exploring</button> <button type=\"button\"${attr_class(\"svelte-1gd50sk\", void 0, { \"selected\": appMode === \"create\" })}>Creating</button></div></div></div>`);\n      } else {\n        $$renderer3.push(\"<!--[!-->\");\n      }\n      $$renderer3.push(`<!--]--> <div class=\"map-wrapper svelte-1gd50sk\"><div class=\"map svelte-1gd50sk\"></div> <div class=\"divider vertical svelte-1gd50sk\" aria-hidden=\"true\"></div> <div class=\"divider horizontal svelte-1gd50sk\" aria-hidden=\"true\"></div> <button class=\"handle vertical svelte-1gd50sk\" type=\"button\" aria-label=\"Drag vertical split\" title=\"Drag vertical split\"></button> <button class=\"handle horizontal svelte-1gd50sk\" type=\"button\" aria-label=\"Drag horizontal split\" title=\"Drag horizontal split\"></button> <div class=\"lens svelte-1gd50sk\" aria-hidden=\"true\"></div> <button class=\"lens-handle svelte-1gd50sk\" type=\"button\" aria-label=\"Adjust spyglass radius\" title=\"Adjust spyglass radius\"></button></div> `);\n      SearchOverlay($$renderer3, {\n        panelCollapsed,\n        searchResults,\n        searchLoading,\n        searchNotice,\n        searchNoticeType,\n        appMode,\n        queueSearch,\n        locateUser,\n        clearSearch,\n        zoomToSearchResult,\n        addSearchResultToAnnotations,\n        presenting: storyPresenting,\n        get searchQuery() {\n          return searchQuery;\n        },\n        set searchQuery($$value) {\n          searchQuery = $$value;\n          $$settled = false;\n        }\n      });\n      $$renderer3.push(`<!----> `);\n      {\n        $$renderer3.push(\"<!--[!-->\");\n      }\n      $$renderer3.push(`<!--]--> <div${attr_class(\"control-bar svelte-1gd50sk\", void 0, { \"presenting\": storyPresenting })}><div${attr_class(\"control-panel svelte-1gd50sk\", void 0, {\n        \"collapsed\": panelCollapsed,\n        \"disabled\": searchLoading || storyPresenting\n      })}><div class=\"panel-header svelte-1gd50sk\"><div class=\"panel-summary svelte-1gd50sk\"><span class=\"panel-title svelte-1gd50sk\">${escape_html(selectedMapLabel)}</span> <span class=\"panel-sub svelte-1gd50sk\">${escape_html(basemapLabel)} \u00B7 ${escape_html(opacityPercent)}% \u00B7 ${escape_html(modeLabel)}</span></div> <div class=\"panel-actions svelte-1gd50sk\"><div class=\"mode-control svelte-1gd50sk\"><button type=\"button\" class=\"settings-button svelte-1gd50sk\" aria-haspopup=\"true\"${attr(\"aria-expanded\", modeMenuOpen)}>Settings</button> `);\n      {\n        $$renderer3.push(\"<!--[!-->\");\n      }\n      $$renderer3.push(`<!--]--></div> <button type=\"button\" class=\"collapse-toggle svelte-1gd50sk\"${attr(\"aria-expanded\", !panelCollapsed)}>${escape_html(\"Collapse\")}</button></div></div> `);\n      {\n        $$renderer3.push(\"<!--[!-->\");\n        $$renderer3.push(`<div class=\"panel-content svelte-1gd50sk\">`);\n        if (appMode === \"create\") {\n          $$renderer3.push(\"<!--[-->\");\n          $$renderer3.push(`<div class=\"create-tabs svelte-1gd50sk\" role=\"tablist\" aria-label=\"Create mode sections\"><button type=\"button\" role=\"tab\"${attr(\"aria-selected\", createPanelTab === \"map\")}${attr_class(\"svelte-1gd50sk\", void 0, { \"selected\": createPanelTab === \"map\" })}>Map</button> <button type=\"button\" role=\"tab\"${attr(\"aria-selected\", createPanelTab === \"annotations\")}${attr_class(\"svelte-1gd50sk\", void 0, { \"selected\": createPanelTab === \"annotations\" })}>Annotations</button> <button type=\"button\" role=\"tab\"${attr(\"aria-selected\", createPanelTab === \"story\")}${attr_class(\"svelte-1gd50sk\", void 0, { \"selected\": createPanelTab === \"story\" })}>Storytelling</button></div>`);\n        } else {\n          $$renderer3.push(\"<!--[!-->\");\n        }\n        $$renderer3.push(`<!--]--> `);\n        {\n          $$renderer3.push(\"<!--[-->\");\n          $$renderer3.push(`<section class=\"control-section svelte-1gd50sk\"><p class=\"section-title svelte-1gd50sk\">Base map</p> <div class=\"section-body svelte-1gd50sk\"><div class=\"control-group svelte-1gd50sk\">`);\n          BasemapButtons($$renderer3, { basemaps: BASEMAP_DEFS, selected: basemapSelection });\n          $$renderer3.push(`<!----></div></div></section> <section class=\"control-section svelte-1gd50sk\"><p class=\"section-title svelte-1gd50sk\">Overlay map</p> <div class=\"section-body overlay-grid svelte-1gd50sk\"><label class=\"control-group svelte-1gd50sk\"><span class=\"control-label svelte-1gd50sk\">Type</span> `);\n          $$renderer3.select(\n            { value: mapTypeSelection, class: \"\" },\n            ($$renderer4) => {\n              $$renderer4.option({ value: \"all\" }, ($$renderer5) => {\n                $$renderer5.push(`All (${escape_html(mapList.length)})`);\n              });\n              $$renderer4.push(`<!--[-->`);\n              const each_array = ensure_array_like([...new Set(mapList.map((item) => item.type))].sort());\n              for (let $$index = 0, $$length = each_array.length; $$index < $$length; $$index++) {\n                let type = each_array[$$index];\n                $$renderer4.option({ value: type }, ($$renderer5) => {\n                  $$renderer5.push(`${escape_html(type)}`);\n                });\n              }\n              $$renderer4.push(`<!--]-->`);\n            },\n            \"svelte-1gd50sk\"\n          );\n          $$renderer3.push(`</label> <label class=\"control-group grow svelte-1gd50sk\"><span class=\"control-label svelte-1gd50sk\">Map</span> `);\n          $$renderer3.select(\n            { value: selectedMapId, class: \"\" },\n            ($$renderer4) => {\n              $$renderer4.option({ value: \"\", disabled: true, selected: true }, ($$renderer5) => {\n                $$renderer5.push(`Select\u2026`);\n              });\n              $$renderer4.push(`<!--[-->`);\n              const each_array_1 = ensure_array_like(filteredMapList);\n              for (let $$index_1 = 0, $$length = each_array_1.length; $$index_1 < $$length; $$index_1++) {\n                let item = each_array_1[$$index_1];\n                $$renderer4.option({ value: item.id }, ($$renderer5) => {\n                  $$renderer5.push(`${escape_html(item.name)}`);\n                });\n              }\n              $$renderer4.push(`<!--]-->`);\n            },\n            \"svelte-1gd50sk\"\n          );\n          $$renderer3.push(`</label></div></section> <section class=\"control-section svelte-1gd50sk\"><p class=\"section-title svelte-1gd50sk\">View Mode &amp; Opacity</p> <div class=\"view-grid svelte-1gd50sk\"><div class=\"slider-group svelte-1gd50sk\"><span class=\"control-label svelte-1gd50sk\">Opacity</span> <div class=\"slider svelte-1gd50sk\"><input type=\"range\" min=\"0\" max=\"1\" step=\"0.05\"${attr(\"value\", opacity)} class=\"svelte-1gd50sk\"/> <span class=\"svelte-1gd50sk\">${escape_html(opacityPercent)}%</span></div></div> <div class=\"mode-buttons svelte-1gd50sk\"><button type=\"button\"${attr_class(\"svelte-1gd50sk\", void 0, { \"selected\": viewMode === \"overlay\" })}>Overlay</button> <button type=\"button\"${attr_class(\"svelte-1gd50sk\", void 0, { \"selected\": viewMode === \"side-x\" })}>Side X</button> <button type=\"button\"${attr_class(\"svelte-1gd50sk\", void 0, { \"selected\": viewMode === \"side-y\" })}>Side Y</button> <button type=\"button\"${attr_class(\"svelte-1gd50sk\", void 0, { \"selected\": viewMode === \"spy\" })}>Spyglass</button></div></div></section>`);\n        }\n        $$renderer3.push(`<!--]--> `);\n        {\n          $$renderer3.push(\"<!--[!-->\");\n        }\n        $$renderer3.push(`<!--]--> `);\n        {\n          $$renderer3.push(\"<!--[!-->\");\n        }\n        $$renderer3.push(`<!--]--> <div class=\"panel-footer svelte-1gd50sk\"><div class=\"footer-actions svelte-1gd50sk\"><button type=\"button\" class=\"btn footer svelte-1gd50sk\"${attr(\"disabled\", true, true)}>Zoom</button> <button type=\"button\" class=\"btn footer ghost svelte-1gd50sk\">Clear cache</button></div> <div class=\"status-row svelte-1gd50sk\">`);\n        {\n          $$renderer3.push(\"<!--[!-->\");\n        }\n        $$renderer3.push(`<!--]--> <p${attr_class(\"svelte-1gd50sk\", void 0, { \"errored\": statusError })}>${escape_html(statusMessage)}</p></div></div></div>`);\n      }\n      $$renderer3.push(`<!--]--></div></div></div>`);\n    }\n    do {\n      $$settled = true;\n      $$inner_renderer = $$renderer2.copy();\n      $$render_inner($$inner_renderer);\n    } while (!$$settled);\n    $$renderer2.subsume($$inner_renderer);\n    bind_props($$props, { initialMode, showWelcomeOverlay, layout });\n  });\n}\nexport {\n  MapViewport as M\n};\n", "import { s as store_get, u as unsubscribe_stores } from \"../../../chunks/index2.js\";\nimport { M as MapViewport } from \"../../../chunks/MapViewport.js\";\nimport { s as screen } from \"../../../chunks/breakpoints.js\";\nfunction _page($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    var $$store_subs;\n    let layout;\n    layout = store_get($$store_subs ??= {}, \"$screen\", screen).isDesktop ? \"desktop\" : store_get($$store_subs ??= {}, \"$screen\", screen).isTablet ? \"tablet\" : \"mobile\";\n    $$renderer2.push(`<div class=\"create-map-area svelte-jztt4t\">`);\n    MapViewport($$renderer2, { initialMode: \"create\", showWelcomeOverlay: false, layout });\n    $$renderer2.push(`<!----></div>`);\n    if ($$store_subs) unsubscribe_stores($$store_subs);\n  });\n}\nexport {\n  _page as default\n};\n", "\n\nexport const index = 5;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/create/_page.svelte.js')).default;\nexport const imports = [\"_app/immutable/nodes/5.CAoAq8ZC.js\",\"_app/immutable/chunks/DsnmJJEf.js\",\"_app/immutable/chunks/CVeh0obE.js\",\"_app/immutable/chunks/DmKfOTeo.js\",\"_app/immutable/chunks/CcWUXD1I.js\",\"_app/immutable/chunks/Ch_7xMJZ.js\",\"_app/immutable/chunks/DO3z0ZUX.js\",\"_app/immutable/chunks/DlFo6P2L.js\",\"_app/immutable/chunks/q2JeGk3q.js\",\"_app/immutable/chunks/CyJPgw3D.js\",\"_app/immutable/chunks/B7pDVb1P.js\"];\nexport const stylesheets = [\"_app/immutable/assets/breakpoints.yzSdU6gv.css\",\"_app/immutable/assets/MapViewport.Da8W1WUS.css\",\"_app/immutable/assets/5.CfPEs_yZ.css\"];\nexport const fonts = [];\n", "import { s as store_get, u as unsubscribe_stores } from \"../../../chunks/index2.js\";\nimport { M as MapViewport } from \"../../../chunks/MapViewport.js\";\nimport { s as screen } from \"../../../chunks/breakpoints.js\";\nfunction _page($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    var $$store_subs;\n    let layout;\n    layout = store_get($$store_subs ??= {}, \"$screen\", screen).isDesktop ? \"desktop\" : store_get($$store_subs ??= {}, \"$screen\", screen).isTablet ? \"tablet\" : \"mobile\";\n    $$renderer2.push(`<div class=\"view-map-area svelte-108px9u\">`);\n    MapViewport($$renderer2, { initialMode: \"explore\", showWelcomeOverlay: false, layout });\n    $$renderer2.push(`<!----></div>`);\n    if ($$store_subs) unsubscribe_stores($$store_subs);\n  });\n}\nexport {\n  _page as default\n};\n", "\n\nexport const index = 6;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/view/_page.svelte.js')).default;\nexport const imports = [\"_app/immutable/nodes/6.Cf9TxQc7.js\",\"_app/immutable/chunks/DsnmJJEf.js\",\"_app/immutable/chunks/CVeh0obE.js\",\"_app/immutable/chunks/DmKfOTeo.js\",\"_app/immutable/chunks/CcWUXD1I.js\",\"_app/immutable/chunks/Ch_7xMJZ.js\",\"_app/immutable/chunks/DO3z0ZUX.js\",\"_app/immutable/chunks/DlFo6P2L.js\",\"_app/immutable/chunks/q2JeGk3q.js\",\"_app/immutable/chunks/CyJPgw3D.js\",\"_app/immutable/chunks/B7pDVb1P.js\"];\nexport const stylesheets = [\"_app/immutable/assets/breakpoints.yzSdU6gv.css\",\"_app/immutable/assets/MapViewport.Da8W1WUS.css\",\"_app/immutable/assets/6.C5u61arx.css\"];\nexport const fonts = [];\n", "import { B as BROWSER } from \"./chunks/false.js\";\nimport { json, text, error } from \"@sveltejs/kit\";\nimport { HttpError, SvelteKitError, Redirect, ActionFailure } from \"@sveltejs/kit/internal\";\nimport { with_request_store, merge_tracing, try_get_request_store } from \"@sveltejs/kit/internal/server\";\nimport { a as assets, b as base, c as app_dir, r as relative, o as override, d as reset } from \"./chunks/environment.js\";\nimport * as devalue from \"devalue\";\nimport { m as make_trackable, d as disable_search, a as decode_params, S as SCHEME, v as validate_layout_server_exports, b as validate_layout_exports, c as validate_page_server_exports, e as validate_page_exports, n as normalize_path, r as resolve, f as decode_pathname, g as validate_server_exports } from \"./chunks/exports.js\";\nimport { b as base64_encode, t as text_decoder, a as text_encoder, g as get_relative_path } from \"./chunks/utils.js\";\nimport { r as readable, w as writable } from \"./chunks/index.js\";\nimport { p as public_env, r as read_implementation, o as options, s as set_private_env, a as set_public_env, g as get_hooks, b as set_read_implementation } from \"./chunks/internal.js\";\nimport { c as create_remote_cache_key, p as parse_remote_arg, s as stringify, T as TRAILING_SLASH_PARAM, I as INVALIDATED_PARAM } from \"./chunks/shared.js\";\nimport { parse, serialize } from \"cookie\";\nimport * as set_cookie_parser from \"set-cookie-parser\";\nfunction with_resolvers() {\n  let resolve2;\n  let reject;\n  const promise = new Promise((res, rej) => {\n    resolve2 = res;\n    reject = rej;\n  });\n  return { promise, resolve: resolve2, reject };\n}\nconst NULL_BODY_STATUS = [101, 103, 204, 205, 304];\nconst IN_WEBCONTAINER = !!globalThis.process?.versions?.webcontainer;\nconst SVELTE_KIT_ASSETS = \"/_svelte_kit_assets\";\nconst ENDPOINT_METHODS = [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\", \"OPTIONS\", \"HEAD\"];\nconst PAGE_METHODS = [\"GET\", \"POST\", \"HEAD\"];\nfunction negotiate(accept, types) {\n  const parts = [];\n  accept.split(\",\").forEach((str, i) => {\n    const match = /([^/ \\t]+)\\/([^; \\t]+)[ \\t]*(?:;[ \\t]*q=([0-9.]+))?/.exec(str);\n    if (match) {\n      const [, type, subtype, q = \"1\"] = match;\n      parts.push({ type, subtype, q: +q, i });\n    }\n  });\n  parts.sort((a, b) => {\n    if (a.q !== b.q) {\n      return b.q - a.q;\n    }\n    if (a.subtype === \"*\" !== (b.subtype === \"*\")) {\n      return a.subtype === \"*\" ? 1 : -1;\n    }\n    if (a.type === \"*\" !== (b.type === \"*\")) {\n      return a.type === \"*\" ? 1 : -1;\n    }\n    return a.i - b.i;\n  });\n  let accepted;\n  let min_priority = Infinity;\n  for (const mimetype of types) {\n    const [type, subtype] = mimetype.split(\"/\");\n    const priority = parts.findIndex(\n      (part) => (part.type === type || part.type === \"*\") && (part.subtype === subtype || part.subtype === \"*\")\n    );\n    if (priority !== -1 && priority < min_priority) {\n      accepted = mimetype;\n      min_priority = priority;\n    }\n  }\n  return accepted;\n}\nfunction is_content_type(request, ...types) {\n  const type = request.headers.get(\"content-type\")?.split(\";\", 1)[0].trim() ?? \"\";\n  return types.includes(type.toLowerCase());\n}\nfunction is_form_content_type(request) {\n  return is_content_type(\n    request,\n    \"application/x-www-form-urlencoded\",\n    \"multipart/form-data\",\n    \"text/plain\"\n  );\n}\nfunction coalesce_to_error(err) {\n  return err instanceof Error || err && /** @type {any} */\n  err.name && /** @type {any} */\n  err.message ? (\n    /** @type {Error} */\n    err\n  ) : new Error(JSON.stringify(err));\n}\nfunction normalize_error(error2) {\n  return (\n    /** @type {import('../exports/internal/index.js').Redirect | HttpError | SvelteKitError | Error} */\n    error2\n  );\n}\nfunction get_status(error2) {\n  return error2 instanceof HttpError || error2 instanceof SvelteKitError ? error2.status : 500;\n}\nfunction get_message(error2) {\n  return error2 instanceof SvelteKitError ? error2.text : \"Internal Error\";\n}\nconst escape_html_attr_dict = {\n  \"&\": \"&amp;\",\n  '\"': \"&quot;\"\n  // Svelte also escapes < because the escape function could be called inside a `noscript` there\n  // https://github.com/sveltejs/svelte/security/advisories/GHSA-8266-84wp-wv5c\n  // However, that doesn't apply in SvelteKit\n};\nconst escape_html_dict = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\"\n};\nconst surrogates = (\n  // high surrogate without paired low surrogate\n  \"[\\\\ud800-\\\\udbff](?![\\\\udc00-\\\\udfff])|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]|[\\\\udc00-\\\\udfff]\"\n);\nconst escape_html_attr_regex = new RegExp(\n  `[${Object.keys(escape_html_attr_dict).join(\"\")}]|` + surrogates,\n  \"g\"\n);\nconst escape_html_regex = new RegExp(\n  `[${Object.keys(escape_html_dict).join(\"\")}]|` + surrogates,\n  \"g\"\n);\nfunction escape_html(str, is_attr) {\n  const dict = is_attr ? escape_html_attr_dict : escape_html_dict;\n  const escaped_str = str.replace(is_attr ? escape_html_attr_regex : escape_html_regex, (match) => {\n    if (match.length === 2) {\n      return match;\n    }\n    return dict[match] ?? `&#${match.charCodeAt(0)};`;\n  });\n  return escaped_str;\n}\nfunction method_not_allowed(mod, method) {\n  return text(`${method} method not allowed`, {\n    status: 405,\n    headers: {\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n      // \"The server must generate an Allow header field in a 405 status code response\"\n      allow: allowed_methods(mod).join(\", \")\n    }\n  });\n}\nfunction allowed_methods(mod) {\n  const allowed = ENDPOINT_METHODS.filter((method) => method in mod);\n  if (\"GET\" in mod && !(\"HEAD\" in mod)) {\n    allowed.push(\"HEAD\");\n  }\n  return allowed;\n}\nfunction get_global_name(options2) {\n  return `__sveltekit_${options2.version_hash}`;\n}\nfunction static_error_page(options2, status, message) {\n  let page = options2.templates.error({ status, message: escape_html(message) });\n  return text(page, {\n    headers: { \"content-type\": \"text/html; charset=utf-8\" },\n    status\n  });\n}\nasync function handle_fatal_error(event, state, options2, error2) {\n  error2 = error2 instanceof HttpError ? error2 : coalesce_to_error(error2);\n  const status = get_status(error2);\n  const body2 = await handle_error_and_jsonify(event, state, options2, error2);\n  const type = negotiate(event.request.headers.get(\"accept\") || \"text/html\", [\n    \"application/json\",\n    \"text/html\"\n  ]);\n  if (event.isDataRequest || type === \"application/json\") {\n    return json(body2, {\n      status\n    });\n  }\n  return static_error_page(options2, status, body2.message);\n}\nasync function handle_error_and_jsonify(event, state, options2, error2) {\n  if (error2 instanceof HttpError) {\n    return { message: \"Unknown Error\", ...error2.body };\n  }\n  const status = get_status(error2);\n  const message = get_message(error2);\n  return await with_request_store(\n    { event, state },\n    () => options2.hooks.handleError({ error: error2, event, status, message })\n  ) ?? { message };\n}\nfunction redirect_response(status, location) {\n  const response = new Response(void 0, {\n    status,\n    headers: { location }\n  });\n  return response;\n}\nfunction clarify_devalue_error(event, error2) {\n  if (error2.path) {\n    return `Data returned from \\`load\\` while rendering ${event.route.id} is not serializable: ${error2.message} (${error2.path}). If you need to serialize/deserialize custom types, use transport hooks: https://svelte.dev/docs/kit/hooks#Universal-hooks-transport.`;\n  }\n  if (error2.path === \"\") {\n    return `Data returned from \\`load\\` while rendering ${event.route.id} is not a plain object`;\n  }\n  return error2.message;\n}\nfunction serialize_uses(node) {\n  const uses = {};\n  if (node.uses && node.uses.dependencies.size > 0) {\n    uses.dependencies = Array.from(node.uses.dependencies);\n  }\n  if (node.uses && node.uses.search_params.size > 0) {\n    uses.search_params = Array.from(node.uses.search_params);\n  }\n  if (node.uses && node.uses.params.size > 0) {\n    uses.params = Array.from(node.uses.params);\n  }\n  if (node.uses?.parent) uses.parent = 1;\n  if (node.uses?.route) uses.route = 1;\n  if (node.uses?.url) uses.url = 1;\n  return uses;\n}\nfunction has_prerendered_path(manifest, pathname) {\n  return manifest._.prerendered_routes.has(pathname) || pathname.at(-1) === \"/\" && manifest._.prerendered_routes.has(pathname.slice(0, -1));\n}\nfunction format_server_error(status, error2, event) {\n  const formatted_text = `\n\\x1B[1;31m[${status}] ${event.request.method} ${event.url.pathname}\\x1B[0m`;\n  if (status === 404) {\n    return formatted_text;\n  }\n  return `${formatted_text}\n${error2.stack}`;\n}\nfunction get_node_type(node_id) {\n  const parts = node_id?.split(\"/\");\n  const filename = parts?.at(-1);\n  if (!filename) return \"unknown\";\n  const dot_parts = filename.split(\".\");\n  return dot_parts.slice(0, -1).join(\".\");\n}\nasync function render_endpoint(event, event_state, mod, state) {\n  const method = (\n    /** @type {import('types').HttpMethod} */\n    event.request.method\n  );\n  let handler = mod[method] || mod.fallback;\n  if (method === \"HEAD\" && !mod.HEAD && mod.GET) {\n    handler = mod.GET;\n  }\n  if (!handler) {\n    return method_not_allowed(mod, method);\n  }\n  const prerender = mod.prerender ?? state.prerender_default;\n  if (prerender && (mod.POST || mod.PATCH || mod.PUT || mod.DELETE)) {\n    throw new Error(\"Cannot prerender endpoints that have mutative methods\");\n  }\n  if (state.prerendering && !state.prerendering.inside_reroute && !prerender) {\n    if (state.depth > 0) {\n      throw new Error(`${event.route.id} is not prerenderable`);\n    } else {\n      return new Response(void 0, { status: 204 });\n    }\n  }\n  event_state.is_endpoint_request = true;\n  try {\n    const response = await with_request_store(\n      { event, state: event_state },\n      () => handler(\n        /** @type {import('@sveltejs/kit').RequestEvent<Record<string, any>>} */\n        event\n      )\n    );\n    if (!(response instanceof Response)) {\n      throw new Error(\n        `Invalid response from route ${event.url.pathname}: handler should return a Response object`\n      );\n    }\n    if (state.prerendering && (!state.prerendering.inside_reroute || prerender)) {\n      const cloned = new Response(response.clone().body, {\n        status: response.status,\n        statusText: response.statusText,\n        headers: new Headers(response.headers)\n      });\n      cloned.headers.set(\"x-sveltekit-prerender\", String(prerender));\n      if (state.prerendering.inside_reroute && prerender) {\n        cloned.headers.set(\n          \"x-sveltekit-routeid\",\n          encodeURI(\n            /** @type {string} */\n            event.route.id\n          )\n        );\n        state.prerendering.dependencies.set(event.url.pathname, { response: cloned, body: null });\n      } else {\n        return cloned;\n      }\n    }\n    return response;\n  } catch (e) {\n    if (e instanceof Redirect) {\n      return new Response(void 0, {\n        status: e.status,\n        headers: { location: e.location }\n      });\n    }\n    throw e;\n  }\n}\nfunction is_endpoint_request(event) {\n  const { method, headers: headers2 } = event.request;\n  if (ENDPOINT_METHODS.includes(method) && !PAGE_METHODS.includes(method)) {\n    return true;\n  }\n  if (method === \"POST\" && headers2.get(\"x-sveltekit-action\") === \"true\") return false;\n  const accept = event.request.headers.get(\"accept\") ?? \"*/*\";\n  return negotiate(accept, [\"*\", \"text/html\"]) !== \"text/html\";\n}\nfunction compact(arr) {\n  return arr.filter(\n    /** @returns {val is NonNullable<T>} */\n    (val) => val != null\n  );\n}\nconst DATA_SUFFIX = \"/__data.json\";\nconst HTML_DATA_SUFFIX = \".html__data.json\";\nfunction has_data_suffix(pathname) {\n  return pathname.endsWith(DATA_SUFFIX) || pathname.endsWith(HTML_DATA_SUFFIX);\n}\nfunction add_data_suffix(pathname) {\n  if (pathname.endsWith(\".html\")) return pathname.replace(/\\.html$/, HTML_DATA_SUFFIX);\n  return pathname.replace(/\\/$/, \"\") + DATA_SUFFIX;\n}\nfunction strip_data_suffix(pathname) {\n  if (pathname.endsWith(HTML_DATA_SUFFIX)) {\n    return pathname.slice(0, -HTML_DATA_SUFFIX.length) + \".html\";\n  }\n  return pathname.slice(0, -DATA_SUFFIX.length);\n}\nconst ROUTE_SUFFIX = \"/__route.js\";\nfunction has_resolution_suffix(pathname) {\n  return pathname.endsWith(ROUTE_SUFFIX);\n}\nfunction add_resolution_suffix(pathname) {\n  return pathname.replace(/\\/$/, \"\") + ROUTE_SUFFIX;\n}\nfunction strip_resolution_suffix(pathname) {\n  return pathname.slice(0, -ROUTE_SUFFIX.length);\n}\nconst noop_span = {\n  spanContext() {\n    return noop_span_context;\n  },\n  setAttribute() {\n    return this;\n  },\n  setAttributes() {\n    return this;\n  },\n  addEvent() {\n    return this;\n  },\n  setStatus() {\n    return this;\n  },\n  updateName() {\n    return this;\n  },\n  end() {\n    return this;\n  },\n  isRecording() {\n    return false;\n  },\n  recordException() {\n    return this;\n  },\n  addLink() {\n    return this;\n  },\n  addLinks() {\n    return this;\n  }\n};\nconst noop_span_context = {\n  traceId: \"\",\n  spanId: \"\",\n  traceFlags: 0\n};\nasync function record_span({ name, attributes, fn }) {\n  {\n    return fn(noop_span);\n  }\n}\nfunction is_action_json_request(event) {\n  const accept = negotiate(event.request.headers.get(\"accept\") ?? \"*/*\", [\n    \"application/json\",\n    \"text/html\"\n  ]);\n  return accept === \"application/json\" && event.request.method === \"POST\";\n}\nasync function handle_action_json_request(event, event_state, options2, server) {\n  const actions = server?.actions;\n  if (!actions) {\n    const no_actions_error = new SvelteKitError(\n      405,\n      \"Method Not Allowed\",\n      `POST method not allowed. No form actions exist for ${\"this page\"}`\n    );\n    return action_json(\n      {\n        type: \"error\",\n        error: await handle_error_and_jsonify(event, event_state, options2, no_actions_error)\n      },\n      {\n        status: no_actions_error.status,\n        headers: {\n          // https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n          // \"The server must generate an Allow header field in a 405 status code response\"\n          allow: \"GET\"\n        }\n      }\n    );\n  }\n  check_named_default_separate(actions);\n  try {\n    const data = await call_action(event, event_state, actions);\n    if (BROWSER) ;\n    if (data instanceof ActionFailure) {\n      return action_json({\n        type: \"failure\",\n        status: data.status,\n        // @ts-expect-error we assign a string to what is supposed to be an object. That's ok\n        // because we don't use the object outside, and this way we have better code navigation\n        // through knowing where the related interface is used.\n        data: stringify_action_response(\n          data.data,\n          /** @type {string} */\n          event.route.id,\n          options2.hooks.transport\n        )\n      });\n    } else {\n      return action_json({\n        type: \"success\",\n        status: data ? 200 : 204,\n        // @ts-expect-error see comment above\n        data: stringify_action_response(\n          data,\n          /** @type {string} */\n          event.route.id,\n          options2.hooks.transport\n        )\n      });\n    }\n  } catch (e) {\n    const err = normalize_error(e);\n    if (err instanceof Redirect) {\n      return action_json_redirect(err);\n    }\n    return action_json(\n      {\n        type: \"error\",\n        error: await handle_error_and_jsonify(\n          event,\n          event_state,\n          options2,\n          check_incorrect_fail_use(err)\n        )\n      },\n      {\n        status: get_status(err)\n      }\n    );\n  }\n}\nfunction check_incorrect_fail_use(error2) {\n  return error2 instanceof ActionFailure ? new Error('Cannot \"throw fail()\". Use \"return fail()\"') : error2;\n}\nfunction action_json_redirect(redirect) {\n  return action_json({\n    type: \"redirect\",\n    status: redirect.status,\n    location: redirect.location\n  });\n}\nfunction action_json(data, init2) {\n  return json(data, init2);\n}\nfunction is_action_request(event) {\n  return event.request.method === \"POST\";\n}\nasync function handle_action_request(event, event_state, server) {\n  const actions = server?.actions;\n  if (!actions) {\n    event.setHeaders({\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n      // \"The server must generate an Allow header field in a 405 status code response\"\n      allow: \"GET\"\n    });\n    return {\n      type: \"error\",\n      error: new SvelteKitError(\n        405,\n        \"Method Not Allowed\",\n        `POST method not allowed. No form actions exist for ${\"this page\"}`\n      )\n    };\n  }\n  check_named_default_separate(actions);\n  try {\n    const data = await call_action(event, event_state, actions);\n    if (BROWSER) ;\n    if (data instanceof ActionFailure) {\n      return {\n        type: \"failure\",\n        status: data.status,\n        data: data.data\n      };\n    } else {\n      return {\n        type: \"success\",\n        status: 200,\n        // @ts-expect-error this will be removed upon serialization, so `undefined` is the same as omission\n        data\n      };\n    }\n  } catch (e) {\n    const err = normalize_error(e);\n    if (err instanceof Redirect) {\n      return {\n        type: \"redirect\",\n        status: err.status,\n        location: err.location\n      };\n    }\n    return {\n      type: \"error\",\n      error: check_incorrect_fail_use(err)\n    };\n  }\n}\nfunction check_named_default_separate(actions) {\n  if (actions.default && Object.keys(actions).length > 1) {\n    throw new Error(\n      \"When using named actions, the default action cannot be used. See the docs for more info: https://svelte.dev/docs/kit/form-actions#named-actions\"\n    );\n  }\n}\nasync function call_action(event, event_state, actions) {\n  const url = new URL(event.request.url);\n  let name = \"default\";\n  for (const param of url.searchParams) {\n    if (param[0].startsWith(\"/\")) {\n      name = param[0].slice(1);\n      if (name === \"default\") {\n        throw new Error('Cannot use reserved action name \"default\"');\n      }\n      break;\n    }\n  }\n  const action = actions[name];\n  if (!action) {\n    throw new SvelteKitError(404, \"Not Found\", `No action with name '${name}' found`);\n  }\n  if (!is_form_content_type(event.request)) {\n    throw new SvelteKitError(\n      415,\n      \"Unsupported Media Type\",\n      `Form actions expect form-encoded data \u2014 received ${event.request.headers.get(\n        \"content-type\"\n      )}`\n    );\n  }\n  return record_span({\n    name: \"sveltekit.form_action\",\n    attributes: {\n      \"http.route\": event.route.id || \"unknown\"\n    },\n    fn: async (current2) => {\n      const traced_event = merge_tracing(event, current2);\n      const result = await with_request_store(\n        { event: traced_event, state: event_state },\n        () => action(traced_event)\n      );\n      if (result instanceof ActionFailure) {\n        current2.setAttributes({\n          \"sveltekit.form_action.result.type\": \"failure\",\n          \"sveltekit.form_action.result.status\": result.status\n        });\n      }\n      return result;\n    }\n  });\n}\nfunction validate_action_return(data) {\n  if (data instanceof Redirect) {\n    throw new Error(\"Cannot `return redirect(...)` \u2014 use `redirect(...)` instead\");\n  }\n  if (data instanceof HttpError) {\n    throw new Error(\"Cannot `return error(...)` \u2014 use `error(...)` or `return fail(...)` instead\");\n  }\n}\nfunction uneval_action_response(data, route_id, transport) {\n  const replacer = (thing) => {\n    for (const key2 in transport) {\n      const encoded = transport[key2].encode(thing);\n      if (encoded) {\n        return `app.decode('${key2}', ${devalue.uneval(encoded, replacer)})`;\n      }\n    }\n  };\n  return try_serialize(data, (value) => devalue.uneval(value, replacer), route_id);\n}\nfunction stringify_action_response(data, route_id, transport) {\n  const encoders = Object.fromEntries(\n    Object.entries(transport).map(([key2, value]) => [key2, value.encode])\n  );\n  return try_serialize(data, (value) => devalue.stringify(value, encoders), route_id);\n}\nfunction try_serialize(data, fn, route_id) {\n  try {\n    return fn(data);\n  } catch (e) {\n    const error2 = (\n      /** @type {any} */\n      e\n    );\n    if (data instanceof Response) {\n      throw new Error(\n        `Data returned from action inside ${route_id} is not serializable. Form actions need to return plain objects or fail(). E.g. return { success: true } or return fail(400, { message: \"invalid\" });`\n      );\n    }\n    if (\"path\" in error2) {\n      let message = `Data returned from action inside ${route_id} is not serializable: ${error2.message}`;\n      if (error2.path !== \"\") message += ` (data.${error2.path})`;\n      throw new Error(message);\n    }\n    throw error2;\n  }\n}\nfunction create_async_iterator() {\n  let resolved = -1;\n  let returned = -1;\n  const deferred = [];\n  return {\n    iterate: (transform = (x) => x) => {\n      return {\n        [Symbol.asyncIterator]() {\n          return {\n            next: async () => {\n              const next = deferred[++returned];\n              if (!next) return { value: null, done: true };\n              const value = await next.promise;\n              return { value: transform(value), done: false };\n            }\n          };\n        }\n      };\n    },\n    add: (promise) => {\n      deferred.push(with_resolvers());\n      void promise.then((value) => {\n        deferred[++resolved].resolve(value);\n      });\n    }\n  };\n}\nfunction server_data_serializer(event, event_state, options2) {\n  let promise_id = 1;\n  let max_nodes = -1;\n  const iterator = create_async_iterator();\n  const global = get_global_name(options2);\n  function get_replacer(index) {\n    return function replacer(thing) {\n      if (typeof thing?.then === \"function\") {\n        const id = promise_id++;\n        const promise = thing.then(\n          /** @param {any} data */\n          (data) => ({ data })\n        ).catch(\n          /** @param {any} error */\n          async (error2) => ({\n            error: await handle_error_and_jsonify(event, event_state, options2, error2)\n          })\n        ).then(\n          /**\n           * @param {{data: any; error: any}} result\n           */\n          async ({ data, error: error2 }) => {\n            let str;\n            try {\n              str = devalue.uneval(error2 ? [, error2] : [data], replacer);\n            } catch {\n              error2 = await handle_error_and_jsonify(\n                event,\n                event_state,\n                options2,\n                new Error(`Failed to serialize promise while rendering ${event.route.id}`)\n              );\n              data = void 0;\n              str = devalue.uneval([, error2], replacer);\n            }\n            return {\n              index,\n              str: `${global}.resolve(${id}, ${str.includes(\"app.decode\") ? `(app) => ${str}` : `() => ${str}`})`\n            };\n          }\n        );\n        iterator.add(promise);\n        return `${global}.defer(${id})`;\n      } else {\n        for (const key2 in options2.hooks.transport) {\n          const encoded = options2.hooks.transport[key2].encode(thing);\n          if (encoded) {\n            return `app.decode('${key2}', ${devalue.uneval(encoded, replacer)})`;\n          }\n        }\n      }\n    };\n  }\n  const strings = (\n    /** @type {string[]} */\n    []\n  );\n  return {\n    set_max_nodes(i) {\n      max_nodes = i;\n    },\n    add_node(i, node) {\n      try {\n        if (!node) {\n          strings[i] = \"null\";\n          return;\n        }\n        const payload = { type: \"data\", data: node.data, uses: serialize_uses(node) };\n        if (node.slash) payload.slash = node.slash;\n        strings[i] = devalue.uneval(payload, get_replacer(i));\n      } catch (e) {\n        e.path = e.path.slice(1);\n        throw new Error(clarify_devalue_error(\n          event,\n          /** @type {any} */\n          e\n        ));\n      }\n    },\n    get_data(csp) {\n      const open = `<script${csp.script_needs_nonce ? ` nonce=\"${csp.nonce}\"` : \"\"}>`;\n      const close = `<\\/script>\n`;\n      return {\n        data: `[${compact(max_nodes > -1 ? strings.slice(0, max_nodes) : strings).join(\",\")}]`,\n        chunks: promise_id > 1 ? iterator.iterate(({ index, str }) => {\n          if (max_nodes > -1 && index >= max_nodes) {\n            return \"\";\n          }\n          return open + str + close;\n        }) : null\n      };\n    }\n  };\n}\nfunction server_data_serializer_json(event, event_state, options2) {\n  let promise_id = 1;\n  const iterator = create_async_iterator();\n  const reducers = {\n    ...Object.fromEntries(\n      Object.entries(options2.hooks.transport).map(([key2, value]) => [key2, value.encode])\n    ),\n    /** @param {any} thing */\n    Promise: (thing) => {\n      if (typeof thing?.then !== \"function\") {\n        return;\n      }\n      const id = promise_id++;\n      let key2 = \"data\";\n      const promise = thing.catch(\n        /** @param {any} e */\n        async (e) => {\n          key2 = \"error\";\n          return handle_error_and_jsonify(\n            event,\n            event_state,\n            options2,\n            /** @type {any} */\n            e\n          );\n        }\n      ).then(\n        /** @param {any} value */\n        async (value) => {\n          let str;\n          try {\n            str = devalue.stringify(value, reducers);\n          } catch {\n            const error2 = await handle_error_and_jsonify(\n              event,\n              event_state,\n              options2,\n              new Error(`Failed to serialize promise while rendering ${event.route.id}`)\n            );\n            key2 = \"error\";\n            str = devalue.stringify(error2, reducers);\n          }\n          return `{\"type\":\"chunk\",\"id\":${id},\"${key2}\":${str}}\n`;\n        }\n      );\n      iterator.add(promise);\n      return id;\n    }\n  };\n  const strings = (\n    /** @type {string[]} */\n    []\n  );\n  return {\n    add_node(i, node) {\n      try {\n        if (!node) {\n          strings[i] = \"null\";\n          return;\n        }\n        if (node.type === \"error\" || node.type === \"skip\") {\n          strings[i] = JSON.stringify(node);\n          return;\n        }\n        strings[i] = `{\"type\":\"data\",\"data\":${devalue.stringify(node.data, reducers)},\"uses\":${JSON.stringify(\n          serialize_uses(node)\n        )}${node.slash ? `,\"slash\":${JSON.stringify(node.slash)}` : \"\"}}`;\n      } catch (e) {\n        e.path = \"data\" + e.path;\n        throw new Error(clarify_devalue_error(\n          event,\n          /** @type {any} */\n          e\n        ));\n      }\n    },\n    get_data() {\n      return {\n        data: `{\"type\":\"data\",\"nodes\":[${strings.join(\",\")}]}\n`,\n        chunks: promise_id > 1 ? iterator.iterate() : null\n      };\n    }\n  };\n}\nasync function load_server_data({ event, event_state, state, node, parent }) {\n  if (!node?.server) return null;\n  let is_tracking = true;\n  const uses = {\n    dependencies: /* @__PURE__ */ new Set(),\n    params: /* @__PURE__ */ new Set(),\n    parent: false,\n    route: false,\n    url: false,\n    search_params: /* @__PURE__ */ new Set()\n  };\n  const load = node.server.load;\n  const slash = node.server.trailingSlash;\n  if (!load) {\n    return { type: \"data\", data: null, uses, slash };\n  }\n  const url = make_trackable(\n    event.url,\n    () => {\n      if (is_tracking) {\n        uses.url = true;\n      }\n    },\n    (param) => {\n      if (is_tracking) {\n        uses.search_params.add(param);\n      }\n    }\n  );\n  if (state.prerendering) {\n    disable_search(url);\n  }\n  const result = await record_span({\n    name: \"sveltekit.load\",\n    attributes: {\n      \"sveltekit.load.node_id\": node.server_id || \"unknown\",\n      \"sveltekit.load.node_type\": get_node_type(node.server_id),\n      \"http.route\": event.route.id || \"unknown\"\n    },\n    fn: async (current2) => {\n      const traced_event = merge_tracing(event, current2);\n      const result2 = await with_request_store(\n        { event: traced_event, state: event_state },\n        () => load.call(null, {\n          ...traced_event,\n          fetch: (info, init2) => {\n            new URL(info instanceof Request ? info.url : info, event.url);\n            return event.fetch(info, init2);\n          },\n          /** @param {string[]} deps */\n          depends: (...deps) => {\n            for (const dep of deps) {\n              const { href } = new URL(dep, event.url);\n              uses.dependencies.add(href);\n            }\n          },\n          params: new Proxy(event.params, {\n            get: (target, key2) => {\n              if (is_tracking) {\n                uses.params.add(key2);\n              }\n              return target[\n                /** @type {string} */\n                key2\n              ];\n            }\n          }),\n          parent: async () => {\n            if (is_tracking) {\n              uses.parent = true;\n            }\n            return parent();\n          },\n          route: new Proxy(event.route, {\n            get: (target, key2) => {\n              if (is_tracking) {\n                uses.route = true;\n              }\n              return target[\n                /** @type {'id'} */\n                key2\n              ];\n            }\n          }),\n          url,\n          untrack(fn) {\n            is_tracking = false;\n            try {\n              return fn();\n            } finally {\n              is_tracking = true;\n            }\n          }\n        })\n      );\n      return result2;\n    }\n  });\n  return {\n    type: \"data\",\n    data: result ?? null,\n    uses,\n    slash\n  };\n}\nasync function load_data({\n  event,\n  event_state,\n  fetched,\n  node,\n  parent,\n  server_data_promise,\n  state,\n  resolve_opts,\n  csr\n}) {\n  const server_data_node = await server_data_promise;\n  const load = node?.universal?.load;\n  if (!load) {\n    return server_data_node?.data ?? null;\n  }\n  const result = await record_span({\n    name: \"sveltekit.load\",\n    attributes: {\n      \"sveltekit.load.node_id\": node.universal_id || \"unknown\",\n      \"sveltekit.load.node_type\": get_node_type(node.universal_id),\n      \"http.route\": event.route.id || \"unknown\"\n    },\n    fn: async (current2) => {\n      const traced_event = merge_tracing(event, current2);\n      return await with_request_store(\n        { event: traced_event, state: event_state },\n        () => load.call(null, {\n          url: event.url,\n          params: event.params,\n          data: server_data_node?.data ?? null,\n          route: event.route,\n          fetch: create_universal_fetch(event, state, fetched, csr, resolve_opts),\n          setHeaders: event.setHeaders,\n          depends: () => {\n          },\n          parent,\n          untrack: (fn) => fn(),\n          tracing: traced_event.tracing\n        })\n      );\n    }\n  });\n  return result ?? null;\n}\nfunction create_universal_fetch(event, state, fetched, csr, resolve_opts) {\n  const universal_fetch = async (input, init2) => {\n    const cloned_body = input instanceof Request && input.body ? input.clone().body : null;\n    const cloned_headers = input instanceof Request && [...input.headers].length ? new Headers(input.headers) : init2?.headers;\n    let response = await event.fetch(input, init2);\n    const url = new URL(input instanceof Request ? input.url : input, event.url);\n    const same_origin = url.origin === event.url.origin;\n    let dependency;\n    if (same_origin) {\n      if (state.prerendering) {\n        dependency = { response, body: null };\n        state.prerendering.dependencies.set(url.pathname, dependency);\n      }\n    } else if (url.protocol === \"https:\" || url.protocol === \"http:\") {\n      const mode = input instanceof Request ? input.mode : init2?.mode ?? \"cors\";\n      if (mode === \"no-cors\") {\n        response = new Response(\"\", {\n          status: response.status,\n          statusText: response.statusText,\n          headers: response.headers\n        });\n      } else {\n        const acao = response.headers.get(\"access-control-allow-origin\");\n        if (!acao || acao !== event.url.origin && acao !== \"*\") {\n          throw new Error(\n            `CORS error: ${acao ? \"Incorrect\" : \"No\"} 'Access-Control-Allow-Origin' header is present on the requested resource`\n          );\n        }\n      }\n    }\n    let teed_body;\n    const proxy = new Proxy(response, {\n      get(response2, key2, _receiver) {\n        async function push_fetched(body2, is_b64) {\n          const status_number = Number(response2.status);\n          if (isNaN(status_number)) {\n            throw new Error(\n              `response.status is not a number. value: \"${response2.status}\" type: ${typeof response2.status}`\n            );\n          }\n          fetched.push({\n            url: same_origin ? url.href.slice(event.url.origin.length) : url.href,\n            method: event.request.method,\n            request_body: (\n              /** @type {string | ArrayBufferView | undefined} */\n              input instanceof Request && cloned_body ? await stream_to_string(cloned_body) : init2?.body\n            ),\n            request_headers: cloned_headers,\n            response_body: body2,\n            response: response2,\n            is_b64\n          });\n        }\n        if (key2 === \"body\") {\n          if (response2.body === null) {\n            return null;\n          }\n          if (teed_body) {\n            return teed_body;\n          }\n          const [a, b] = response2.body.tee();\n          void (async () => {\n            let result = new Uint8Array();\n            for await (const chunk of a) {\n              const combined = new Uint8Array(result.length + chunk.length);\n              combined.set(result, 0);\n              combined.set(chunk, result.length);\n              result = combined;\n            }\n            if (dependency) {\n              dependency.body = new Uint8Array(result);\n            }\n            void push_fetched(base64_encode(result), true);\n          })();\n          return teed_body = b;\n        }\n        if (key2 === \"arrayBuffer\") {\n          return async () => {\n            const buffer = await response2.arrayBuffer();\n            const bytes = new Uint8Array(buffer);\n            if (dependency) {\n              dependency.body = bytes;\n            }\n            if (buffer instanceof ArrayBuffer) {\n              await push_fetched(base64_encode(bytes), true);\n            }\n            return buffer;\n          };\n        }\n        async function text2() {\n          const body2 = await response2.text();\n          if (body2 === \"\" && NULL_BODY_STATUS.includes(response2.status)) {\n            await push_fetched(void 0, false);\n            return void 0;\n          }\n          if (!body2 || typeof body2 === \"string\") {\n            await push_fetched(body2, false);\n          }\n          if (dependency) {\n            dependency.body = body2;\n          }\n          return body2;\n        }\n        if (key2 === \"text\") {\n          return text2;\n        }\n        if (key2 === \"json\") {\n          return async () => {\n            const body2 = await text2();\n            return body2 ? JSON.parse(body2) : void 0;\n          };\n        }\n        return Reflect.get(response2, key2, response2);\n      }\n    });\n    if (csr) {\n      const get = response.headers.get;\n      response.headers.get = (key2) => {\n        const lower = key2.toLowerCase();\n        const value = get.call(response.headers, lower);\n        if (value && !lower.startsWith(\"x-sveltekit-\")) {\n          const included = resolve_opts.filterSerializedResponseHeaders(lower, value);\n          if (!included) {\n            throw new Error(\n              `Failed to get response header \"${lower}\" \u2014 it must be included by the \\`filterSerializedResponseHeaders\\` option: https://svelte.dev/docs/kit/hooks#Server-hooks-handle (at ${event.route.id})`\n            );\n          }\n        }\n        return value;\n      };\n    }\n    return proxy;\n  };\n  return (input, init2) => {\n    const response = universal_fetch(input, init2);\n    response.catch(() => {\n    });\n    return response;\n  };\n}\nasync function stream_to_string(stream) {\n  let result = \"\";\n  const reader = stream.getReader();\n  while (true) {\n    const { done, value } = await reader.read();\n    if (done) {\n      break;\n    }\n    result += text_decoder.decode(value);\n  }\n  return result;\n}\nfunction hash(...values) {\n  let hash2 = 5381;\n  for (const value of values) {\n    if (typeof value === \"string\") {\n      let i = value.length;\n      while (i) hash2 = hash2 * 33 ^ value.charCodeAt(--i);\n    } else if (ArrayBuffer.isView(value)) {\n      const buffer = new Uint8Array(value.buffer, value.byteOffset, value.byteLength);\n      let i = buffer.length;\n      while (i) hash2 = hash2 * 33 ^ buffer[--i];\n    } else {\n      throw new TypeError(\"value must be a string or TypedArray\");\n    }\n  }\n  return (hash2 >>> 0).toString(36);\n}\nconst replacements = {\n  \"<\": \"\\\\u003C\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nconst pattern = new RegExp(`[${Object.keys(replacements).join(\"\")}]`, \"g\");\nfunction serialize_data(fetched, filter, prerendering = false) {\n  const headers2 = {};\n  let cache_control = null;\n  let age = null;\n  let varyAny = false;\n  for (const [key2, value] of fetched.response.headers) {\n    if (filter(key2, value)) {\n      headers2[key2] = value;\n    }\n    if (key2 === \"cache-control\") cache_control = value;\n    else if (key2 === \"age\") age = value;\n    else if (key2 === \"vary\" && value.trim() === \"*\") varyAny = true;\n  }\n  const payload = {\n    status: fetched.response.status,\n    statusText: fetched.response.statusText,\n    headers: headers2,\n    body: fetched.response_body\n  };\n  const safe_payload = JSON.stringify(payload).replace(pattern, (match) => replacements[match]);\n  const attrs = [\n    'type=\"application/json\"',\n    \"data-sveltekit-fetched\",\n    `data-url=\"${escape_html(fetched.url, true)}\"`\n  ];\n  if (fetched.is_b64) {\n    attrs.push(\"data-b64\");\n  }\n  if (fetched.request_headers || fetched.request_body) {\n    const values = [];\n    if (fetched.request_headers) {\n      values.push([...new Headers(fetched.request_headers)].join(\",\"));\n    }\n    if (fetched.request_body) {\n      values.push(fetched.request_body);\n    }\n    attrs.push(`data-hash=\"${hash(...values)}\"`);\n  }\n  if (!prerendering && fetched.method === \"GET\" && cache_control && !varyAny) {\n    const match = /s-maxage=(\\d+)/g.exec(cache_control) ?? /max-age=(\\d+)/g.exec(cache_control);\n    if (match) {\n      const ttl = +match[1] - +(age ?? \"0\");\n      attrs.push(`data-ttl=\"${ttl}\"`);\n    }\n  }\n  return `<script ${attrs.join(\" \")}>${safe_payload}<\\/script>`;\n}\nconst s = JSON.stringify;\nfunction sha256(data) {\n  if (!key[0]) precompute();\n  const out = init.slice(0);\n  const array2 = encode(data);\n  for (let i = 0; i < array2.length; i += 16) {\n    const w = array2.subarray(i, i + 16);\n    let tmp;\n    let a;\n    let b;\n    let out0 = out[0];\n    let out1 = out[1];\n    let out2 = out[2];\n    let out3 = out[3];\n    let out4 = out[4];\n    let out5 = out[5];\n    let out6 = out[6];\n    let out7 = out[7];\n    for (let i2 = 0; i2 < 64; i2++) {\n      if (i2 < 16) {\n        tmp = w[i2];\n      } else {\n        a = w[i2 + 1 & 15];\n        b = w[i2 + 14 & 15];\n        tmp = w[i2 & 15] = (a >>> 7 ^ a >>> 18 ^ a >>> 3 ^ a << 25 ^ a << 14) + (b >>> 17 ^ b >>> 19 ^ b >>> 10 ^ b << 15 ^ b << 13) + w[i2 & 15] + w[i2 + 9 & 15] | 0;\n      }\n      tmp = tmp + out7 + (out4 >>> 6 ^ out4 >>> 11 ^ out4 >>> 25 ^ out4 << 26 ^ out4 << 21 ^ out4 << 7) + (out6 ^ out4 & (out5 ^ out6)) + key[i2];\n      out7 = out6;\n      out6 = out5;\n      out5 = out4;\n      out4 = out3 + tmp | 0;\n      out3 = out2;\n      out2 = out1;\n      out1 = out0;\n      out0 = tmp + (out1 & out2 ^ out3 & (out1 ^ out2)) + (out1 >>> 2 ^ out1 >>> 13 ^ out1 >>> 22 ^ out1 << 30 ^ out1 << 19 ^ out1 << 10) | 0;\n    }\n    out[0] = out[0] + out0 | 0;\n    out[1] = out[1] + out1 | 0;\n    out[2] = out[2] + out2 | 0;\n    out[3] = out[3] + out3 | 0;\n    out[4] = out[4] + out4 | 0;\n    out[5] = out[5] + out5 | 0;\n    out[6] = out[6] + out6 | 0;\n    out[7] = out[7] + out7 | 0;\n  }\n  const bytes = new Uint8Array(out.buffer);\n  reverse_endianness(bytes);\n  return btoa(String.fromCharCode(...bytes));\n}\nconst init = new Uint32Array(8);\nconst key = new Uint32Array(64);\nfunction precompute() {\n  function frac(x) {\n    return (x - Math.floor(x)) * 4294967296;\n  }\n  let prime = 2;\n  for (let i = 0; i < 64; prime++) {\n    let is_prime = true;\n    for (let factor = 2; factor * factor <= prime; factor++) {\n      if (prime % factor === 0) {\n        is_prime = false;\n        break;\n      }\n    }\n    if (is_prime) {\n      if (i < 8) {\n        init[i] = frac(prime ** (1 / 2));\n      }\n      key[i] = frac(prime ** (1 / 3));\n      i++;\n    }\n  }\n}\nfunction reverse_endianness(bytes) {\n  for (let i = 0; i < bytes.length; i += 4) {\n    const a = bytes[i + 0];\n    const b = bytes[i + 1];\n    const c = bytes[i + 2];\n    const d = bytes[i + 3];\n    bytes[i + 0] = d;\n    bytes[i + 1] = c;\n    bytes[i + 2] = b;\n    bytes[i + 3] = a;\n  }\n}\nfunction encode(str) {\n  const encoded = text_encoder.encode(str);\n  const length = encoded.length * 8;\n  const size = 512 * Math.ceil((length + 65) / 512);\n  const bytes = new Uint8Array(size / 8);\n  bytes.set(encoded);\n  bytes[encoded.length] = 128;\n  reverse_endianness(bytes);\n  const words = new Uint32Array(bytes.buffer);\n  words[words.length - 2] = Math.floor(length / 4294967296);\n  words[words.length - 1] = length;\n  return words;\n}\nconst array = new Uint8Array(16);\nfunction generate_nonce() {\n  crypto.getRandomValues(array);\n  return btoa(String.fromCharCode(...array));\n}\nconst quoted = /* @__PURE__ */ new Set([\n  \"self\",\n  \"unsafe-eval\",\n  \"unsafe-hashes\",\n  \"unsafe-inline\",\n  \"none\",\n  \"strict-dynamic\",\n  \"report-sample\",\n  \"wasm-unsafe-eval\",\n  \"script\"\n]);\nconst crypto_pattern = /^(nonce|sha\\d\\d\\d)-/;\nclass BaseProvider {\n  /** @type {boolean} */\n  #use_hashes;\n  /** @type {boolean} */\n  #script_needs_csp;\n  /** @type {boolean} */\n  #script_src_needs_csp;\n  /** @type {boolean} */\n  #script_src_elem_needs_csp;\n  /** @type {boolean} */\n  #style_needs_csp;\n  /** @type {boolean} */\n  #style_src_needs_csp;\n  /** @type {boolean} */\n  #style_src_attr_needs_csp;\n  /** @type {boolean} */\n  #style_src_elem_needs_csp;\n  /** @type {import('types').CspDirectives} */\n  #directives;\n  /** @type {import('types').Csp.Source[]} */\n  #script_src;\n  /** @type {import('types').Csp.Source[]} */\n  #script_src_elem;\n  /** @type {import('types').Csp.Source[]} */\n  #style_src;\n  /** @type {import('types').Csp.Source[]} */\n  #style_src_attr;\n  /** @type {import('types').Csp.Source[]} */\n  #style_src_elem;\n  /** @type {string} */\n  #nonce;\n  /**\n   * @param {boolean} use_hashes\n   * @param {import('types').CspDirectives} directives\n   * @param {string} nonce\n   */\n  constructor(use_hashes, directives, nonce) {\n    this.#use_hashes = use_hashes;\n    this.#directives = directives;\n    const d = this.#directives;\n    this.#script_src = [];\n    this.#script_src_elem = [];\n    this.#style_src = [];\n    this.#style_src_attr = [];\n    this.#style_src_elem = [];\n    const effective_script_src = d[\"script-src\"] || d[\"default-src\"];\n    const script_src_elem = d[\"script-src-elem\"];\n    const effective_style_src = d[\"style-src\"] || d[\"default-src\"];\n    const style_src_attr = d[\"style-src-attr\"];\n    const style_src_elem = d[\"style-src-elem\"];\n    const needs_csp = (directive) => !!directive && !directive.some((value) => value === \"unsafe-inline\");\n    this.#script_src_needs_csp = needs_csp(effective_script_src);\n    this.#script_src_elem_needs_csp = needs_csp(script_src_elem);\n    this.#style_src_needs_csp = needs_csp(effective_style_src);\n    this.#style_src_attr_needs_csp = needs_csp(style_src_attr);\n    this.#style_src_elem_needs_csp = needs_csp(style_src_elem);\n    this.#script_needs_csp = this.#script_src_needs_csp || this.#script_src_elem_needs_csp;\n    this.#style_needs_csp = this.#style_src_needs_csp || this.#style_src_attr_needs_csp || this.#style_src_elem_needs_csp;\n    this.script_needs_nonce = this.#script_needs_csp && !this.#use_hashes;\n    this.style_needs_nonce = this.#style_needs_csp && !this.#use_hashes;\n    this.#nonce = nonce;\n  }\n  /** @param {string} content */\n  add_script(content) {\n    if (!this.#script_needs_csp) return;\n    const source = this.#use_hashes ? `sha256-${sha256(content)}` : `nonce-${this.#nonce}`;\n    if (this.#script_src_needs_csp) {\n      this.#script_src.push(source);\n    }\n    if (this.#script_src_elem_needs_csp) {\n      this.#script_src_elem.push(source);\n    }\n  }\n  /** @param {string} content */\n  add_style(content) {\n    if (!this.#style_needs_csp) return;\n    const source = this.#use_hashes ? `sha256-${sha256(content)}` : `nonce-${this.#nonce}`;\n    if (this.#style_src_needs_csp) {\n      this.#style_src.push(source);\n    }\n    if (this.#style_src_attr_needs_csp) {\n      this.#style_src_attr.push(source);\n    }\n    if (this.#style_src_elem_needs_csp) {\n      const sha256_empty_comment_hash = \"sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=\";\n      const d = this.#directives;\n      if (d[\"style-src-elem\"] && !d[\"style-src-elem\"].includes(sha256_empty_comment_hash) && !this.#style_src_elem.includes(sha256_empty_comment_hash)) {\n        this.#style_src_elem.push(sha256_empty_comment_hash);\n      }\n      if (source !== sha256_empty_comment_hash) {\n        this.#style_src_elem.push(source);\n      }\n    }\n  }\n  /**\n   * @param {boolean} [is_meta]\n   */\n  get_header(is_meta = false) {\n    const header = [];\n    const directives = { ...this.#directives };\n    if (this.#style_src.length > 0) {\n      directives[\"style-src\"] = [\n        ...directives[\"style-src\"] || directives[\"default-src\"] || [],\n        ...this.#style_src\n      ];\n    }\n    if (this.#style_src_attr.length > 0) {\n      directives[\"style-src-attr\"] = [\n        ...directives[\"style-src-attr\"] || [],\n        ...this.#style_src_attr\n      ];\n    }\n    if (this.#style_src_elem.length > 0) {\n      directives[\"style-src-elem\"] = [\n        ...directives[\"style-src-elem\"] || [],\n        ...this.#style_src_elem\n      ];\n    }\n    if (this.#script_src.length > 0) {\n      directives[\"script-src\"] = [\n        ...directives[\"script-src\"] || directives[\"default-src\"] || [],\n        ...this.#script_src\n      ];\n    }\n    if (this.#script_src_elem.length > 0) {\n      directives[\"script-src-elem\"] = [\n        ...directives[\"script-src-elem\"] || [],\n        ...this.#script_src_elem\n      ];\n    }\n    for (const key2 in directives) {\n      if (is_meta && (key2 === \"frame-ancestors\" || key2 === \"report-uri\" || key2 === \"sandbox\")) {\n        continue;\n      }\n      const value = (\n        /** @type {string[] | true} */\n        directives[key2]\n      );\n      if (!value) continue;\n      const directive = [key2];\n      if (Array.isArray(value)) {\n        value.forEach((value2) => {\n          if (quoted.has(value2) || crypto_pattern.test(value2)) {\n            directive.push(`'${value2}'`);\n          } else {\n            directive.push(value2);\n          }\n        });\n      }\n      header.push(directive.join(\" \"));\n    }\n    return header.join(\"; \");\n  }\n}\nclass CspProvider extends BaseProvider {\n  get_meta() {\n    const content = this.get_header(true);\n    if (!content) {\n      return;\n    }\n    return `<meta http-equiv=\"content-security-policy\" content=\"${escape_html(content, true)}\">`;\n  }\n}\nclass CspReportOnlyProvider extends BaseProvider {\n  /**\n   * @param {boolean} use_hashes\n   * @param {import('types').CspDirectives} directives\n   * @param {string} nonce\n   */\n  constructor(use_hashes, directives, nonce) {\n    super(use_hashes, directives, nonce);\n    if (Object.values(directives).filter((v) => !!v).length > 0) {\n      const has_report_to = directives[\"report-to\"]?.length ?? 0 > 0;\n      const has_report_uri = directives[\"report-uri\"]?.length ?? 0 > 0;\n      if (!has_report_to && !has_report_uri) {\n        throw Error(\n          \"`content-security-policy-report-only` must be specified with either the `report-to` or `report-uri` directives, or both\"\n        );\n      }\n    }\n  }\n}\nclass Csp {\n  /** @readonly */\n  nonce = generate_nonce();\n  /** @type {CspProvider} */\n  csp_provider;\n  /** @type {CspReportOnlyProvider} */\n  report_only_provider;\n  /**\n   * @param {import('./types.js').CspConfig} config\n   * @param {import('./types.js').CspOpts} opts\n   */\n  constructor({ mode, directives, reportOnly }, { prerender }) {\n    const use_hashes = mode === \"hash\" || mode === \"auto\" && prerender;\n    this.csp_provider = new CspProvider(use_hashes, directives, this.nonce);\n    this.report_only_provider = new CspReportOnlyProvider(use_hashes, reportOnly, this.nonce);\n  }\n  get script_needs_nonce() {\n    return this.csp_provider.script_needs_nonce || this.report_only_provider.script_needs_nonce;\n  }\n  get style_needs_nonce() {\n    return this.csp_provider.style_needs_nonce || this.report_only_provider.style_needs_nonce;\n  }\n  /** @param {string} content */\n  add_script(content) {\n    this.csp_provider.add_script(content);\n    this.report_only_provider.add_script(content);\n  }\n  /** @param {string} content */\n  add_style(content) {\n    this.csp_provider.add_style(content);\n    this.report_only_provider.add_style(content);\n  }\n}\nfunction exec(match, params, matchers) {\n  const result = {};\n  const values = match.slice(1);\n  const values_needing_match = values.filter((value) => value !== void 0);\n  let buffered = 0;\n  for (let i = 0; i < params.length; i += 1) {\n    const param = params[i];\n    let value = values[i - buffered];\n    if (param.chained && param.rest && buffered) {\n      value = values.slice(i - buffered, i + 1).filter((s2) => s2).join(\"/\");\n      buffered = 0;\n    }\n    if (value === void 0) {\n      if (param.rest) result[param.name] = \"\";\n      continue;\n    }\n    if (!param.matcher || matchers[param.matcher](value)) {\n      result[param.name] = value;\n      const next_param = params[i + 1];\n      const next_value = values[i + 1];\n      if (next_param && !next_param.rest && next_param.optional && next_value && param.chained) {\n        buffered = 0;\n      }\n      if (!next_param && !next_value && Object.keys(result).length === values_needing_match.length) {\n        buffered = 0;\n      }\n      continue;\n    }\n    if (param.optional && param.chained) {\n      buffered++;\n      continue;\n    }\n    return;\n  }\n  if (buffered) return;\n  return result;\n}\nfunction generate_route_object(route, url, manifest) {\n  const { errors, layouts, leaf } = route;\n  const nodes = [...errors, ...layouts.map((l) => l?.[1]), leaf[1]].filter((n) => typeof n === \"number\").map((n) => `'${n}': () => ${create_client_import(manifest._.client.nodes?.[n], url)}`).join(\",\\n\t\t\");\n  return [\n    `{\n\tid: ${s(route.id)}`,\n    `errors: ${s(route.errors)}`,\n    `layouts: ${s(route.layouts)}`,\n    `leaf: ${s(route.leaf)}`,\n    `nodes: {\n\t\t${nodes}\n\t}\n}`\n  ].join(\",\\n\t\");\n}\nfunction create_client_import(import_path, url) {\n  if (!import_path) return \"Promise.resolve({})\";\n  if (import_path[0] === \"/\") {\n    return `import('${import_path}')`;\n  }\n  if (assets !== \"\") {\n    return `import('${assets}/${import_path}')`;\n  }\n  let path = get_relative_path(url.pathname, `${base}/${import_path}`);\n  if (path[0] !== \".\") path = `./${path}`;\n  return `import('${path}')`;\n}\nasync function resolve_route(resolved_path, url, manifest) {\n  if (!manifest._.client.routes) {\n    return text(\"Server-side route resolution disabled\", { status: 400 });\n  }\n  let route = null;\n  let params = {};\n  const matchers = await manifest._.matchers();\n  for (const candidate of manifest._.client.routes) {\n    const match = candidate.pattern.exec(resolved_path);\n    if (!match) continue;\n    const matched = exec(match, candidate.params, matchers);\n    if (matched) {\n      route = candidate;\n      params = decode_params(matched);\n      break;\n    }\n  }\n  return create_server_routing_response(route, params, url, manifest).response;\n}\nfunction create_server_routing_response(route, params, url, manifest) {\n  const headers2 = new Headers({\n    \"content-type\": \"application/javascript; charset=utf-8\"\n  });\n  if (route) {\n    const csr_route = generate_route_object(route, url, manifest);\n    const body2 = `${create_css_import(route, url, manifest)}\nexport const route = ${csr_route}; export const params = ${JSON.stringify(params)};`;\n    return { response: text(body2, { headers: headers2 }), body: body2 };\n  } else {\n    return { response: text(\"\", { headers: headers2 }), body: \"\" };\n  }\n}\nfunction create_css_import(route, url, manifest) {\n  const { errors, layouts, leaf } = route;\n  let css = \"\";\n  for (const node of [...errors, ...layouts.map((l) => l?.[1]), leaf[1]]) {\n    if (typeof node !== \"number\") continue;\n    const node_css = manifest._.client.css?.[node];\n    for (const css_path of node_css ?? []) {\n      css += `'${assets || base}/${css_path}',`;\n    }\n  }\n  if (!css) return \"\";\n  return `${create_client_import(\n    /** @type {string} */\n    manifest._.client.start,\n    url\n  )}.then(x => x.load_css([${css}]));`;\n}\nconst updated = {\n  ...readable(false),\n  check: () => false\n};\nasync function render_response({\n  branch,\n  fetched,\n  options: options2,\n  manifest,\n  state,\n  page_config,\n  status,\n  error: error2 = null,\n  event,\n  event_state,\n  resolve_opts,\n  action_result,\n  data_serializer\n}) {\n  if (state.prerendering) {\n    if (options2.csp.mode === \"nonce\") {\n      throw new Error('Cannot use prerendering if config.kit.csp.mode === \"nonce\"');\n    }\n    if (options2.app_template_contains_nonce) {\n      throw new Error(\"Cannot use prerendering if page template contains %sveltekit.nonce%\");\n    }\n  }\n  const { client } = manifest._;\n  const modulepreloads = new Set(client.imports);\n  const stylesheets = new Set(client.stylesheets);\n  const fonts = new Set(client.fonts);\n  const link_headers = /* @__PURE__ */ new Set();\n  const link_tags = /* @__PURE__ */ new Set();\n  const inline_styles = /* @__PURE__ */ new Map();\n  let rendered;\n  const form_value = action_result?.type === \"success\" || action_result?.type === \"failure\" ? action_result.data ?? null : null;\n  let base$1 = base;\n  let assets$1 = assets;\n  let base_expression = s(base);\n  {\n    if (!state.prerendering?.fallback) {\n      const segments = event.url.pathname.slice(base.length).split(\"/\").slice(2);\n      base$1 = segments.map(() => \"..\").join(\"/\") || \".\";\n      base_expression = `new URL(${s(base$1)}, location).pathname.slice(0, -1)`;\n      if (!assets || assets[0] === \"/\" && assets !== SVELTE_KIT_ASSETS) {\n        assets$1 = base$1;\n      }\n    } else if (options2.hash_routing) {\n      base_expression = \"new URL('.', location).pathname.slice(0, -1)\";\n    }\n  }\n  if (page_config.ssr) {\n    const props = {\n      stores: {\n        page: writable(null),\n        navigating: writable(null),\n        updated\n      },\n      constructors: await Promise.all(\n        branch.map(({ node }) => {\n          if (!node.component) {\n            throw new Error(`Missing +page.svelte component for route ${event.route.id}`);\n          }\n          return node.component();\n        })\n      ),\n      form: form_value\n    };\n    let data2 = {};\n    for (let i = 0; i < branch.length; i += 1) {\n      data2 = { ...data2, ...branch[i].data };\n      props[`data_${i}`] = data2;\n    }\n    props.page = {\n      error: error2,\n      params: (\n        /** @type {Record<string, any>} */\n        event.params\n      ),\n      route: event.route,\n      status,\n      url: event.url,\n      data: data2,\n      form: form_value,\n      state: {}\n    };\n    const render_opts = {\n      context: /* @__PURE__ */ new Map([\n        [\n          \"__request__\",\n          {\n            page: props.page\n          }\n        ]\n      ])\n    };\n    const fetch2 = globalThis.fetch;\n    try {\n      if (BROWSER) ;\n      rendered = await with_request_store({ event, state: event_state }, async () => {\n        if (relative) override({ base: base$1, assets: assets$1 });\n        const maybe_promise = options2.root.render(props, render_opts);\n        const rendered2 = options2.async && \"then\" in maybe_promise ? (\n          /** @type {ReturnType<typeof options.root.render> & Promise<any>} */\n          maybe_promise.then((r) => r)\n        ) : maybe_promise;\n        if (options2.async) {\n          reset();\n        }\n        const { head: head2, html: html2, css } = options2.async ? await rendered2 : rendered2;\n        return { head: head2, html: html2, css };\n      });\n    } finally {\n      reset();\n    }\n    for (const { node } of branch) {\n      for (const url of node.imports) modulepreloads.add(url);\n      for (const url of node.stylesheets) stylesheets.add(url);\n      for (const url of node.fonts) fonts.add(url);\n      if (node.inline_styles && !client.inline) {\n        Object.entries(await node.inline_styles()).forEach(([k, v]) => inline_styles.set(k, v));\n      }\n    }\n  } else {\n    rendered = { head: \"\", html: \"\", css: { code: \"\", map: null } };\n  }\n  let head = \"\";\n  let body2 = rendered.html;\n  const csp = new Csp(options2.csp, {\n    prerender: !!state.prerendering\n  });\n  const prefixed = (path) => {\n    if (path.startsWith(\"/\")) {\n      return base + path;\n    }\n    return `${assets$1}/${path}`;\n  };\n  const style = client.inline ? client.inline?.style : Array.from(inline_styles.values()).join(\"\\n\");\n  if (style) {\n    const attributes = [];\n    if (csp.style_needs_nonce) attributes.push(` nonce=\"${csp.nonce}\"`);\n    csp.add_style(style);\n    head += `\n\t<style${attributes.join(\"\")}>${style}</style>`;\n  }\n  for (const dep of stylesheets) {\n    const path = prefixed(dep);\n    const attributes = ['rel=\"stylesheet\"'];\n    if (inline_styles.has(dep)) {\n      attributes.push(\"disabled\", 'media=\"(max-width: 0)\"');\n    } else {\n      if (resolve_opts.preload({ type: \"css\", path })) {\n        link_headers.add(`<${encodeURI(path)}>; rel=\"preload\"; as=\"style\"; nopush`);\n      }\n    }\n    head += `\n\t\t<link href=\"${path}\" ${attributes.join(\" \")}>`;\n  }\n  for (const dep of fonts) {\n    const path = prefixed(dep);\n    if (resolve_opts.preload({ type: \"font\", path })) {\n      const ext = dep.slice(dep.lastIndexOf(\".\") + 1);\n      link_tags.add(`<link rel=\"preload\" as=\"font\" type=\"font/${ext}\" href=\"${path}\" crossorigin>`);\n      link_headers.add(\n        `<${encodeURI(path)}>; rel=\"preload\"; as=\"font\"; type=\"font/${ext}\"; crossorigin; nopush`\n      );\n    }\n  }\n  const global = get_global_name(options2);\n  const { data, chunks } = data_serializer.get_data(csp);\n  if (page_config.ssr && page_config.csr) {\n    body2 += `\n\t\t\t${fetched.map(\n      (item) => serialize_data(item, resolve_opts.filterSerializedResponseHeaders, !!state.prerendering)\n    ).join(\"\\n\t\t\t\")}`;\n  }\n  if (page_config.csr) {\n    const route = manifest._.client.routes?.find((r) => r.id === event.route.id) ?? null;\n    if (client.uses_env_dynamic_public && state.prerendering) {\n      modulepreloads.add(`${app_dir}/env.js`);\n    }\n    if (!client.inline) {\n      const included_modulepreloads = Array.from(modulepreloads, (dep) => prefixed(dep)).filter(\n        (path) => resolve_opts.preload({ type: \"js\", path })\n      );\n      for (const path of included_modulepreloads) {\n        link_headers.add(`<${encodeURI(path)}>; rel=\"modulepreload\"; nopush`);\n        if (options2.preload_strategy !== \"modulepreload\") {\n          head += `\n\t\t<link rel=\"preload\" as=\"script\" crossorigin=\"anonymous\" href=\"${path}\">`;\n        } else {\n          link_tags.add(`<link rel=\"modulepreload\" href=\"${path}\">`);\n        }\n      }\n    }\n    if (state.prerendering && link_tags.size > 0) {\n      head += Array.from(link_tags).map((tag) => `\n\t\t${tag}`).join(\"\");\n    }\n    if (manifest._.client.routes && state.prerendering && !state.prerendering.fallback) {\n      const pathname = add_resolution_suffix(event.url.pathname);\n      state.prerendering.dependencies.set(\n        pathname,\n        create_server_routing_response(route, event.params, new URL(pathname, event.url), manifest)\n      );\n    }\n    const blocks = [];\n    const load_env_eagerly = client.uses_env_dynamic_public && state.prerendering;\n    const properties = [`base: ${base_expression}`];\n    if (assets) {\n      properties.push(`assets: ${s(assets)}`);\n    }\n    if (client.uses_env_dynamic_public) {\n      properties.push(`env: ${load_env_eagerly ? \"null\" : s(public_env)}`);\n    }\n    if (chunks) {\n      blocks.push(\"const deferred = new Map();\");\n      properties.push(`defer: (id) => new Promise((fulfil, reject) => {\n\t\t\t\t\t\t\tdeferred.set(id, { fulfil, reject });\n\t\t\t\t\t\t})`);\n      let app_declaration = \"\";\n      if (Object.keys(options2.hooks.transport).length > 0) {\n        if (client.inline) {\n          app_declaration = `const app = __sveltekit_${options2.version_hash}.app.app;`;\n        } else if (client.app) {\n          app_declaration = `const app = await import(${s(prefixed(client.app))});`;\n        } else {\n          app_declaration = `const { app } = await import(${s(prefixed(client.start))});`;\n        }\n      }\n      const prelude = app_declaration ? `${app_declaration}\n\t\t\t\t\t\t\tconst [data, error] = fn(app);` : `const [data, error] = fn();`;\n      properties.push(`resolve: async (id, fn) => {\n\t\t\t\t\t\t\t${prelude}\n\n\t\t\t\t\t\t\tconst try_to_resolve = () => {\n\t\t\t\t\t\t\t\tif (!deferred.has(id)) {\n\t\t\t\t\t\t\t\t\tsetTimeout(try_to_resolve, 0);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst { fulfil, reject } = deferred.get(id);\n\t\t\t\t\t\t\t\tdeferred.delete(id);\n\t\t\t\t\t\t\t\tif (error) reject(error);\n\t\t\t\t\t\t\t\telse fulfil(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttry_to_resolve();\n\t\t\t\t\t\t}`);\n    }\n    blocks.push(`${global} = {\n\t\t\t\t\t\t${properties.join(\",\\n\t\t\t\t\t\t\")}\n\t\t\t\t\t};`);\n    const args = [\"element\"];\n    blocks.push(\"const element = document.currentScript.parentElement;\");\n    if (page_config.ssr) {\n      const serialized = { form: \"null\", error: \"null\" };\n      if (form_value) {\n        serialized.form = uneval_action_response(\n          form_value,\n          /** @type {string} */\n          event.route.id,\n          options2.hooks.transport\n        );\n      }\n      if (error2) {\n        serialized.error = devalue.uneval(error2);\n      }\n      const hydrate = [\n        `node_ids: [${branch.map(({ node }) => node.index).join(\", \")}]`,\n        `data: ${data}`,\n        `form: ${serialized.form}`,\n        `error: ${serialized.error}`\n      ];\n      if (status !== 200) {\n        hydrate.push(`status: ${status}`);\n      }\n      if (manifest._.client.routes) {\n        if (route) {\n          const stringified = generate_route_object(route, event.url, manifest).replaceAll(\n            \"\\n\",\n            \"\\n\t\t\t\t\t\t\t\"\n          );\n          hydrate.push(`params: ${devalue.uneval(event.params)}`, `server_route: ${stringified}`);\n        }\n      } else if (options2.embedded) {\n        hydrate.push(`params: ${devalue.uneval(event.params)}`, `route: ${s(event.route)}`);\n      }\n      const indent = \"\t\".repeat(load_env_eagerly ? 7 : 6);\n      args.push(`{\n${indent}\t${hydrate.join(`,\n${indent}\t`)}\n${indent}}`);\n    }\n    const { remote_data: remote_cache } = event_state;\n    let serialized_remote_data = \"\";\n    if (remote_cache) {\n      const remote = {};\n      for (const [info, cache] of remote_cache) {\n        if (!info.id) continue;\n        for (const key2 in cache) {\n          remote[create_remote_cache_key(info.id, key2)] = await cache[key2];\n        }\n      }\n      const replacer = (thing) => {\n        for (const key2 in options2.hooks.transport) {\n          const encoded = options2.hooks.transport[key2].encode(thing);\n          if (encoded) {\n            return `app.decode('${key2}', ${devalue.uneval(encoded, replacer)})`;\n          }\n        }\n      };\n      serialized_remote_data = `${global}.data = ${devalue.uneval(remote, replacer)};\n\n\t\t\t\t\t\t`;\n    }\n    const boot = client.inline ? `${client.inline.script}\n\n\t\t\t\t\t${serialized_remote_data}${global}.app.start(${args.join(\", \")});` : client.app ? `Promise.all([\n\t\t\t\t\t\timport(${s(prefixed(client.start))}),\n\t\t\t\t\t\timport(${s(prefixed(client.app))})\n\t\t\t\t\t]).then(([kit, app]) => {\n\t\t\t\t\t\t${serialized_remote_data}kit.start(app, ${args.join(\", \")});\n\t\t\t\t\t});` : `import(${s(prefixed(client.start))}).then((app) => {\n\t\t\t\t\t\t${serialized_remote_data}app.start(${args.join(\", \")})\n\t\t\t\t\t});`;\n    if (load_env_eagerly) {\n      blocks.push(`import(${s(`${base$1}/${app_dir}/env.js`)}).then(({ env }) => {\n\t\t\t\t\t\t${global}.env = env;\n\n\t\t\t\t\t\t${boot.replace(/\\n/g, \"\\n\t\")}\n\t\t\t\t\t});`);\n    } else {\n      blocks.push(boot);\n    }\n    if (options2.service_worker) {\n      let opts = \"\";\n      if (options2.service_worker_options != null) {\n        const service_worker_options = { ...options2.service_worker_options };\n        opts = `, ${s(service_worker_options)}`;\n      }\n      blocks.push(`if ('serviceWorker' in navigator) {\n\t\t\t\t\t\taddEventListener('load', function () {\n\t\t\t\t\t\t\tnavigator.serviceWorker.register('${prefixed(\"service-worker.js\")}'${opts});\n\t\t\t\t\t\t});\n\t\t\t\t\t}`);\n    }\n    const init_app = `\n\t\t\t\t{\n\t\t\t\t\t${blocks.join(\"\\n\\n\t\t\t\t\t\")}\n\t\t\t\t}\n\t\t\t`;\n    csp.add_script(init_app);\n    body2 += `\n\t\t\t<script${csp.script_needs_nonce ? ` nonce=\"${csp.nonce}\"` : \"\"}>${init_app}<\\/script>\n\t\t`;\n  }\n  const headers2 = new Headers({\n    \"x-sveltekit-page\": \"true\",\n    \"content-type\": \"text/html\"\n  });\n  if (state.prerendering) {\n    const http_equiv = [];\n    const csp_headers = csp.csp_provider.get_meta();\n    if (csp_headers) {\n      http_equiv.push(csp_headers);\n    }\n    if (state.prerendering.cache) {\n      http_equiv.push(`<meta http-equiv=\"cache-control\" content=\"${state.prerendering.cache}\">`);\n    }\n    if (http_equiv.length > 0) {\n      head = http_equiv.join(\"\\n\") + head;\n    }\n  } else {\n    const csp_header = csp.csp_provider.get_header();\n    if (csp_header) {\n      headers2.set(\"content-security-policy\", csp_header);\n    }\n    const report_only_header = csp.report_only_provider.get_header();\n    if (report_only_header) {\n      headers2.set(\"content-security-policy-report-only\", report_only_header);\n    }\n    if (link_headers.size) {\n      headers2.set(\"link\", Array.from(link_headers).join(\", \"));\n    }\n  }\n  head += rendered.head;\n  const html = options2.templates.app({\n    head,\n    body: body2,\n    assets: assets$1,\n    nonce: (\n      /** @type {string} */\n      csp.nonce\n    ),\n    env: public_env\n  });\n  const transformed = await resolve_opts.transformPageChunk({\n    html,\n    done: true\n  }) || \"\";\n  if (!chunks) {\n    headers2.set(\"etag\", `\"${hash(transformed)}\"`);\n  }\n  return !chunks ? text(transformed, {\n    status,\n    headers: headers2\n  }) : new Response(\n    new ReadableStream({\n      async start(controller) {\n        controller.enqueue(text_encoder.encode(transformed + \"\\n\"));\n        for await (const chunk of chunks) {\n          if (chunk.length) controller.enqueue(text_encoder.encode(chunk));\n        }\n        controller.close();\n      },\n      type: \"bytes\"\n    }),\n    {\n      headers: headers2\n    }\n  );\n}\nclass PageNodes {\n  data;\n  /**\n   * @param {Array<import('types').SSRNode | undefined>} nodes\n   */\n  constructor(nodes) {\n    this.data = nodes;\n  }\n  layouts() {\n    return this.data.slice(0, -1);\n  }\n  page() {\n    return this.data.at(-1);\n  }\n  validate() {\n    for (const layout of this.layouts()) {\n      if (layout) {\n        validate_layout_server_exports(\n          layout.server,\n          /** @type {string} */\n          layout.server_id\n        );\n        validate_layout_exports(\n          layout.universal,\n          /** @type {string} */\n          layout.universal_id\n        );\n      }\n    }\n    const page = this.page();\n    if (page) {\n      validate_page_server_exports(\n        page.server,\n        /** @type {string} */\n        page.server_id\n      );\n      validate_page_exports(\n        page.universal,\n        /** @type {string} */\n        page.universal_id\n      );\n    }\n  }\n  /**\n   * @template {'prerender' | 'ssr' | 'csr' | 'trailingSlash'} Option\n   * @param {Option} option\n   * @returns {Value | undefined}\n   */\n  #get_option(option) {\n    return this.data.reduce(\n      (value, node) => {\n        return node?.universal?.[option] ?? node?.server?.[option] ?? value;\n      },\n      /** @type {Value | undefined} */\n      void 0\n    );\n  }\n  csr() {\n    return this.#get_option(\"csr\") ?? true;\n  }\n  ssr() {\n    return this.#get_option(\"ssr\") ?? true;\n  }\n  prerender() {\n    return this.#get_option(\"prerender\") ?? false;\n  }\n  trailing_slash() {\n    return this.#get_option(\"trailingSlash\") ?? \"never\";\n  }\n  get_config() {\n    let current2 = {};\n    for (const node of this.data) {\n      if (!node?.universal?.config && !node?.server?.config) continue;\n      current2 = {\n        ...current2,\n        // TODO: should we override the server config value with the universal value similar to other page options?\n        ...node?.universal?.config,\n        ...node?.server?.config\n      };\n    }\n    return Object.keys(current2).length ? current2 : void 0;\n  }\n  should_prerender_data() {\n    return this.data.some(\n      // prerender in case of trailingSlash because the client retrieves that value from the server\n      (node) => node?.server?.load || node?.server?.trailingSlash !== void 0\n    );\n  }\n}\nasync function respond_with_error({\n  event,\n  event_state,\n  options: options2,\n  manifest,\n  state,\n  status,\n  error: error2,\n  resolve_opts\n}) {\n  if (event.request.headers.get(\"x-sveltekit-error\")) {\n    return static_error_page(\n      options2,\n      status,\n      /** @type {Error} */\n      error2.message\n    );\n  }\n  const fetched = [];\n  try {\n    const branch = [];\n    const default_layout = await manifest._.nodes[0]();\n    const nodes = new PageNodes([default_layout]);\n    const ssr = nodes.ssr();\n    const csr = nodes.csr();\n    const data_serializer = server_data_serializer(event, event_state, options2);\n    if (ssr) {\n      state.error = true;\n      const server_data_promise = load_server_data({\n        event,\n        event_state,\n        state,\n        node: default_layout,\n        // eslint-disable-next-line @typescript-eslint/require-await\n        parent: async () => ({})\n      });\n      const server_data = await server_data_promise;\n      data_serializer.add_node(0, server_data);\n      const data = await load_data({\n        event,\n        event_state,\n        fetched,\n        node: default_layout,\n        // eslint-disable-next-line @typescript-eslint/require-await\n        parent: async () => ({}),\n        resolve_opts,\n        server_data_promise,\n        state,\n        csr\n      });\n      branch.push(\n        {\n          node: default_layout,\n          server_data,\n          data\n        },\n        {\n          node: await manifest._.nodes[1](),\n          // 1 is always the root error\n          data: null,\n          server_data: null\n        }\n      );\n    }\n    return await render_response({\n      options: options2,\n      manifest,\n      state,\n      page_config: {\n        ssr,\n        csr\n      },\n      status,\n      error: await handle_error_and_jsonify(event, event_state, options2, error2),\n      branch,\n      fetched,\n      event,\n      event_state,\n      resolve_opts,\n      data_serializer\n    });\n  } catch (e) {\n    if (e instanceof Redirect) {\n      return redirect_response(e.status, e.location);\n    }\n    return static_error_page(\n      options2,\n      get_status(e),\n      (await handle_error_and_jsonify(event, event_state, options2, e)).message\n    );\n  }\n}\nasync function handle_remote_call(event, state, options2, manifest, id) {\n  return record_span({\n    name: \"sveltekit.remote.call\",\n    attributes: {},\n    fn: (current2) => {\n      const traced_event = merge_tracing(event, current2);\n      return with_request_store(\n        { event: traced_event, state },\n        () => handle_remote_call_internal(traced_event, state, options2, manifest, id)\n      );\n    }\n  });\n}\nasync function handle_remote_call_internal(event, state, options2, manifest, id) {\n  const [hash2, name, additional_args] = id.split(\"/\");\n  const remotes = manifest._.remotes;\n  if (!remotes[hash2]) error(404);\n  const module = await remotes[hash2]();\n  const fn = module.default[name];\n  if (!fn) error(404);\n  const info = fn.__;\n  const transport = options2.hooks.transport;\n  event.tracing.current.setAttributes({\n    \"sveltekit.remote.call.type\": info.type,\n    \"sveltekit.remote.call.name\": info.name\n  });\n  let form_client_refreshes;\n  try {\n    if (info.type === \"query_batch\") {\n      if (event.request.method !== \"POST\") {\n        throw new SvelteKitError(\n          405,\n          \"Method Not Allowed\",\n          `\\`query.batch\\` functions must be invoked via POST request, not ${event.request.method}`\n        );\n      }\n      const { payloads } = await event.request.json();\n      const args = payloads.map((payload2) => parse_remote_arg(payload2, transport));\n      const get_result = await with_request_store({ event, state }, () => info.run(args));\n      const results = await Promise.all(\n        args.map(async (arg, i) => {\n          try {\n            return { type: \"result\", data: get_result(arg, i) };\n          } catch (error2) {\n            return {\n              type: \"error\",\n              error: await handle_error_and_jsonify(event, state, options2, error2),\n              status: error2 instanceof HttpError || error2 instanceof SvelteKitError ? error2.status : 500\n            };\n          }\n        })\n      );\n      return json(\n        /** @type {RemoteFunctionResponse} */\n        {\n          type: \"result\",\n          result: stringify(results, transport)\n        }\n      );\n    }\n    if (info.type === \"form\") {\n      if (event.request.method !== \"POST\") {\n        throw new SvelteKitError(\n          405,\n          \"Method Not Allowed\",\n          `\\`form\\` functions must be invoked via POST request, not ${event.request.method}`\n        );\n      }\n      if (!is_form_content_type(event.request)) {\n        throw new SvelteKitError(\n          415,\n          \"Unsupported Media Type\",\n          `\\`form\\` functions expect form-encoded data \u2014 received ${event.request.headers.get(\n            \"content-type\"\n          )}`\n        );\n      }\n      const form_data = await event.request.formData();\n      form_client_refreshes = /** @type {string[]} */\n      JSON.parse(\n        /** @type {string} */\n        form_data.get(\"sveltekit:remote_refreshes\") ?? \"[]\"\n      );\n      form_data.delete(\"sveltekit:remote_refreshes\");\n      if (additional_args) {\n        form_data.set(\"sveltekit:id\", decodeURIComponent(additional_args));\n      }\n      const fn2 = info.fn;\n      const data2 = await with_request_store({ event, state }, () => fn2(form_data));\n      return json(\n        /** @type {RemoteFunctionResponse} */\n        {\n          type: \"result\",\n          result: stringify(data2, transport),\n          refreshes: data2.issues ? {} : await serialize_refreshes(form_client_refreshes)\n        }\n      );\n    }\n    if (info.type === \"command\") {\n      const { payload: payload2, refreshes } = await event.request.json();\n      const arg = parse_remote_arg(payload2, transport);\n      const data2 = await with_request_store({ event, state }, () => fn(arg));\n      return json(\n        /** @type {RemoteFunctionResponse} */\n        {\n          type: \"result\",\n          result: stringify(data2, transport),\n          refreshes: await serialize_refreshes(refreshes)\n        }\n      );\n    }\n    const payload = info.type === \"prerender\" ? additional_args : (\n      /** @type {string} */\n      // new URL(...) necessary because we're hiding the URL from the user in the event object\n      new URL(event.request.url).searchParams.get(\"payload\")\n    );\n    const data = await with_request_store(\n      { event, state },\n      () => fn(parse_remote_arg(payload, transport))\n    );\n    return json(\n      /** @type {RemoteFunctionResponse} */\n      {\n        type: \"result\",\n        result: stringify(data, transport)\n      }\n    );\n  } catch (error2) {\n    if (error2 instanceof Redirect) {\n      return json(\n        /** @type {RemoteFunctionResponse} */\n        {\n          type: \"redirect\",\n          location: error2.location,\n          refreshes: await serialize_refreshes(form_client_refreshes ?? [])\n        }\n      );\n    }\n    const status = error2 instanceof HttpError || error2 instanceof SvelteKitError ? error2.status : 500;\n    return json(\n      /** @type {RemoteFunctionResponse} */\n      {\n        type: \"error\",\n        error: await handle_error_and_jsonify(event, state, options2, error2),\n        status\n      },\n      {\n        // By setting a non-200 during prerendering we fail the prerender process (unless handleHttpError handles it).\n        // Errors at runtime will be passed to the client and are handled there\n        status: state.prerendering ? status : void 0,\n        headers: {\n          \"cache-control\": \"private, no-store\"\n        }\n      }\n    );\n  }\n  async function serialize_refreshes(client_refreshes) {\n    const refreshes = state.refreshes ?? {};\n    for (const key2 of client_refreshes) {\n      if (refreshes[key2] !== void 0) continue;\n      const [hash3, name2, payload] = key2.split(\"/\");\n      const loader = manifest._.remotes[hash3];\n      const fn2 = (await loader?.())?.default?.[name2];\n      if (!fn2) error(400, \"Bad Request\");\n      refreshes[key2] = with_request_store(\n        { event, state },\n        () => fn2(parse_remote_arg(payload, transport))\n      );\n    }\n    if (Object.keys(refreshes).length === 0) {\n      return void 0;\n    }\n    return stringify(\n      Object.fromEntries(\n        await Promise.all(\n          Object.entries(refreshes).map(async ([key2, promise]) => [key2, await promise])\n        )\n      ),\n      transport\n    );\n  }\n}\nasync function handle_remote_form_post(event, state, manifest, id) {\n  return record_span({\n    name: \"sveltekit.remote.form.post\",\n    attributes: {},\n    fn: (current2) => {\n      const traced_event = merge_tracing(event, current2);\n      return with_request_store(\n        { event: traced_event, state },\n        () => handle_remote_form_post_internal(traced_event, state, manifest, id)\n      );\n    }\n  });\n}\nasync function handle_remote_form_post_internal(event, state, manifest, id) {\n  const [hash2, name, action_id] = id.split(\"/\");\n  const remotes = manifest._.remotes;\n  const module = await remotes[hash2]?.();\n  let form = (\n    /** @type {RemoteForm<any, any>} */\n    module?.default[name]\n  );\n  if (!form) {\n    event.setHeaders({\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n      // \"The server must generate an Allow header field in a 405 status code response\"\n      allow: \"GET\"\n    });\n    return {\n      type: \"error\",\n      error: new SvelteKitError(\n        405,\n        \"Method Not Allowed\",\n        `POST method not allowed. No form actions exist for ${\"this page\"}`\n      )\n    };\n  }\n  if (action_id) {\n    form = with_request_store({ event, state }, () => form.for(JSON.parse(action_id)));\n  }\n  try {\n    const form_data = await event.request.formData();\n    const fn = (\n      /** @type {RemoteInfo & { type: 'form' }} */\n      /** @type {any} */\n      form.__.fn\n    );\n    if (action_id && !form_data.has(\"id\")) {\n      form_data.set(\"sveltekit:id\", decodeURIComponent(action_id));\n    }\n    await with_request_store({ event, state }, () => fn(form_data));\n    return {\n      type: \"success\",\n      status: 200\n    };\n  } catch (e) {\n    const err = normalize_error(e);\n    if (err instanceof Redirect) {\n      return {\n        type: \"redirect\",\n        status: err.status,\n        location: err.location\n      };\n    }\n    return {\n      type: \"error\",\n      error: check_incorrect_fail_use(err)\n    };\n  }\n}\nfunction get_remote_id(url) {\n  return url.pathname.startsWith(`${base}/${app_dir}/remote/`) && url.pathname.replace(`${base}/${app_dir}/remote/`, \"\");\n}\nfunction get_remote_action(url) {\n  return url.searchParams.get(\"/remote\");\n}\nconst MAX_DEPTH = 10;\nasync function render_page(event, event_state, page, options2, manifest, state, nodes, resolve_opts) {\n  if (state.depth > MAX_DEPTH) {\n    return text(`Not found: ${event.url.pathname}`, {\n      status: 404\n      // TODO in some cases this should be 500. not sure how to differentiate\n    });\n  }\n  if (is_action_json_request(event)) {\n    const node = await manifest._.nodes[page.leaf]();\n    return handle_action_json_request(event, event_state, options2, node?.server);\n  }\n  try {\n    const leaf_node = (\n      /** @type {import('types').SSRNode} */\n      nodes.page()\n    );\n    let status = 200;\n    let action_result = void 0;\n    if (is_action_request(event)) {\n      const remote_id = get_remote_action(event.url);\n      if (remote_id) {\n        action_result = await handle_remote_form_post(event, event_state, manifest, remote_id);\n      } else {\n        action_result = await handle_action_request(event, event_state, leaf_node.server);\n      }\n      if (action_result?.type === \"redirect\") {\n        return redirect_response(action_result.status, action_result.location);\n      }\n      if (action_result?.type === \"error\") {\n        status = get_status(action_result.error);\n      }\n      if (action_result?.type === \"failure\") {\n        status = action_result.status;\n      }\n    }\n    const should_prerender = nodes.prerender();\n    if (should_prerender) {\n      const mod = leaf_node.server;\n      if (mod?.actions) {\n        throw new Error(\"Cannot prerender pages with actions\");\n      }\n    } else if (state.prerendering) {\n      return new Response(void 0, {\n        status: 204\n      });\n    }\n    state.prerender_default = should_prerender;\n    const should_prerender_data = nodes.should_prerender_data();\n    const data_pathname = add_data_suffix(event.url.pathname);\n    const fetched = [];\n    const ssr = nodes.ssr();\n    const csr = nodes.csr();\n    if (ssr === false && !(state.prerendering && should_prerender_data)) {\n      if (BROWSER && action_result && !event.request.headers.has(\"x-sveltekit-action\")) ;\n      return await render_response({\n        branch: [],\n        fetched,\n        page_config: {\n          ssr: false,\n          csr\n        },\n        status,\n        error: null,\n        event,\n        event_state,\n        options: options2,\n        manifest,\n        state,\n        resolve_opts,\n        data_serializer: server_data_serializer(event, event_state, options2)\n      });\n    }\n    const branch = [];\n    let load_error = null;\n    const data_serializer = server_data_serializer(event, event_state, options2);\n    const data_serializer_json = state.prerendering && should_prerender_data ? server_data_serializer_json(event, event_state, options2) : null;\n    const server_promises = nodes.data.map((node, i) => {\n      if (load_error) {\n        throw load_error;\n      }\n      return Promise.resolve().then(async () => {\n        try {\n          if (node === leaf_node && action_result?.type === \"error\") {\n            throw action_result.error;\n          }\n          const server_data = await load_server_data({\n            event,\n            event_state,\n            state,\n            node,\n            parent: async () => {\n              const data = {};\n              for (let j = 0; j < i; j += 1) {\n                const parent = await server_promises[j];\n                if (parent) Object.assign(data, parent.data);\n              }\n              return data;\n            }\n          });\n          if (node) {\n            data_serializer.add_node(i, server_data);\n          }\n          data_serializer_json?.add_node(i, server_data);\n          return server_data;\n        } catch (e) {\n          load_error = /** @type {Error} */\n          e;\n          throw load_error;\n        }\n      });\n    });\n    const load_promises = nodes.data.map((node, i) => {\n      if (load_error) throw load_error;\n      return Promise.resolve().then(async () => {\n        try {\n          return await load_data({\n            event,\n            event_state,\n            fetched,\n            node,\n            parent: async () => {\n              const data = {};\n              for (let j = 0; j < i; j += 1) {\n                Object.assign(data, await load_promises[j]);\n              }\n              return data;\n            },\n            resolve_opts,\n            server_data_promise: server_promises[i],\n            state,\n            csr\n          });\n        } catch (e) {\n          load_error = /** @type {Error} */\n          e;\n          throw load_error;\n        }\n      });\n    });\n    for (const p of server_promises) p.catch(() => {\n    });\n    for (const p of load_promises) p.catch(() => {\n    });\n    for (let i = 0; i < nodes.data.length; i += 1) {\n      const node = nodes.data[i];\n      if (node) {\n        try {\n          const server_data = await server_promises[i];\n          const data = await load_promises[i];\n          branch.push({ node, server_data, data });\n        } catch (e) {\n          const err = normalize_error(e);\n          if (err instanceof Redirect) {\n            if (state.prerendering && should_prerender_data) {\n              const body2 = JSON.stringify({\n                type: \"redirect\",\n                location: err.location\n              });\n              state.prerendering.dependencies.set(data_pathname, {\n                response: text(body2),\n                body: body2\n              });\n            }\n            return redirect_response(err.status, err.location);\n          }\n          const status2 = get_status(err);\n          const error2 = await handle_error_and_jsonify(event, event_state, options2, err);\n          while (i--) {\n            if (page.errors[i]) {\n              const index = (\n                /** @type {number} */\n                page.errors[i]\n              );\n              const node2 = await manifest._.nodes[index]();\n              let j = i;\n              while (!branch[j]) j -= 1;\n              data_serializer.set_max_nodes(j + 1);\n              const layouts = compact(branch.slice(0, j + 1));\n              const nodes2 = new PageNodes(layouts.map((layout) => layout.node));\n              return await render_response({\n                event,\n                event_state,\n                options: options2,\n                manifest,\n                state,\n                resolve_opts,\n                page_config: {\n                  ssr: nodes2.ssr(),\n                  csr: nodes2.csr()\n                },\n                status: status2,\n                error: error2,\n                branch: layouts.concat({\n                  node: node2,\n                  data: null,\n                  server_data: null\n                }),\n                fetched,\n                data_serializer\n              });\n            }\n          }\n          return static_error_page(options2, status2, error2.message);\n        }\n      } else {\n        branch.push(null);\n      }\n    }\n    if (state.prerendering && data_serializer_json) {\n      let { data, chunks } = data_serializer_json.get_data();\n      if (chunks) {\n        for await (const chunk of chunks) {\n          data += chunk;\n        }\n      }\n      state.prerendering.dependencies.set(data_pathname, {\n        response: text(data),\n        body: data\n      });\n    }\n    return await render_response({\n      event,\n      event_state,\n      options: options2,\n      manifest,\n      state,\n      resolve_opts,\n      page_config: {\n        csr,\n        ssr\n      },\n      status,\n      error: null,\n      branch: ssr === false ? [] : compact(branch),\n      action_result,\n      fetched,\n      data_serializer: ssr === false ? server_data_serializer(event, event_state, options2) : data_serializer\n    });\n  } catch (e) {\n    return await respond_with_error({\n      event,\n      event_state,\n      options: options2,\n      manifest,\n      state,\n      status: 500,\n      error: e,\n      resolve_opts\n    });\n  }\n}\nfunction once(fn) {\n  let done = false;\n  let result;\n  return () => {\n    if (done) return result;\n    done = true;\n    return result = fn();\n  };\n}\nasync function render_data(event, event_state, route, options2, manifest, state, invalidated_data_nodes, trailing_slash) {\n  if (!route.page) {\n    return new Response(void 0, {\n      status: 404\n    });\n  }\n  try {\n    const node_ids = [...route.page.layouts, route.page.leaf];\n    const invalidated = invalidated_data_nodes ?? node_ids.map(() => true);\n    let aborted = false;\n    const url = new URL(event.url);\n    url.pathname = normalize_path(url.pathname, trailing_slash);\n    const new_event = { ...event, url };\n    const functions = node_ids.map((n, i) => {\n      return once(async () => {\n        try {\n          if (aborted) {\n            return (\n              /** @type {import('types').ServerDataSkippedNode} */\n              {\n                type: \"skip\"\n              }\n            );\n          }\n          const node = n == void 0 ? n : await manifest._.nodes[n]();\n          return load_server_data({\n            event: new_event,\n            event_state,\n            state,\n            node,\n            parent: async () => {\n              const data2 = {};\n              for (let j = 0; j < i; j += 1) {\n                const parent = (\n                  /** @type {import('types').ServerDataNode | null} */\n                  await functions[j]()\n                );\n                if (parent) {\n                  Object.assign(data2, parent.data);\n                }\n              }\n              return data2;\n            }\n          });\n        } catch (e) {\n          aborted = true;\n          throw e;\n        }\n      });\n    });\n    const promises = functions.map(async (fn, i) => {\n      if (!invalidated[i]) {\n        return (\n          /** @type {import('types').ServerDataSkippedNode} */\n          {\n            type: \"skip\"\n          }\n        );\n      }\n      return fn();\n    });\n    let length = promises.length;\n    const nodes = await Promise.all(\n      promises.map(\n        (p, i) => p.catch(async (error2) => {\n          if (error2 instanceof Redirect) {\n            throw error2;\n          }\n          length = Math.min(length, i + 1);\n          return (\n            /** @type {import('types').ServerErrorNode} */\n            {\n              type: \"error\",\n              error: await handle_error_and_jsonify(event, event_state, options2, error2),\n              status: error2 instanceof HttpError || error2 instanceof SvelteKitError ? error2.status : void 0\n            }\n          );\n        })\n      )\n    );\n    const data_serializer = server_data_serializer_json(event, event_state, options2);\n    for (let i = 0; i < nodes.length; i++) data_serializer.add_node(i, nodes[i]);\n    const { data, chunks } = data_serializer.get_data();\n    if (!chunks) {\n      return json_response(data);\n    }\n    return new Response(\n      new ReadableStream({\n        async start(controller) {\n          controller.enqueue(text_encoder.encode(data));\n          for await (const chunk of chunks) {\n            controller.enqueue(text_encoder.encode(chunk));\n          }\n          controller.close();\n        },\n        type: \"bytes\"\n      }),\n      {\n        headers: {\n          // we use a proprietary content type to prevent buffering.\n          // the `text` prefix makes it inspectable\n          \"content-type\": \"text/sveltekit-data\",\n          \"cache-control\": \"private, no-store\"\n        }\n      }\n    );\n  } catch (e) {\n    const error2 = normalize_error(e);\n    if (error2 instanceof Redirect) {\n      return redirect_json_response(error2);\n    } else {\n      return json_response(await handle_error_and_jsonify(event, event_state, options2, error2), 500);\n    }\n  }\n}\nfunction json_response(json2, status = 200) {\n  return text(typeof json2 === \"string\" ? json2 : JSON.stringify(json2), {\n    status,\n    headers: {\n      \"content-type\": \"application/json\",\n      \"cache-control\": \"private, no-store\"\n    }\n  });\n}\nfunction redirect_json_response(redirect) {\n  return json_response(\n    /** @type {import('types').ServerRedirectNode} */\n    {\n      type: \"redirect\",\n      location: redirect.location\n    }\n  );\n}\nconst INVALID_COOKIE_CHARACTER_REGEX = /[\\x00-\\x1F\\x7F()<>@,;:\"/[\\]?={} \\t]/;\nfunction validate_options(options2) {\n  if (options2?.path === void 0) {\n    throw new Error(\"You must specify a `path` when setting, deleting or serializing cookies\");\n  }\n}\nfunction generate_cookie_key(domain, path, name) {\n  return `${domain || \"\"}${path}?${encodeURIComponent(name)}`;\n}\nfunction get_cookies(request, url) {\n  const header = request.headers.get(\"cookie\") ?? \"\";\n  const initial_cookies = parse(header, { decode: (value) => value });\n  let normalized_url;\n  const new_cookies = /* @__PURE__ */ new Map();\n  const defaults = {\n    httpOnly: true,\n    sameSite: \"lax\",\n    secure: url.hostname === \"localhost\" && url.protocol === \"http:\" ? false : true\n  };\n  const cookies = {\n    // The JSDoc param annotations appearing below for get, set and delete\n    // are necessary to expose the `cookie` library types to\n    // typescript users. `@type {import('@sveltejs/kit').Cookies}` above is not\n    // sufficient to do so.\n    /**\n     * @param {string} name\n     * @param {import('cookie').CookieParseOptions} [opts]\n     */\n    get(name, opts) {\n      const best_match = Array.from(new_cookies.values()).filter((c) => {\n        return c.name === name && domain_matches(url.hostname, c.options.domain) && path_matches(url.pathname, c.options.path);\n      }).sort((a, b) => b.options.path.length - a.options.path.length)[0];\n      if (best_match) {\n        return best_match.options.maxAge === 0 ? void 0 : best_match.value;\n      }\n      const req_cookies = parse(header, { decode: opts?.decode });\n      const cookie = req_cookies[name];\n      return cookie;\n    },\n    /**\n     * @param {import('cookie').CookieParseOptions} [opts]\n     */\n    getAll(opts) {\n      const cookies2 = parse(header, { decode: opts?.decode });\n      const lookup = /* @__PURE__ */ new Map();\n      for (const c of new_cookies.values()) {\n        if (domain_matches(url.hostname, c.options.domain) && path_matches(url.pathname, c.options.path)) {\n          const existing = lookup.get(c.name);\n          if (!existing || c.options.path.length > existing.options.path.length) {\n            lookup.set(c.name, c);\n          }\n        }\n      }\n      for (const c of lookup.values()) {\n        cookies2[c.name] = c.value;\n      }\n      return Object.entries(cookies2).map(([name, value]) => ({ name, value }));\n    },\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @param {import('./page/types.js').Cookie['options']} options\n     */\n    set(name, value, options2) {\n      const illegal_characters = name.match(INVALID_COOKIE_CHARACTER_REGEX);\n      if (illegal_characters) {\n        console.warn(\n          `The cookie name \"${name}\" will be invalid in SvelteKit 3.0 as it contains ${illegal_characters.join(\n            \" and \"\n          )}. See RFC 2616 for more details https://datatracker.ietf.org/doc/html/rfc2616#section-2.2`\n        );\n      }\n      validate_options(options2);\n      set_internal(name, value, { ...defaults, ...options2 });\n    },\n    /**\n     * @param {string} name\n     *  @param {import('./page/types.js').Cookie['options']} options\n     */\n    delete(name, options2) {\n      validate_options(options2);\n      cookies.set(name, \"\", { ...options2, maxAge: 0 });\n    },\n    /**\n     * @param {string} name\n     * @param {string} value\n     *  @param {import('./page/types.js').Cookie['options']} options\n     */\n    serialize(name, value, options2) {\n      validate_options(options2);\n      let path = options2.path;\n      if (!options2.domain || options2.domain === url.hostname) {\n        if (!normalized_url) {\n          throw new Error(\"Cannot serialize cookies until after the route is determined\");\n        }\n        path = resolve(normalized_url, path);\n      }\n      return serialize(name, value, { ...defaults, ...options2, path });\n    }\n  };\n  function get_cookie_header(destination, header2) {\n    const combined_cookies = {\n      // cookies sent by the user agent have lowest precedence\n      ...initial_cookies\n    };\n    for (const cookie of new_cookies.values()) {\n      if (!domain_matches(destination.hostname, cookie.options.domain)) continue;\n      if (!path_matches(destination.pathname, cookie.options.path)) continue;\n      const encoder = cookie.options.encode || encodeURIComponent;\n      combined_cookies[cookie.name] = encoder(cookie.value);\n    }\n    if (header2) {\n      const parsed = parse(header2, { decode: (value) => value });\n      for (const name in parsed) {\n        combined_cookies[name] = parsed[name];\n      }\n    }\n    return Object.entries(combined_cookies).map(([name, value]) => `${name}=${value}`).join(\"; \");\n  }\n  const internal_queue = [];\n  function set_internal(name, value, options2) {\n    if (!normalized_url) {\n      internal_queue.push(() => set_internal(name, value, options2));\n      return;\n    }\n    let path = options2.path;\n    if (!options2.domain || options2.domain === url.hostname) {\n      path = resolve(normalized_url, path);\n    }\n    const cookie_key = generate_cookie_key(options2.domain, path, name);\n    const cookie = { name, value, options: { ...options2, path } };\n    new_cookies.set(cookie_key, cookie);\n  }\n  function set_trailing_slash(trailing_slash) {\n    normalized_url = normalize_path(url.pathname, trailing_slash);\n    internal_queue.forEach((fn) => fn());\n  }\n  return { cookies, new_cookies, get_cookie_header, set_internal, set_trailing_slash };\n}\nfunction domain_matches(hostname, constraint) {\n  if (!constraint) return true;\n  const normalized = constraint[0] === \".\" ? constraint.slice(1) : constraint;\n  if (hostname === normalized) return true;\n  return hostname.endsWith(\".\" + normalized);\n}\nfunction path_matches(path, constraint) {\n  if (!constraint) return true;\n  const normalized = constraint.endsWith(\"/\") ? constraint.slice(0, -1) : constraint;\n  if (path === normalized) return true;\n  return path.startsWith(normalized + \"/\");\n}\nfunction add_cookies_to_headers(headers2, cookies) {\n  for (const new_cookie of cookies) {\n    const { name, value, options: options2 } = new_cookie;\n    headers2.append(\"set-cookie\", serialize(name, value, options2));\n    if (options2.path.endsWith(\".html\")) {\n      const path = add_data_suffix(options2.path);\n      headers2.append(\"set-cookie\", serialize(name, value, { ...options2, path }));\n    }\n  }\n}\nfunction create_fetch({ event, options: options2, manifest, state, get_cookie_header, set_internal }) {\n  const server_fetch = async (info, init2) => {\n    const original_request = normalize_fetch_input(info, init2, event.url);\n    let mode = (info instanceof Request ? info.mode : init2?.mode) ?? \"cors\";\n    let credentials = (info instanceof Request ? info.credentials : init2?.credentials) ?? \"same-origin\";\n    return options2.hooks.handleFetch({\n      event,\n      request: original_request,\n      fetch: async (info2, init3) => {\n        const request = normalize_fetch_input(info2, init3, event.url);\n        const url = new URL(request.url);\n        if (!request.headers.has(\"origin\")) {\n          request.headers.set(\"origin\", event.url.origin);\n        }\n        if (info2 !== original_request) {\n          mode = (info2 instanceof Request ? info2.mode : init3?.mode) ?? \"cors\";\n          credentials = (info2 instanceof Request ? info2.credentials : init3?.credentials) ?? \"same-origin\";\n        }\n        if ((request.method === \"GET\" || request.method === \"HEAD\") && (mode === \"no-cors\" && url.origin !== event.url.origin || url.origin === event.url.origin)) {\n          request.headers.delete(\"origin\");\n        }\n        if (url.origin !== event.url.origin) {\n          if (`.${url.hostname}`.endsWith(`.${event.url.hostname}`) && credentials !== \"omit\") {\n            const cookie = get_cookie_header(url, request.headers.get(\"cookie\"));\n            if (cookie) request.headers.set(\"cookie\", cookie);\n          }\n          return fetch(request);\n        }\n        const prefix = assets || base;\n        const decoded = decodeURIComponent(url.pathname);\n        const filename = (decoded.startsWith(prefix) ? decoded.slice(prefix.length) : decoded).slice(1);\n        const filename_html = `${filename}/index.html`;\n        const is_asset = manifest.assets.has(filename) || filename in manifest._.server_assets;\n        const is_asset_html = manifest.assets.has(filename_html) || filename_html in manifest._.server_assets;\n        if (is_asset || is_asset_html) {\n          const file = is_asset ? filename : filename_html;\n          if (state.read) {\n            const type = is_asset ? manifest.mimeTypes[filename.slice(filename.lastIndexOf(\".\"))] : \"text/html\";\n            return new Response(state.read(file), {\n              headers: type ? { \"content-type\": type } : {}\n            });\n          } else if (read_implementation && file in manifest._.server_assets) {\n            const length = manifest._.server_assets[file];\n            const type = manifest.mimeTypes[file.slice(file.lastIndexOf(\".\"))];\n            return new Response(read_implementation(file), {\n              headers: {\n                \"Content-Length\": \"\" + length,\n                \"Content-Type\": type\n              }\n            });\n          }\n          return await fetch(request);\n        }\n        if (has_prerendered_path(manifest, base + decoded)) {\n          return await fetch(request);\n        }\n        if (credentials !== \"omit\") {\n          const cookie = get_cookie_header(url, request.headers.get(\"cookie\"));\n          if (cookie) {\n            request.headers.set(\"cookie\", cookie);\n          }\n          const authorization = event.request.headers.get(\"authorization\");\n          if (authorization && !request.headers.has(\"authorization\")) {\n            request.headers.set(\"authorization\", authorization);\n          }\n        }\n        if (!request.headers.has(\"accept\")) {\n          request.headers.set(\"accept\", \"*/*\");\n        }\n        if (!request.headers.has(\"accept-language\")) {\n          request.headers.set(\n            \"accept-language\",\n            /** @type {string} */\n            event.request.headers.get(\"accept-language\")\n          );\n        }\n        const response = await internal_fetch(request, options2, manifest, state);\n        const set_cookie = response.headers.get(\"set-cookie\");\n        if (set_cookie) {\n          for (const str of set_cookie_parser.splitCookiesString(set_cookie)) {\n            const { name, value, ...options3 } = set_cookie_parser.parseString(str, {\n              decodeValues: false\n            });\n            const path = options3.path ?? (url.pathname.split(\"/\").slice(0, -1).join(\"/\") || \"/\");\n            set_internal(name, value, {\n              path,\n              encode: (value2) => value2,\n              .../** @type {import('cookie').CookieSerializeOptions} */\n              options3\n            });\n          }\n        }\n        return response;\n      }\n    });\n  };\n  return (input, init2) => {\n    const response = server_fetch(input, init2);\n    response.catch(() => {\n    });\n    return response;\n  };\n}\nfunction normalize_fetch_input(info, init2, url) {\n  if (info instanceof Request) {\n    return info;\n  }\n  return new Request(typeof info === \"string\" ? new URL(info, url) : info, init2);\n}\nasync function internal_fetch(request, options2, manifest, state) {\n  if (request.signal) {\n    if (request.signal.aborted) {\n      throw new DOMException(\"The operation was aborted.\", \"AbortError\");\n    }\n    let remove_abort_listener = () => {\n    };\n    const abort_promise = new Promise((_, reject) => {\n      const on_abort = () => {\n        reject(new DOMException(\"The operation was aborted.\", \"AbortError\"));\n      };\n      request.signal.addEventListener(\"abort\", on_abort, { once: true });\n      remove_abort_listener = () => request.signal.removeEventListener(\"abort\", on_abort);\n    });\n    const result = await Promise.race([\n      respond(request, options2, manifest, {\n        ...state,\n        depth: state.depth + 1\n      }),\n      abort_promise\n    ]);\n    remove_abort_listener();\n    return result;\n  } else {\n    return await respond(request, options2, manifest, {\n      ...state,\n      depth: state.depth + 1\n    });\n  }\n}\nlet body;\nlet etag;\nlet headers;\nfunction get_public_env(request) {\n  body ??= `export const env=${JSON.stringify(public_env)}`;\n  etag ??= `W/${Date.now()}`;\n  headers ??= new Headers({\n    \"content-type\": \"application/javascript; charset=utf-8\",\n    etag\n  });\n  if (request.headers.get(\"if-none-match\") === etag) {\n    return new Response(void 0, { status: 304, headers });\n  }\n  return new Response(body, { headers });\n}\nconst default_transform = ({ html }) => html;\nconst default_filter = () => false;\nconst default_preload = ({ type }) => type === \"js\" || type === \"css\";\nconst page_methods = /* @__PURE__ */ new Set([\"GET\", \"HEAD\", \"POST\"]);\nconst allowed_page_methods = /* @__PURE__ */ new Set([\"GET\", \"HEAD\", \"OPTIONS\"]);\nlet warned_on_devtools_json_request = false;\nconst respond = propagate_context(internal_respond);\nasync function internal_respond(request, options2, manifest, state) {\n  const url = new URL(request.url);\n  const is_route_resolution_request = has_resolution_suffix(url.pathname);\n  const is_data_request = has_data_suffix(url.pathname);\n  const remote_id = get_remote_id(url);\n  {\n    const request_origin = request.headers.get(\"origin\");\n    if (remote_id) {\n      if (request.method !== \"GET\" && request_origin !== url.origin) {\n        const message = \"Cross-site remote requests are forbidden\";\n        return json({ message }, { status: 403 });\n      }\n    } else if (options2.csrf_check_origin) {\n      const forbidden = is_form_content_type(request) && (request.method === \"POST\" || request.method === \"PUT\" || request.method === \"PATCH\" || request.method === \"DELETE\") && request_origin !== url.origin && (!request_origin || !options2.csrf_trusted_origins.includes(request_origin));\n      if (forbidden) {\n        const message = `Cross-site ${request.method} form submissions are forbidden`;\n        const opts = { status: 403 };\n        if (request.headers.get(\"accept\") === \"application/json\") {\n          return json({ message }, opts);\n        }\n        return text(message, opts);\n      }\n    }\n  }\n  if (options2.hash_routing && url.pathname !== base + \"/\" && url.pathname !== \"/[fallback]\") {\n    return text(\"Not found\", { status: 404 });\n  }\n  let invalidated_data_nodes;\n  if (is_route_resolution_request) {\n    url.pathname = strip_resolution_suffix(url.pathname);\n  } else if (is_data_request) {\n    url.pathname = strip_data_suffix(url.pathname) + (url.searchParams.get(TRAILING_SLASH_PARAM) === \"1\" ? \"/\" : \"\") || \"/\";\n    url.searchParams.delete(TRAILING_SLASH_PARAM);\n    invalidated_data_nodes = url.searchParams.get(INVALIDATED_PARAM)?.split(\"\").map((node) => node === \"1\");\n    url.searchParams.delete(INVALIDATED_PARAM);\n  } else if (remote_id) {\n    url.pathname = request.headers.get(\"x-sveltekit-pathname\") ?? base;\n    url.search = request.headers.get(\"x-sveltekit-search\") ?? \"\";\n  }\n  const headers2 = {};\n  const { cookies, new_cookies, get_cookie_header, set_internal, set_trailing_slash } = get_cookies(\n    request,\n    url\n  );\n  const event_state = {\n    prerendering: state.prerendering,\n    transport: options2.hooks.transport,\n    handleValidationError: options2.hooks.handleValidationError,\n    tracing: {\n      record_span\n    },\n    is_in_remote_function: false\n  };\n  const event = {\n    cookies,\n    // @ts-expect-error `fetch` needs to be created after the `event` itself\n    fetch: null,\n    getClientAddress: state.getClientAddress || (() => {\n      throw new Error(\n        `${\"@sveltejs/adapter-cloudflare\"} does not specify getClientAddress. Please raise an issue`\n      );\n    }),\n    locals: {},\n    params: {},\n    platform: state.platform,\n    request,\n    route: { id: null },\n    setHeaders: (new_headers) => {\n      for (const key2 in new_headers) {\n        const lower = key2.toLowerCase();\n        const value = new_headers[key2];\n        if (lower === \"set-cookie\") {\n          throw new Error(\n            \"Use `event.cookies.set(name, value, options)` instead of `event.setHeaders` to set cookies\"\n          );\n        } else if (lower in headers2) {\n          throw new Error(`\"${key2}\" header is already set`);\n        } else {\n          headers2[lower] = value;\n          if (state.prerendering && lower === \"cache-control\") {\n            state.prerendering.cache = /** @type {string} */\n            value;\n          }\n        }\n      }\n    },\n    url,\n    isDataRequest: is_data_request,\n    isSubRequest: state.depth > 0,\n    isRemoteRequest: !!remote_id\n  };\n  event.fetch = create_fetch({\n    event,\n    options: options2,\n    manifest,\n    state,\n    get_cookie_header,\n    set_internal\n  });\n  if (state.emulator?.platform) {\n    event.platform = await state.emulator.platform({\n      config: {},\n      prerender: !!state.prerendering?.fallback\n    });\n  }\n  let resolved_path = url.pathname;\n  if (!remote_id) {\n    const prerendering_reroute_state = state.prerendering?.inside_reroute;\n    try {\n      if (state.prerendering) state.prerendering.inside_reroute = true;\n      resolved_path = await options2.hooks.reroute({ url: new URL(url), fetch: event.fetch }) ?? url.pathname;\n    } catch {\n      return text(\"Internal Server Error\", {\n        status: 500\n      });\n    } finally {\n      if (state.prerendering) state.prerendering.inside_reroute = prerendering_reroute_state;\n    }\n  }\n  try {\n    resolved_path = decode_pathname(resolved_path);\n  } catch {\n    return text(\"Malformed URI\", { status: 400 });\n  }\n  if (resolved_path !== url.pathname && !state.prerendering?.fallback && has_prerendered_path(manifest, resolved_path)) {\n    const url2 = new URL(request.url);\n    url2.pathname = is_data_request ? add_data_suffix(resolved_path) : is_route_resolution_request ? add_resolution_suffix(resolved_path) : resolved_path;\n    const response = await fetch(url2, request);\n    const headers22 = new Headers(response.headers);\n    if (headers22.has(\"content-encoding\")) {\n      headers22.delete(\"content-encoding\");\n      headers22.delete(\"content-length\");\n    }\n    return new Response(response.body, {\n      headers: headers22,\n      status: response.status,\n      statusText: response.statusText\n    });\n  }\n  let route = null;\n  if (base && !state.prerendering?.fallback) {\n    if (!resolved_path.startsWith(base)) {\n      return text(\"Not found\", { status: 404 });\n    }\n    resolved_path = resolved_path.slice(base.length) || \"/\";\n  }\n  if (is_route_resolution_request) {\n    return resolve_route(resolved_path, new URL(request.url), manifest);\n  }\n  if (resolved_path === `/${app_dir}/env.js`) {\n    return get_public_env(request);\n  }\n  if (!remote_id && resolved_path.startsWith(`/${app_dir}`)) {\n    const headers22 = new Headers();\n    headers22.set(\"cache-control\", \"public, max-age=0, must-revalidate\");\n    return text(\"Not found\", { status: 404, headers: headers22 });\n  }\n  if (!state.prerendering?.fallback) {\n    const matchers = await manifest._.matchers();\n    for (const candidate of manifest._.routes) {\n      const match = candidate.pattern.exec(resolved_path);\n      if (!match) continue;\n      const matched = exec(match, candidate.params, matchers);\n      if (matched) {\n        route = candidate;\n        event.route = { id: route.id };\n        event.params = decode_params(matched);\n        break;\n      }\n    }\n  }\n  let resolve_opts = {\n    transformPageChunk: default_transform,\n    filterSerializedResponseHeaders: default_filter,\n    preload: default_preload\n  };\n  let trailing_slash = \"never\";\n  try {\n    const page_nodes = route?.page ? new PageNodes(await load_page_nodes(route.page, manifest)) : void 0;\n    if (route && !remote_id) {\n      if (url.pathname === base || url.pathname === base + \"/\") {\n        trailing_slash = \"always\";\n      } else if (page_nodes) {\n        if (BROWSER) ;\n        trailing_slash = page_nodes.trailing_slash();\n      } else if (route.endpoint) {\n        const node = await route.endpoint();\n        trailing_slash = node.trailingSlash ?? \"never\";\n        if (BROWSER) ;\n      }\n      if (!is_data_request) {\n        const normalized = normalize_path(url.pathname, trailing_slash);\n        if (normalized !== url.pathname && !state.prerendering?.fallback) {\n          return new Response(void 0, {\n            status: 308,\n            headers: {\n              \"x-sveltekit-normalize\": \"1\",\n              location: (\n                // ensure paths starting with '//' are not treated as protocol-relative\n                (normalized.startsWith(\"//\") ? url.origin + normalized : normalized) + (url.search === \"?\" ? \"\" : url.search)\n              )\n            }\n          });\n        }\n      }\n      if (state.before_handle || state.emulator?.platform) {\n        let config = {};\n        let prerender = false;\n        if (route.endpoint) {\n          const node = await route.endpoint();\n          config = node.config ?? config;\n          prerender = node.prerender ?? prerender;\n        } else if (page_nodes) {\n          config = page_nodes.get_config() ?? config;\n          prerender = page_nodes.prerender();\n        }\n        if (state.before_handle) {\n          state.before_handle(event, config, prerender);\n        }\n        if (state.emulator?.platform) {\n          event.platform = await state.emulator.platform({ config, prerender });\n        }\n      }\n    }\n    set_trailing_slash(trailing_slash);\n    if (state.prerendering && !state.prerendering.fallback && !state.prerendering.inside_reroute) {\n      disable_search(url);\n    }\n    const response = await record_span({\n      name: \"sveltekit.handle.root\",\n      attributes: {\n        \"http.route\": event.route.id || \"unknown\",\n        \"http.method\": event.request.method,\n        \"http.url\": event.url.href,\n        \"sveltekit.is_data_request\": is_data_request,\n        \"sveltekit.is_sub_request\": event.isSubRequest\n      },\n      fn: async (root_span) => {\n        const traced_event = {\n          ...event,\n          tracing: {\n            enabled: false,\n            root: root_span,\n            current: root_span\n          }\n        };\n        return await with_request_store(\n          { event: traced_event, state: event_state },\n          () => options2.hooks.handle({\n            event: traced_event,\n            resolve: (event2, opts) => {\n              return record_span({\n                name: \"sveltekit.resolve\",\n                attributes: {\n                  \"http.route\": event2.route.id || \"unknown\"\n                },\n                fn: (resolve_span) => {\n                  return with_request_store(\n                    null,\n                    () => resolve2(merge_tracing(event2, resolve_span), page_nodes, opts).then(\n                      (response2) => {\n                        for (const key2 in headers2) {\n                          const value = headers2[key2];\n                          response2.headers.set(\n                            key2,\n                            /** @type {string} */\n                            value\n                          );\n                        }\n                        add_cookies_to_headers(response2.headers, new_cookies.values());\n                        if (state.prerendering && event2.route.id !== null) {\n                          response2.headers.set(\"x-sveltekit-routeid\", encodeURI(event2.route.id));\n                        }\n                        resolve_span.setAttributes({\n                          \"http.response.status_code\": response2.status,\n                          \"http.response.body.size\": response2.headers.get(\"content-length\") || \"unknown\"\n                        });\n                        return response2;\n                      }\n                    )\n                  );\n                }\n              });\n            }\n          })\n        );\n      }\n    });\n    if (response.status === 200 && response.headers.has(\"etag\")) {\n      let if_none_match_value = request.headers.get(\"if-none-match\");\n      if (if_none_match_value?.startsWith('W/\"')) {\n        if_none_match_value = if_none_match_value.substring(2);\n      }\n      const etag2 = (\n        /** @type {string} */\n        response.headers.get(\"etag\")\n      );\n      if (if_none_match_value === etag2) {\n        const headers22 = new Headers({ etag: etag2 });\n        for (const key2 of [\n          \"cache-control\",\n          \"content-location\",\n          \"date\",\n          \"expires\",\n          \"vary\",\n          \"set-cookie\"\n        ]) {\n          const value = response.headers.get(key2);\n          if (value) headers22.set(key2, value);\n        }\n        return new Response(void 0, {\n          status: 304,\n          headers: headers22\n        });\n      }\n    }\n    if (is_data_request && response.status >= 300 && response.status <= 308) {\n      const location = response.headers.get(\"location\");\n      if (location) {\n        return redirect_json_response(new Redirect(\n          /** @type {any} */\n          response.status,\n          location\n        ));\n      }\n    }\n    return response;\n  } catch (e) {\n    if (e instanceof Redirect) {\n      const response = is_data_request || remote_id ? redirect_json_response(e) : route?.page && is_action_json_request(event) ? action_json_redirect(e) : redirect_response(e.status, e.location);\n      add_cookies_to_headers(response.headers, new_cookies.values());\n      return response;\n    }\n    return await handle_fatal_error(event, event_state, options2, e);\n  }\n  async function resolve2(event2, page_nodes, opts) {\n    try {\n      if (opts) {\n        resolve_opts = {\n          transformPageChunk: opts.transformPageChunk || default_transform,\n          filterSerializedResponseHeaders: opts.filterSerializedResponseHeaders || default_filter,\n          preload: opts.preload || default_preload\n        };\n      }\n      if (options2.hash_routing || state.prerendering?.fallback) {\n        return await render_response({\n          event: event2,\n          event_state,\n          options: options2,\n          manifest,\n          state,\n          page_config: { ssr: false, csr: true },\n          status: 200,\n          error: null,\n          branch: [],\n          fetched: [],\n          resolve_opts,\n          data_serializer: server_data_serializer(event2, event_state, options2)\n        });\n      }\n      if (remote_id) {\n        return await handle_remote_call(event2, event_state, options2, manifest, remote_id);\n      }\n      if (route) {\n        const method = (\n          /** @type {import('types').HttpMethod} */\n          event2.request.method\n        );\n        let response2;\n        if (is_data_request) {\n          response2 = await render_data(\n            event2,\n            event_state,\n            route,\n            options2,\n            manifest,\n            state,\n            invalidated_data_nodes,\n            trailing_slash\n          );\n        } else if (route.endpoint && (!route.page || is_endpoint_request(event2))) {\n          response2 = await render_endpoint(event2, event_state, await route.endpoint(), state);\n        } else if (route.page) {\n          if (!page_nodes) {\n            throw new Error(\"page_nodes not found. This should never happen\");\n          } else if (page_methods.has(method)) {\n            response2 = await render_page(\n              event2,\n              event_state,\n              route.page,\n              options2,\n              manifest,\n              state,\n              page_nodes,\n              resolve_opts\n            );\n          } else {\n            const allowed_methods2 = new Set(allowed_page_methods);\n            const node = await manifest._.nodes[route.page.leaf]();\n            if (node?.server?.actions) {\n              allowed_methods2.add(\"POST\");\n            }\n            if (method === \"OPTIONS\") {\n              response2 = new Response(null, {\n                status: 204,\n                headers: {\n                  allow: Array.from(allowed_methods2.values()).join(\", \")\n                }\n              });\n            } else {\n              const mod = [...allowed_methods2].reduce(\n                (acc, curr) => {\n                  acc[curr] = true;\n                  return acc;\n                },\n                /** @type {Record<string, any>} */\n                {}\n              );\n              response2 = method_not_allowed(mod, method);\n            }\n          }\n        } else {\n          throw new Error(\"Route is neither page nor endpoint. This should never happen\");\n        }\n        if (request.method === \"GET\" && route.page && route.endpoint) {\n          const vary = response2.headers.get(\"vary\")?.split(\",\")?.map((v) => v.trim().toLowerCase());\n          if (!(vary?.includes(\"accept\") || vary?.includes(\"*\"))) {\n            response2 = new Response(response2.body, {\n              status: response2.status,\n              statusText: response2.statusText,\n              headers: new Headers(response2.headers)\n            });\n            response2.headers.append(\"Vary\", \"Accept\");\n          }\n        }\n        return response2;\n      }\n      if (state.error && event2.isSubRequest) {\n        const headers22 = new Headers(request.headers);\n        headers22.set(\"x-sveltekit-error\", \"true\");\n        return await fetch(request, { headers: headers22 });\n      }\n      if (state.error) {\n        return text(\"Internal Server Error\", {\n          status: 500\n        });\n      }\n      if (state.depth === 0) {\n        if (BROWSER && event2.url.pathname === \"/.well-known/appspecific/com.chrome.devtools.json\") ;\n        return await respond_with_error({\n          event: event2,\n          event_state,\n          options: options2,\n          manifest,\n          state,\n          status: 404,\n          error: new SvelteKitError(404, \"Not Found\", `Not found: ${event2.url.pathname}`),\n          resolve_opts\n        });\n      }\n      if (state.prerendering) {\n        return text(\"not found\", { status: 404 });\n      }\n      const response = await fetch(request);\n      return new Response(response.body, response);\n    } catch (e) {\n      return await handle_fatal_error(event2, event_state, options2, e);\n    } finally {\n      event2.cookies.set = () => {\n        throw new Error(\"Cannot use `cookies.set(...)` after the response has been generated\");\n      };\n      event2.setHeaders = () => {\n        throw new Error(\"Cannot use `setHeaders(...)` after the response has been generated\");\n      };\n    }\n  }\n}\nfunction load_page_nodes(page, manifest) {\n  return Promise.all([\n    // we use == here rather than === because [undefined] serializes as \"[null]\"\n    ...page.layouts.map((n) => n == void 0 ? n : manifest._.nodes[n]()),\n    manifest._.nodes[page.leaf]()\n  ]);\n}\nfunction propagate_context(fn) {\n  return async (req, ...rest) => {\n    {\n      return fn(req, ...rest);\n    }\n  };\n}\nfunction filter_env(env, allowed, disallowed) {\n  return Object.fromEntries(\n    Object.entries(env).filter(\n      ([k]) => k.startsWith(allowed) && (disallowed === \"\" || !k.startsWith(disallowed))\n    )\n  );\n}\nfunction set_app(value) {\n}\nlet init_promise;\nlet current = null;\nclass Server {\n  /** @type {import('types').SSROptions} */\n  #options;\n  /** @type {import('@sveltejs/kit').SSRManifest} */\n  #manifest;\n  /** @param {import('@sveltejs/kit').SSRManifest} manifest */\n  constructor(manifest) {\n    this.#options = options;\n    this.#manifest = manifest;\n    if (IN_WEBCONTAINER) {\n      const respond2 = this.respond.bind(this);\n      this.respond = async (...args) => {\n        const { promise, resolve: resolve2 } = (\n          /** @type {PromiseWithResolvers<void>} */\n          with_resolvers()\n        );\n        const previous = current;\n        current = promise;\n        await previous;\n        return respond2(...args).finally(resolve2);\n      };\n    }\n  }\n  /**\n   * @param {import('@sveltejs/kit').ServerInitOptions} opts\n   */\n  async init({ env, read }) {\n    const { env_public_prefix, env_private_prefix } = this.#options;\n    set_private_env(filter_env(env, env_private_prefix, env_public_prefix));\n    set_public_env(filter_env(env, env_public_prefix, env_private_prefix));\n    if (read) {\n      const wrapped_read = (file) => {\n        const result = read(file);\n        if (result instanceof ReadableStream) {\n          return result;\n        } else {\n          return new ReadableStream({\n            async start(controller) {\n              try {\n                const stream = await Promise.resolve(result);\n                if (!stream) {\n                  controller.close();\n                  return;\n                }\n                const reader = stream.getReader();\n                while (true) {\n                  const { done, value } = await reader.read();\n                  if (done) break;\n                  controller.enqueue(value);\n                }\n                controller.close();\n              } catch (error2) {\n                controller.error(error2);\n              }\n            }\n          });\n        }\n      };\n      set_read_implementation(wrapped_read);\n    }\n    await (init_promise ??= (async () => {\n      try {\n        const module = await get_hooks();\n        this.#options.hooks = {\n          handle: module.handle || (({ event, resolve: resolve2 }) => resolve2(event)),\n          handleError: module.handleError || (({ status, error: error2, event }) => {\n            const error_message = format_server_error(\n              status,\n              /** @type {Error} */\n              error2,\n              event\n            );\n            console.error(error_message);\n          }),\n          handleFetch: module.handleFetch || (({ request, fetch: fetch2 }) => fetch2(request)),\n          handleValidationError: module.handleValidationError || (({ issues }) => {\n            console.error(\"Remote function schema validation failed:\", issues);\n            return { message: \"Bad Request\" };\n          }),\n          reroute: module.reroute || (() => {\n          }),\n          transport: module.transport || {}\n        };\n        set_app({\n          decoders: module.transport ? Object.fromEntries(Object.entries(module.transport).map(([k, v]) => [k, v.decode])) : {}\n        });\n        if (module.init) {\n          await module.init();\n        }\n      } catch (e) {\n        {\n          throw e;\n        }\n      }\n    })());\n  }\n  /**\n   * @param {Request} request\n   * @param {import('types').RequestOptions} options\n   */\n  async respond(request, options2) {\n    return respond(request, this.#options, this.#manifest, {\n      ...options2,\n      error: false,\n      depth: 0\n    });\n  }\n}\nexport {\n  Server\n};\n", "import { HttpError, Redirect, ActionFailure } from './internal/index.js';\nimport { BROWSER, DEV } from 'esm-env';\nimport {\n\tadd_data_suffix,\n\tadd_resolution_suffix,\n\thas_data_suffix,\n\thas_resolution_suffix,\n\tstrip_data_suffix,\n\tstrip_resolution_suffix\n} from '../runtime/pathname.js';\nimport { text_encoder } from '../runtime/utils.js';\n\nexport { VERSION } from '../version.js';\n\n// TODO 3.0: remove these types as they are not used anymore (we can't remove them yet because that would be a breaking change)\n/**\n * @template {number} TNumber\n * @template {any[]} [TArray=[]]\n * @typedef {TNumber extends TArray['length'] ? TArray[number] : LessThan<TNumber, [...TArray, TArray['length']]>} LessThan\n */\n\n/**\n * @template {number} TStart\n * @template {number} TEnd\n * @typedef {Exclude<TEnd | LessThan<TEnd>, LessThan<TStart>>} NumericRange\n */\n\n// Keep the status codes as `number` because restricting to certain numbers makes it unnecessarily hard to use compared to the benefits\n// (we have runtime errors already to check for invalid codes). Also see https://github.com/sveltejs/kit/issues/11780\n\n// we have to repeat the JSDoc because the display for function overloads is broken\n// see https://github.com/microsoft/TypeScript/issues/55056\n\n/**\n * Throws an error with a HTTP status code and an optional message.\n * When called during request handling, this will cause SvelteKit to\n * return an error response without invoking `handleError`.\n * Make sure you're not catching the thrown error, which would prevent SvelteKit from handling it.\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @param {App.Error} body An object that conforms to the App.Error type. If a string is passed, it will be used as the message property.\n * @overload\n * @param {number} status\n * @param {App.Error} body\n * @return {never}\n * @throws {HttpError} This error instructs SvelteKit to initiate HTTP error handling.\n * @throws {Error} If the provided status is invalid (not between 400 and 599).\n */\n/**\n * Throws an error with a HTTP status code and an optional message.\n * When called during request handling, this will cause SvelteKit to\n * return an error response without invoking `handleError`.\n * Make sure you're not catching the thrown error, which would prevent SvelteKit from handling it.\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @param {{ message: string } extends App.Error ? App.Error | string | undefined : never} [body] An object that conforms to the App.Error type. If a string is passed, it will be used as the message property.\n * @overload\n * @param {number} status\n * @param {{ message: string } extends App.Error ? App.Error | string | undefined : never} [body]\n * @return {never}\n * @throws {HttpError} This error instructs SvelteKit to initiate HTTP error handling.\n * @throws {Error} If the provided status is invalid (not between 400 and 599).\n */\n/**\n * Throws an error with a HTTP status code and an optional message.\n * When called during request handling, this will cause SvelteKit to\n * return an error response without invoking `handleError`.\n * Make sure you're not catching the thrown error, which would prevent SvelteKit from handling it.\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @param {{ message: string } extends App.Error ? App.Error | string | undefined : never} body An object that conforms to the App.Error type. If a string is passed, it will be used as the message property.\n * @return {never}\n * @throws {HttpError} This error instructs SvelteKit to initiate HTTP error handling.\n * @throws {Error} If the provided status is invalid (not between 400 and 599).\n */\nexport function error(status, body) {\n\tif ((!BROWSER || DEV) && (isNaN(status) || status < 400 || status > 599)) {\n\t\tthrow new Error(`HTTP error status codes must be between 400 and 599 \u2014 ${status} is invalid`);\n\t}\n\n\tthrow new HttpError(status, body);\n}\n\n/**\n * Checks whether this is an error thrown by {@link error}.\n * @template {number} T\n * @param {unknown} e\n * @param {T} [status] The status to filter for.\n * @return {e is (HttpError & { status: T extends undefined ? never : T })}\n */\nexport function isHttpError(e, status) {\n\tif (!(e instanceof HttpError)) return false;\n\treturn !status || e.status === status;\n}\n\n/**\n * Redirect a request. When called during request handling, SvelteKit will return a redirect response.\n * Make sure you're not catching the thrown redirect, which would prevent SvelteKit from handling it.\n *\n * Most common status codes:\n *  * `303 See Other`: redirect as a GET request (often used after a form POST request)\n *  * `307 Temporary Redirect`: redirect will keep the request method\n *  * `308 Permanent Redirect`: redirect will keep the request method, SEO will be transferred to the new page\n *\n * [See all redirect status codes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#redirection_messages)\n *\n * @param {300 | 301 | 302 | 303 | 304 | 305 | 306 | 307 | 308 | ({} & number)} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#redirection_messages). Must be in the range 300-308.\n * @param {string | URL} location The location to redirect to.\n * @throws {Redirect} This error instructs SvelteKit to redirect to the specified location.\n * @throws {Error} If the provided status is invalid.\n * @return {never}\n */\nexport function redirect(status, location) {\n\tif ((!BROWSER || DEV) && (isNaN(status) || status < 300 || status > 308)) {\n\t\tthrow new Error('Invalid status code');\n\t}\n\n\tthrow new Redirect(\n\t\t// @ts-ignore\n\t\tstatus,\n\t\tlocation.toString()\n\t);\n}\n\n/**\n * Checks whether this is a redirect thrown by {@link redirect}.\n * @param {unknown} e The object to check.\n * @return {e is Redirect}\n */\nexport function isRedirect(e) {\n\treturn e instanceof Redirect;\n}\n\n/**\n * Create a JSON `Response` object from the supplied data.\n * @param {any} data The value that will be serialized as JSON.\n * @param {ResponseInit} [init] Options such as `status` and `headers` that will be added to the response. `Content-Type: application/json` and `Content-Length` headers will be added automatically.\n */\nexport function json(data, init) {\n\t// TODO deprecate this in favour of `Response.json` when it's\n\t// more widely supported\n\tconst body = JSON.stringify(data);\n\n\t// we can't just do `text(JSON.stringify(data), init)` because\n\t// it will set a default `content-type` header. duplicated code\n\t// means less duplicated work\n\tconst headers = new Headers(init?.headers);\n\tif (!headers.has('content-length')) {\n\t\theaders.set('content-length', text_encoder.encode(body).byteLength.toString());\n\t}\n\n\tif (!headers.has('content-type')) {\n\t\theaders.set('content-type', 'application/json');\n\t}\n\n\treturn new Response(body, {\n\t\t...init,\n\t\theaders\n\t});\n}\n\n/**\n * Create a `Response` object from the supplied body.\n * @param {string} body The value that will be used as-is.\n * @param {ResponseInit} [init] Options such as `status` and `headers` that will be added to the response. A `Content-Length` header will be added automatically.\n */\nexport function text(body, init) {\n\tconst headers = new Headers(init?.headers);\n\tif (!headers.has('content-length')) {\n\t\tconst encoded = text_encoder.encode(body);\n\t\theaders.set('content-length', encoded.byteLength.toString());\n\t\treturn new Response(encoded, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\treturn new Response(body, {\n\t\t...init,\n\t\theaders\n\t});\n}\n\n/**\n * Create an `ActionFailure` object. Call when form submission fails.\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @overload\n * @param {number} status\n * @returns {import('./public.js').ActionFailure<undefined>}\n */\n/**\n * Create an `ActionFailure` object. Call when form submission fails.\n * @template [T=undefined]\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @param {T} data Data associated with the failure (e.g. validation errors)\n * @overload\n * @param {number} status\n * @param {T} data\n * @returns {import('./public.js').ActionFailure<T>}\n */\n/**\n * Create an `ActionFailure` object. Call when form submission fails.\n * @param {number} status\n * @param {any} [data]\n * @returns {import('./public.js').ActionFailure<any>}\n */\nexport function fail(status, data) {\n\t// @ts-expect-error unique symbol missing\n\treturn new ActionFailure(status, data);\n}\n\n/**\n * Checks whether this is an action failure thrown by {@link fail}.\n * @param {unknown} e The object to check.\n * @return {e is import('./public.js').ActionFailure}\n */\nexport function isActionFailure(e) {\n\treturn e instanceof ActionFailure;\n}\n\n/**\n * Strips possible SvelteKit-internal suffixes and trailing slashes from the URL pathname.\n * Returns the normalized URL as well as a method for adding the potential suffix back\n * based on a new pathname (possibly including search) or URL.\n * ```js\n * import { normalizeUrl } from '@sveltejs/kit';\n *\n * const { url, denormalize } = normalizeUrl('/blog/post/__data.json');\n * console.log(url.pathname); // /blog/post\n * console.log(denormalize('/blog/post/a')); // /blog/post/a/__data.json\n * ```\n * @param {URL | string} url\n * @returns {{ url: URL, wasNormalized: boolean, denormalize: (url?: string | URL) => URL }}\n * @since 2.18.0\n */\nexport function normalizeUrl(url) {\n\turl = new URL(url, 'http://internal');\n\n\tconst is_route_resolution = has_resolution_suffix(url.pathname);\n\tconst is_data_request = has_data_suffix(url.pathname);\n\tconst has_trailing_slash = url.pathname !== '/' && url.pathname.endsWith('/');\n\n\tif (is_route_resolution) {\n\t\turl.pathname = strip_resolution_suffix(url.pathname);\n\t} else if (is_data_request) {\n\t\turl.pathname = strip_data_suffix(url.pathname);\n\t} else if (has_trailing_slash) {\n\t\turl.pathname = url.pathname.slice(0, -1);\n\t}\n\n\treturn {\n\t\turl,\n\t\twasNormalized: is_data_request || is_route_resolution || has_trailing_slash,\n\t\tdenormalize: (new_url = url) => {\n\t\t\tnew_url = new URL(new_url, url);\n\t\t\tif (is_route_resolution) {\n\t\t\t\tnew_url.pathname = add_resolution_suffix(new_url.pathname);\n\t\t\t} else if (is_data_request) {\n\t\t\t\tnew_url.pathname = add_data_suffix(new_url.pathname);\n\t\t\t} else if (has_trailing_slash && !new_url.pathname.endsWith('/')) {\n\t\t\t\tnew_url.pathname += '/';\n\t\t\t}\n\t\t\treturn new_url;\n\t\t}\n\t};\n}\n", "export default true;\n", "const node_env = globalThis.process?.env?.NODE_ENV;\nexport default node_env && !node_env.toLowerCase().startsWith('prod');\n", "import { BROWSER } from 'esm-env';\n\nexport const text_encoder = new TextEncoder();\nexport const text_decoder = new TextDecoder();\n\n/**\n * Like node's path.relative, but without using node\n * @param {string} from\n * @param {string} to\n */\nexport function get_relative_path(from, to) {\n\tconst from_parts = from.split(/[/\\\\]/);\n\tconst to_parts = to.split(/[/\\\\]/);\n\tfrom_parts.pop(); // get dirname\n\n\twhile (from_parts[0] === to_parts[0]) {\n\t\tfrom_parts.shift();\n\t\tto_parts.shift();\n\t}\n\n\tlet i = from_parts.length;\n\twhile (i--) from_parts[i] = '..';\n\n\treturn from_parts.concat(to_parts).join('/');\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {string}\n */\nexport function base64_encode(bytes) {\n\t// Using `Buffer` is faster than iterating\n\tif (!BROWSER && globalThis.Buffer) {\n\t\treturn globalThis.Buffer.from(bytes).toString('base64');\n\t}\n\n\tlet binary = '';\n\n\tfor (let i = 0; i < bytes.length; i++) {\n\t\tbinary += String.fromCharCode(bytes[i]);\n\t}\n\n\treturn btoa(binary);\n}\n\n/**\n * @param {string} encoded\n * @returns {Uint8Array}\n */\nexport function base64_decode(encoded) {\n\t// Using `Buffer` is faster than iterating\n\tif (!BROWSER && globalThis.Buffer) {\n\t\tconst buffer = globalThis.Buffer.from(encoded, 'base64');\n\t\treturn new Uint8Array(buffer);\n\t}\n\n\tconst binary = atob(encoded);\n\tconst bytes = new Uint8Array(binary.length);\n\n\tfor (let i = 0; i < binary.length; i++) {\n\t\tbytes[i] = binary.charCodeAt(i);\n\t}\n\n\treturn bytes;\n}\n", "let base = \"\";\nlet assets = base;\nconst app_dir = \"_app\";\nconst relative = true;\nconst initial = { base, assets };\nfunction override(paths) {\n  base = paths.base;\n  assets = paths.assets;\n}\nfunction reset() {\n  base = initial.base;\n  assets = initial.assets;\n}\nfunction set_assets(path) {\n  assets = initial.assets = path;\n}\nlet prerendering = false;\nfunction set_building() {\n}\nfunction set_prerendering() {\n  prerendering = true;\n}\nexport {\n  assets as a,\n  base as b,\n  app_dir as c,\n  reset as d,\n  set_building as e,\n  set_prerendering as f,\n  override as o,\n  prerendering as p,\n  relative as r,\n  set_assets as s\n};\n", "/** @type {Record<string, string>} */\nexport const escaped = {\n\t'<': '\\\\u003C',\n\t'\\\\': '\\\\\\\\',\n\t'\\b': '\\\\b',\n\t'\\f': '\\\\f',\n\t'\\n': '\\\\n',\n\t'\\r': '\\\\r',\n\t'\\t': '\\\\t',\n\t'\\u2028': '\\\\u2028',\n\t'\\u2029': '\\\\u2029'\n};\n\nexport class DevalueError extends Error {\n\t/**\n\t * @param {string} message\n\t * @param {string[]} keys\n\t */\n\tconstructor(message, keys) {\n\t\tsuper(message);\n\t\tthis.name = 'DevalueError';\n\t\tthis.path = keys.join('');\n\t}\n}\n\n/** @param {any} thing */\nexport function is_primitive(thing) {\n\treturn Object(thing) !== thing;\n}\n\nconst object_proto_names = /* @__PURE__ */ Object.getOwnPropertyNames(\n\tObject.prototype\n)\n\t.sort()\n\t.join('\\0');\n\n/** @param {any} thing */\nexport function is_plain_object(thing) {\n\tconst proto = Object.getPrototypeOf(thing);\n\n\treturn (\n\t\tproto === Object.prototype ||\n\t\tproto === null ||\n\t\tObject.getPrototypeOf(proto) === null ||\n\t\tObject.getOwnPropertyNames(proto).sort().join('\\0') === object_proto_names\n\t);\n}\n\n/** @param {any} thing */\nexport function get_type(thing) {\n\treturn Object.prototype.toString.call(thing).slice(8, -1);\n}\n\n/** @param {string} char */\nfunction get_escaped_char(char) {\n\tswitch (char) {\n\t\tcase '\"':\n\t\t\treturn '\\\\\"';\n\t\tcase '<':\n\t\t\treturn '\\\\u003C';\n\t\tcase '\\\\':\n\t\t\treturn '\\\\\\\\';\n\t\tcase '\\n':\n\t\t\treturn '\\\\n';\n\t\tcase '\\r':\n\t\t\treturn '\\\\r';\n\t\tcase '\\t':\n\t\t\treturn '\\\\t';\n\t\tcase '\\b':\n\t\t\treturn '\\\\b';\n\t\tcase '\\f':\n\t\t\treturn '\\\\f';\n\t\tcase '\\u2028':\n\t\t\treturn '\\\\u2028';\n\t\tcase '\\u2029':\n\t\t\treturn '\\\\u2029';\n\t\tdefault:\n\t\t\treturn char < ' '\n\t\t\t\t? `\\\\u${char.charCodeAt(0).toString(16).padStart(4, '0')}`\n\t\t\t\t: '';\n\t}\n}\n\n/** @param {string} str */\nexport function stringify_string(str) {\n\tlet result = '';\n\tlet last_pos = 0;\n\tconst len = str.length;\n\n\tfor (let i = 0; i < len; i += 1) {\n\t\tconst char = str[i];\n\t\tconst replacement = get_escaped_char(char);\n\t\tif (replacement) {\n\t\t\tresult += str.slice(last_pos, i) + replacement;\n\t\t\tlast_pos = i + 1;\n\t\t}\n\t}\n\n\treturn `\"${last_pos === 0 ? str : result + str.slice(last_pos)}\"`;\n}\n\n/** @param {Record<string | symbol, any>} object */\nexport function enumerable_symbols(object) {\n\treturn Object.getOwnPropertySymbols(object).filter(\n\t\t(symbol) => Object.getOwnPropertyDescriptor(object, symbol).enumerable\n\t);\n}\n\nconst is_identifier = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;\n\n/** @param {string} key */\nexport function stringify_key(key) {\n\treturn is_identifier.test(key) ? '.' + key : '[' + JSON.stringify(key) + ']';\n}\n", "import {\n\tDevalueError,\n\tenumerable_symbols,\n\tescaped,\n\tget_type,\n\tis_plain_object,\n\tis_primitive,\n\tstringify_key,\n\tstringify_string\n} from './utils.js';\n\nconst chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$';\nconst unsafe_chars = /[<\\b\\f\\n\\r\\t\\0\\u2028\\u2029]/g;\nconst reserved =\n\t/^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;\n\n/**\n * Turn a value into the JavaScript that creates an equivalent value\n * @param {any} value\n * @param {(value: any, uneval: (value: any) => string) => string | void} [replacer]\n */\nexport function uneval(value, replacer) {\n\tconst counts = new Map();\n\n\t/** @type {string[]} */\n\tconst keys = [];\n\n\tconst custom = new Map();\n\n\t/** @param {any} thing */\n\tfunction walk(thing) {\n\t\tif (typeof thing === 'function') {\n\t\t\tthrow new DevalueError(`Cannot stringify a function`, keys);\n\t\t}\n\n\t\tif (!is_primitive(thing)) {\n\t\t\tif (counts.has(thing)) {\n\t\t\t\tcounts.set(thing, counts.get(thing) + 1);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcounts.set(thing, 1);\n\n\t\t\tif (replacer) {\n\t\t\t\tconst str = replacer(thing, (value) => uneval(value, replacer));\n\n\t\t\t\tif (typeof str === 'string') {\n\t\t\t\t\tcustom.set(thing, str);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst type = get_type(thing);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'BigInt':\n\t\t\t\tcase 'String':\n\t\t\t\tcase 'Boolean':\n\t\t\t\tcase 'Date':\n\t\t\t\tcase 'RegExp':\n\t\t\t\tcase 'URL':\n\t\t\t\tcase 'URLSearchParams':\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\t/** @type {any[]} */ (thing).forEach((value, i) => {\n\t\t\t\t\t\tkeys.push(`[${i}]`);\n\t\t\t\t\t\twalk(value);\n\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Set':\n\t\t\t\t\tArray.from(thing).forEach(walk);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Map':\n\t\t\t\t\tfor (const [key, value] of thing) {\n\t\t\t\t\t\tkeys.push(\n\t\t\t\t\t\t\t`.get(${is_primitive(key) ? stringify_primitive(key) : '...'})`\n\t\t\t\t\t\t);\n\t\t\t\t\t\twalk(value);\n\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Int8Array':\n\t\t\t\tcase 'Uint8Array':\n\t\t\t\tcase 'Uint8ClampedArray':\n\t\t\t\tcase 'Int16Array':\n\t\t\t\tcase 'Uint16Array':\n\t\t\t\tcase 'Int32Array':\n\t\t\t\tcase 'Uint32Array':\n\t\t\t\tcase 'Float32Array':\n\t\t\t\tcase 'Float64Array':\n\t\t\t\tcase 'BigInt64Array':\n\t\t\t\tcase 'BigUint64Array':\n\t\t\t\t\twalk(thing.buffer);\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'ArrayBuffer':\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'Temporal.Duration':\n\t\t\t\tcase 'Temporal.Instant':\n\t\t\t\tcase 'Temporal.PlainDate':\n\t\t\t\tcase 'Temporal.PlainTime':\n\t\t\t\tcase 'Temporal.PlainDateTime':\n\t\t\t\tcase 'Temporal.PlainMonthDay':\n\t\t\t\tcase 'Temporal.PlainYearMonth':\n\t\t\t\tcase 'Temporal.ZonedDateTime':\n\t\t\t\t\treturn;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (!is_plain_object(thing)) {\n\t\t\t\t\t\tthrow new DevalueError(\n\t\t\t\t\t\t\t`Cannot stringify arbitrary non-POJOs`,\n\t\t\t\t\t\t\tkeys\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (enumerable_symbols(thing).length > 0) {\n\t\t\t\t\t\tthrow new DevalueError(\n\t\t\t\t\t\t\t`Cannot stringify POJOs with symbolic keys`,\n\t\t\t\t\t\t\tkeys\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key in thing) {\n\t\t\t\t\t\tkeys.push(stringify_key(key));\n\t\t\t\t\t\twalk(thing[key]);\n\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\twalk(value);\n\n\tconst names = new Map();\n\n\tArray.from(counts)\n\t\t.filter((entry) => entry[1] > 1)\n\t\t.sort((a, b) => b[1] - a[1])\n\t\t.forEach((entry, i) => {\n\t\t\tnames.set(entry[0], get_name(i));\n\t\t});\n\n\t/**\n\t * @param {any} thing\n\t * @returns {string}\n\t */\n\tfunction stringify(thing) {\n\t\tif (names.has(thing)) {\n\t\t\treturn names.get(thing);\n\t\t}\n\n\t\tif (is_primitive(thing)) {\n\t\t\treturn stringify_primitive(thing);\n\t\t}\n\n\t\tif (custom.has(thing)) {\n\t\t\treturn custom.get(thing);\n\t\t}\n\n\t\tconst type = get_type(thing);\n\n\t\tswitch (type) {\n\t\t\tcase 'Number':\n\t\t\tcase 'String':\n\t\t\tcase 'Boolean':\n\t\t\t\treturn `Object(${stringify(thing.valueOf())})`;\n\n\t\t\tcase 'RegExp':\n\t\t\t\treturn `new RegExp(${stringify_string(thing.source)}, \"${\n\t\t\t\t\tthing.flags\n\t\t\t\t}\")`;\n\n\t\t\tcase 'Date':\n\t\t\t\treturn `new Date(${thing.getTime()})`;\n\n\t\t\tcase 'URL':\n\t\t\t\treturn `new URL(${stringify_string(thing.toString())})`;\n\n\t\t\tcase 'URLSearchParams':\n\t\t\t\treturn `new URLSearchParams(${stringify_string(thing.toString())})`;\n\n\t\t\tcase 'Array':\n\t\t\t\tconst members = /** @type {any[]} */ (thing).map((v, i) =>\n\t\t\t\t\ti in thing ? stringify(v) : ''\n\t\t\t\t);\n\t\t\t\tconst tail = thing.length === 0 || thing.length - 1 in thing ? '' : ',';\n\t\t\t\treturn `[${members.join(',')}${tail}]`;\n\n\t\t\tcase 'Set':\n\t\t\tcase 'Map':\n\t\t\t\treturn `new ${type}([${Array.from(thing).map(stringify).join(',')}])`;\n\n\t\t\tcase 'Int8Array':\n\t\t\tcase 'Uint8Array':\n\t\t\tcase 'Uint8ClampedArray':\n\t\t\tcase 'Int16Array':\n\t\t\tcase 'Uint16Array':\n\t\t\tcase 'Int32Array':\n\t\t\tcase 'Uint32Array':\n\t\t\tcase 'Float32Array':\n\t\t\tcase 'Float64Array':\n\t\t\tcase 'BigInt64Array':\n\t\t\tcase 'BigUint64Array': {\n\t\t\t\tlet str = `new ${type}`;\n\n\t\t\t\tif (counts.get(thing.buffer) === 1) {\n\t\t\t\t\tconst array = new thing.constructor(thing.buffer);\n\t\t\t\t\tstr += `([${array}])`;\n\t\t\t\t} else {\n\t\t\t\t\tstr += `([${stringify(thing.buffer)}])`;\n\t\t\t\t}\n\n\t\t\t\tconst a = thing.byteOffset;\n\t\t\t\tconst b = a + thing.byteLength;\n\n\t\t\t\t// handle subarrays\n\t\t\t\tif (a > 0 || b !== thing.buffer.byteLength) {\n\t\t\t\t\tconst m = +/(\\d+)/.exec(type)[1] / 8;\n\t\t\t\t\tstr += `.subarray(${a / m},${b / m})`;\n\t\t\t\t}\n\n\t\t\t\treturn str;\n\t\t\t}\n\n\t\t\tcase 'ArrayBuffer': {\n\t\t\t\tconst ui8 = new Uint8Array(thing);\n\t\t\t\treturn `new Uint8Array([${ui8.toString()}]).buffer`;\n\t\t\t}\n\n\t\t\tcase 'Temporal.Duration':\n\t\t\tcase 'Temporal.Instant':\n\t\t\tcase 'Temporal.PlainDate':\n\t\t\tcase 'Temporal.PlainTime':\n\t\t\tcase 'Temporal.PlainDateTime':\n\t\t\tcase 'Temporal.PlainMonthDay':\n\t\t\tcase 'Temporal.PlainYearMonth':\n\t\t\tcase 'Temporal.ZonedDateTime':\n\t\t\t\treturn `${type}.from(${stringify_string(thing.toString())})`;\n\n\t\t\tdefault:\n\t\t\t\tconst keys = Object.keys(thing);\n\t\t\t\tconst obj = keys\n\t\t\t\t\t.map((key) => `${safe_key(key)}:${stringify(thing[key])}`)\n\t\t\t\t\t.join(',');\n\t\t\t\tconst proto = Object.getPrototypeOf(thing);\n\t\t\t\tif (proto === null) {\n\t\t\t\t\treturn keys.length > 0\n\t\t\t\t\t\t? `{${obj},__proto__:null}`\n\t\t\t\t\t\t: `{__proto__:null}`;\n\t\t\t\t}\n\n\t\t\t\treturn `{${obj}}`;\n\t\t}\n\t}\n\n\tconst str = stringify(value);\n\n\tif (names.size) {\n\t\t/** @type {string[]} */\n\t\tconst params = [];\n\n\t\t/** @type {string[]} */\n\t\tconst statements = [];\n\n\t\t/** @type {string[]} */\n\t\tconst values = [];\n\n\t\tnames.forEach((name, thing) => {\n\t\t\tparams.push(name);\n\n\t\t\tif (custom.has(thing)) {\n\t\t\t\tvalues.push(/** @type {string} */ (custom.get(thing)));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (is_primitive(thing)) {\n\t\t\t\tvalues.push(stringify_primitive(thing));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst type = get_type(thing);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'String':\n\t\t\t\tcase 'Boolean':\n\t\t\t\t\tvalues.push(`Object(${stringify(thing.valueOf())})`);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RegExp':\n\t\t\t\t\tvalues.push(thing.toString());\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Date':\n\t\t\t\t\tvalues.push(`new Date(${thing.getTime()})`);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tvalues.push(`Array(${thing.length})`);\n\t\t\t\t\t/** @type {any[]} */ (thing).forEach((v, i) => {\n\t\t\t\t\t\tstatements.push(`${name}[${i}]=${stringify(v)}`);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Set':\n\t\t\t\t\tvalues.push(`new Set`);\n\t\t\t\t\tstatements.push(\n\t\t\t\t\t\t`${name}.${Array.from(thing)\n\t\t\t\t\t\t\t.map((v) => `add(${stringify(v)})`)\n\t\t\t\t\t\t\t.join('.')}`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Map':\n\t\t\t\t\tvalues.push(`new Map`);\n\t\t\t\t\tstatements.push(\n\t\t\t\t\t\t`${name}.${Array.from(thing)\n\t\t\t\t\t\t\t.map(([k, v]) => `set(${stringify(k)}, ${stringify(v)})`)\n\t\t\t\t\t\t\t.join('.')}`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ArrayBuffer':\n\t\t\t\t\tvalues.push(\n\t\t\t\t\t\t`new Uint8Array([${new Uint8Array(thing).join(',')}]).buffer`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tvalues.push(\n\t\t\t\t\t\tObject.getPrototypeOf(thing) === null ? 'Object.create(null)' : '{}'\n\t\t\t\t\t);\n\t\t\t\t\tObject.keys(thing).forEach((key) => {\n\t\t\t\t\t\tstatements.push(\n\t\t\t\t\t\t\t`${name}${safe_prop(key)}=${stringify(thing[key])}`\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tstatements.push(`return ${str}`);\n\n\t\treturn `(function(${params.join(',')}){${statements.join(\n\t\t\t';'\n\t\t)}}(${values.join(',')}))`;\n\t} else {\n\t\treturn str;\n\t}\n}\n\n/** @param {number} num */\nfunction get_name(num) {\n\tlet name = '';\n\n\tdo {\n\t\tname = chars[num % chars.length] + name;\n\t\tnum = ~~(num / chars.length) - 1;\n\t} while (num >= 0);\n\n\treturn reserved.test(name) ? `${name}0` : name;\n}\n\n/** @param {string} c */\nfunction escape_unsafe_char(c) {\n\treturn escaped[c] || c;\n}\n\n/** @param {string} str */\nfunction escape_unsafe_chars(str) {\n\treturn str.replace(unsafe_chars, escape_unsafe_char);\n}\n\n/** @param {string} key */\nfunction safe_key(key) {\n\treturn /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key)\n\t\t? key\n\t\t: escape_unsafe_chars(JSON.stringify(key));\n}\n\n/** @param {string} key */\nfunction safe_prop(key) {\n\treturn /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key)\n\t\t? `.${key}`\n\t\t: `[${escape_unsafe_chars(JSON.stringify(key))}]`;\n}\n\n/** @param {any} thing */\nfunction stringify_primitive(thing) {\n\tif (typeof thing === 'string') return stringify_string(thing);\n\tif (thing === void 0) return 'void 0';\n\tif (thing === 0 && 1 / thing < 0) return '-0';\n\tconst str = String(thing);\n\tif (typeof thing === 'number') return str.replace(/^(-)?0\\./, '$1.');\n\tif (typeof thing === 'bigint') return thing + 'n';\n\treturn str;\n}\n", "/**\n * Base64 Encodes an arraybuffer\n * @param {ArrayBuffer} arraybuffer\n * @returns {string}\n */\nexport function encode64(arraybuffer) {\n  const dv = new DataView(arraybuffer);\n  let binaryString = \"\";\n\n  for (let i = 0; i < arraybuffer.byteLength; i++) {\n    binaryString += String.fromCharCode(dv.getUint8(i));\n  }\n\n  return binaryToAscii(binaryString);\n}\n\n/**\n * Decodes a base64 string into an arraybuffer\n * @param {string} string\n * @returns {ArrayBuffer}\n */\nexport function decode64(string) {\n  const binaryString = asciiToBinary(string);\n  const arraybuffer = new ArrayBuffer(binaryString.length);\n  const dv = new DataView(arraybuffer);\n\n  for (let i = 0; i < arraybuffer.byteLength; i++) {\n    dv.setUint8(i, binaryString.charCodeAt(i));\n  }\n\n  return arraybuffer;\n}\n\nconst KEY_STRING =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n/**\n * Substitute for atob since it's deprecated in node.\n * Does not do any input validation.\n *\n * @see https://github.com/jsdom/abab/blob/master/lib/atob.js\n *\n * @param {string} data\n * @returns {string}\n */\nfunction asciiToBinary(data) {\n  if (data.length % 4 === 0) {\n    data = data.replace(/==?$/, \"\");\n  }\n\n  let output = \"\";\n  let buffer = 0;\n  let accumulatedBits = 0;\n\n  for (let i = 0; i < data.length; i++) {\n    buffer <<= 6;\n    buffer |= KEY_STRING.indexOf(data[i]);\n    accumulatedBits += 6;\n    if (accumulatedBits === 24) {\n      output += String.fromCharCode((buffer & 0xff0000) >> 16);\n      output += String.fromCharCode((buffer & 0xff00) >> 8);\n      output += String.fromCharCode(buffer & 0xff);\n      buffer = accumulatedBits = 0;\n    }\n  }\n  if (accumulatedBits === 12) {\n    buffer >>= 4;\n    output += String.fromCharCode(buffer);\n  } else if (accumulatedBits === 18) {\n    buffer >>= 2;\n    output += String.fromCharCode((buffer & 0xff00) >> 8);\n    output += String.fromCharCode(buffer & 0xff);\n  }\n  return output;\n}\n\n/**\n * Substitute for btoa since it's deprecated in node.\n * Does not do any input validation.\n *\n * @see https://github.com/jsdom/abab/blob/master/lib/btoa.js\n *\n * @param {string} str\n * @returns {string}\n */\nfunction binaryToAscii(str) {\n  let out = \"\";\n  for (let i = 0; i < str.length; i += 3) {\n    /** @type {[number, number, number, number]} */\n    const groupsOfSix = [undefined, undefined, undefined, undefined];\n    groupsOfSix[0] = str.charCodeAt(i) >> 2;\n    groupsOfSix[1] = (str.charCodeAt(i) & 0x03) << 4;\n    if (str.length > i + 1) {\n      groupsOfSix[1] |= str.charCodeAt(i + 1) >> 4;\n      groupsOfSix[2] = (str.charCodeAt(i + 1) & 0x0f) << 2;\n    }\n    if (str.length > i + 2) {\n      groupsOfSix[2] |= str.charCodeAt(i + 2) >> 6;\n      groupsOfSix[3] = str.charCodeAt(i + 2) & 0x3f;\n    }\n    for (let j = 0; j < groupsOfSix.length; j++) {\n      if (typeof groupsOfSix[j] === \"undefined\") {\n        out += \"=\";\n      } else {\n        out += KEY_STRING[groupsOfSix[j]];\n      }\n    }\n  }\n  return out;\n}\n", "export const UNDEFINED = -1;\nexport const HOLE = -2;\nexport const NAN = -3;\nexport const POSITIVE_INFINITY = -4;\nexport const NEGATIVE_INFINITY = -5;\nexport const NEGATIVE_ZERO = -6;\n", "import { decode64 } from './base64.js';\nimport {\n\tHOLE,\n\tNAN,\n\tNEGATIVE_INFINITY,\n\tNEGATIVE_ZERO,\n\tPOSITIVE_INFINITY,\n\tUNDEFINED\n} from './constants.js';\n\n/**\n * Revive a value serialized with `devalue.stringify`\n * @param {string} serialized\n * @param {Record<string, (value: any) => any>} [revivers]\n */\nexport function parse(serialized, revivers) {\n\treturn unflatten(JSON.parse(serialized), revivers);\n}\n\n/**\n * Revive a value flattened with `devalue.stringify`\n * @param {number | any[]} parsed\n * @param {Record<string, (value: any) => any>} [revivers]\n */\nexport function unflatten(parsed, revivers) {\n\tif (typeof parsed === 'number') return hydrate(parsed, true);\n\n\tif (!Array.isArray(parsed) || parsed.length === 0) {\n\t\tthrow new Error('Invalid input');\n\t}\n\n\tconst values = /** @type {any[]} */ (parsed);\n\n\tconst hydrated = Array(values.length);\n\n\t/**\n\t * @param {number} index\n\t * @returns {any}\n\t */\n\tfunction hydrate(index, standalone = false) {\n\t\tif (index === UNDEFINED) return undefined;\n\t\tif (index === NAN) return NaN;\n\t\tif (index === POSITIVE_INFINITY) return Infinity;\n\t\tif (index === NEGATIVE_INFINITY) return -Infinity;\n\t\tif (index === NEGATIVE_ZERO) return -0;\n\n\t\tif (standalone || typeof index !== 'number') {\n\t\t\tthrow new Error(`Invalid input`);\n\t\t}\n\n\t\tif (index in hydrated) return hydrated[index];\n\n\t\tconst value = values[index];\n\n\t\tif (!value || typeof value !== 'object') {\n\t\t\thydrated[index] = value;\n\t\t} else if (Array.isArray(value)) {\n\t\t\tif (typeof value[0] === 'string') {\n\t\t\t\tconst type = value[0];\n\n\t\t\t\tconst reviver = revivers?.[type];\n\t\t\t\tif (reviver) {\n\t\t\t\t\tlet i = value[1];\n\t\t\t\t\tif (typeof i !== 'number') {\n\t\t\t\t\t\t// if it's not a number, it was serialized by a builtin reviver\n\t\t\t\t\t\t// so we need to munge it into the format expected by a custom reviver\n\t\t\t\t\t\ti = values.push(value[1]) - 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn (hydrated[index] = reviver(hydrate(i)));\n\t\t\t\t}\n\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'Date':\n\t\t\t\t\t\thydrated[index] = new Date(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Set':\n\t\t\t\t\t\tconst set = new Set();\n\t\t\t\t\t\thydrated[index] = set;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 1) {\n\t\t\t\t\t\t\tset.add(hydrate(value[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Map':\n\t\t\t\t\t\tconst map = new Map();\n\t\t\t\t\t\thydrated[index] = map;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 2) {\n\t\t\t\t\t\t\tmap.set(hydrate(value[i]), hydrate(value[i + 1]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RegExp':\n\t\t\t\t\t\thydrated[index] = new RegExp(value[1], value[2]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\thydrated[index] = Object(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BigInt':\n\t\t\t\t\t\thydrated[index] = BigInt(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'null':\n\t\t\t\t\t\tconst obj = Object.create(null);\n\t\t\t\t\t\thydrated[index] = obj;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 2) {\n\t\t\t\t\t\t\tobj[value[i]] = hydrate(value[i + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Int8Array':\n\t\t\t\t\tcase 'Uint8Array':\n\t\t\t\t\tcase 'Uint8ClampedArray':\n\t\t\t\t\tcase 'Int16Array':\n\t\t\t\t\tcase 'Uint16Array':\n\t\t\t\t\tcase 'Int32Array':\n\t\t\t\t\tcase 'Uint32Array':\n\t\t\t\t\tcase 'Float32Array':\n\t\t\t\t\tcase 'Float64Array':\n\t\t\t\t\tcase 'BigInt64Array':\n\t\t\t\t\tcase 'BigUint64Array': {\n\t\t\t\t\t\tconst TypedArrayConstructor = globalThis[type];\n\t\t\t\t\t\tconst typedArray = new TypedArrayConstructor(hydrate(value[1]));\n\n\t\t\t\t\t\thydrated[index] =\n\t\t\t\t\t\t\tvalue[2] !== undefined\n\t\t\t\t\t\t\t\t? typedArray.subarray(value[2], value[3])\n\t\t\t\t\t\t\t\t: typedArray;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'ArrayBuffer': {\n\t\t\t\t\t\tconst base64 = value[1];\n\t\t\t\t\t\tconst arraybuffer = decode64(base64);\n\t\t\t\t\t\thydrated[index] = arraybuffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'Temporal.Duration':\n\t\t\t\t\tcase 'Temporal.Instant':\n\t\t\t\t\tcase 'Temporal.PlainDate':\n\t\t\t\t\tcase 'Temporal.PlainTime':\n\t\t\t\t\tcase 'Temporal.PlainDateTime':\n\t\t\t\t\tcase 'Temporal.PlainMonthDay':\n\t\t\t\t\tcase 'Temporal.PlainYearMonth':\n\t\t\t\t\tcase 'Temporal.ZonedDateTime': {\n\t\t\t\t\t\tconst temporalName = type.slice(9);\n\t\t\t\t\t\t// @ts-expect-error TS doesn't know about Temporal yet\n\t\t\t\t\t\thydrated[index] = Temporal[temporalName].from(value[1]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'URL': {\n\t\t\t\t\t\tconst url = new URL(value[1]);\n\t\t\t\t\t\thydrated[index] = url;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'URLSearchParams': {\n\t\t\t\t\t\tconst url = new URLSearchParams(value[1]);\n\t\t\t\t\t\thydrated[index] = url;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unknown type ${type}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst array = new Array(value.length);\n\t\t\t\thydrated[index] = array;\n\n\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\tconst n = value[i];\n\t\t\t\t\tif (n === HOLE) continue;\n\n\t\t\t\t\tarray[i] = hydrate(n);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t/** @type {Record<string, any>} */\n\t\t\tconst object = {};\n\t\t\thydrated[index] = object;\n\n\t\t\tfor (const key in value) {\n\t\t\t\tif (key === '__proto__') {\n\t\t\t\t\tthrow new Error('Cannot parse an object with a `__proto__` property');\n\t\t\t\t}\n\n\t\t\t\tconst n = value[key];\n\t\t\t\tobject[key] = hydrate(n);\n\t\t\t}\n\t\t}\n\n\t\treturn hydrated[index];\n\t}\n\n\treturn hydrate(0);\n}\n", "import {\n\tDevalueError,\n\tenumerable_symbols,\n\tget_type,\n\tis_plain_object,\n\tis_primitive,\n\tstringify_key,\n\tstringify_string\n} from './utils.js';\nimport {\n\tHOLE,\n\tNAN,\n\tNEGATIVE_INFINITY,\n\tNEGATIVE_ZERO,\n\tPOSITIVE_INFINITY,\n\tUNDEFINED\n} from './constants.js';\nimport { encode64 } from './base64.js';\n\n/**\n * Turn a value into a JSON string that can be parsed with `devalue.parse`\n * @param {any} value\n * @param {Record<string, (value: any) => any>} [reducers]\n */\nexport function stringify(value, reducers) {\n\t/** @type {any[]} */\n\tconst stringified = [];\n\n\t/** @type {Map<any, number>} */\n\tconst indexes = new Map();\n\n\t/** @type {Array<{ key: string, fn: (value: any) => any }>} */\n\tconst custom = [];\n\tif (reducers) {\n\t\tfor (const key of Object.getOwnPropertyNames(reducers)) {\n\t\t\tcustom.push({ key, fn: reducers[key] });\n\t\t}\n\t}\n\n\t/** @type {string[]} */\n\tconst keys = [];\n\n\tlet p = 0;\n\n\t/** @param {any} thing */\n\tfunction flatten(thing) {\n\t\tif (typeof thing === 'function') {\n\t\t\tthrow new DevalueError(`Cannot stringify a function`, keys);\n\t\t}\n\n\t\tif (thing === undefined) return UNDEFINED;\n\t\tif (Number.isNaN(thing)) return NAN;\n\t\tif (thing === Infinity) return POSITIVE_INFINITY;\n\t\tif (thing === -Infinity) return NEGATIVE_INFINITY;\n\t\tif (thing === 0 && 1 / thing < 0) return NEGATIVE_ZERO;\n\n\t\tif (indexes.has(thing)) return indexes.get(thing);\n\n\t\tconst index = p++;\n\t\tindexes.set(thing, index);\n\n\t\tfor (const { key, fn } of custom) {\n\t\t\tconst value = fn(thing);\n\t\t\tif (value) {\n\t\t\t\tstringified[index] = `[\"${key}\",${flatten(value)}]`;\n\t\t\t\treturn index;\n\t\t\t}\n\t\t}\n\n\t\tlet str = '';\n\n\t\tif (is_primitive(thing)) {\n\t\t\tstr = stringify_primitive(thing);\n\t\t} else {\n\t\t\tconst type = get_type(thing);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'String':\n\t\t\t\tcase 'Boolean':\n\t\t\t\t\tstr = `[\"Object\",${stringify_primitive(thing)}]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'BigInt':\n\t\t\t\t\tstr = `[\"BigInt\",${thing}]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Date':\n\t\t\t\t\tconst valid = !isNaN(thing.getDate());\n\t\t\t\t\tstr = `[\"Date\",\"${valid ? thing.toISOString() : ''}\"]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'URL':\n\t\t\t\t\tstr = `[\"URL\",${stringify_string(thing.toString())}]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'URLSearchParams':\n\t\t\t\t\tstr = `[\"URLSearchParams\",${stringify_string(thing.toString())}]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RegExp':\n\t\t\t\t\tconst { source, flags } = thing;\n\t\t\t\t\tstr = flags\n\t\t\t\t\t\t? `[\"RegExp\",${stringify_string(source)},\"${flags}\"]`\n\t\t\t\t\t\t: `[\"RegExp\",${stringify_string(source)}]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tstr = '[';\n\n\t\t\t\t\tfor (let i = 0; i < thing.length; i += 1) {\n\t\t\t\t\t\tif (i > 0) str += ',';\n\n\t\t\t\t\t\tif (i in thing) {\n\t\t\t\t\t\t\tkeys.push(`[${i}]`);\n\t\t\t\t\t\t\tstr += flatten(thing[i]);\n\t\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstr += HOLE;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += ']';\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Set':\n\t\t\t\t\tstr = '[\"Set\"';\n\n\t\t\t\t\tfor (const value of thing) {\n\t\t\t\t\t\tstr += `,${flatten(value)}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += ']';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Map':\n\t\t\t\t\tstr = '[\"Map\"';\n\n\t\t\t\t\tfor (const [key, value] of thing) {\n\t\t\t\t\t\tkeys.push(\n\t\t\t\t\t\t\t`.get(${is_primitive(key) ? stringify_primitive(key) : '...'})`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tstr += `,${flatten(key)},${flatten(value)}`;\n\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += ']';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Int8Array':\n\t\t\t\tcase 'Uint8Array':\n\t\t\t\tcase 'Uint8ClampedArray':\n\t\t\t\tcase 'Int16Array':\n\t\t\t\tcase 'Uint16Array':\n\t\t\t\tcase 'Int32Array':\n\t\t\t\tcase 'Uint32Array':\n\t\t\t\tcase 'Float32Array':\n\t\t\t\tcase 'Float64Array':\n\t\t\t\tcase 'BigInt64Array':\n\t\t\t\tcase 'BigUint64Array': {\n\t\t\t\t\t/** @type {import(\"./types.js\").TypedArray} */\n\t\t\t\t\tconst typedArray = thing;\n\t\t\t\t\tstr = '[\"' + type + '\",' + flatten(typedArray.buffer);\n\n\t\t\t\t\tconst a = thing.byteOffset;\n\t\t\t\t\tconst b = a + thing.byteLength;\n\n\t\t\t\t\t// handle subarrays\n\t\t\t\t\tif (a > 0 || b !== typedArray.buffer.byteLength) {\n\t\t\t\t\t\tconst m = +/(\\d+)/.exec(type)[1] / 8;\n\t\t\t\t\t\tstr += `,${a / m},${b / m}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += ']';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase 'ArrayBuffer': {\n\t\t\t\t\t/** @type {ArrayBuffer} */\n\t\t\t\t\tconst arraybuffer = thing;\n\t\t\t\t\tconst base64 = encode64(arraybuffer);\n\n\t\t\t\t\tstr = `[\"ArrayBuffer\",\"${base64}\"]`;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase 'Temporal.Duration':\n\t\t\t\tcase 'Temporal.Instant':\n\t\t\t\tcase 'Temporal.PlainDate':\n\t\t\t\tcase 'Temporal.PlainTime':\n\t\t\t\tcase 'Temporal.PlainDateTime':\n\t\t\t\tcase 'Temporal.PlainMonthDay':\n\t\t\t\tcase 'Temporal.PlainYearMonth':\n\t\t\t\tcase 'Temporal.ZonedDateTime':\n\t\t\t\t\tstr = `[\"${type}\",${stringify_string(thing.toString())}]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (!is_plain_object(thing)) {\n\t\t\t\t\t\tthrow new DevalueError(\n\t\t\t\t\t\t\t`Cannot stringify arbitrary non-POJOs`,\n\t\t\t\t\t\t\tkeys\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (enumerable_symbols(thing).length > 0) {\n\t\t\t\t\t\tthrow new DevalueError(\n\t\t\t\t\t\t\t`Cannot stringify POJOs with symbolic keys`,\n\t\t\t\t\t\t\tkeys\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Object.getPrototypeOf(thing) === null) {\n\t\t\t\t\t\tstr = '[\"null\"';\n\t\t\t\t\t\tfor (const key in thing) {\n\t\t\t\t\t\t\tkeys.push(stringify_key(key));\n\t\t\t\t\t\t\tstr += `,${stringify_string(key)},${flatten(thing[key])}`;\n\t\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += ']';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr = '{';\n\t\t\t\t\t\tlet started = false;\n\t\t\t\t\t\tfor (const key in thing) {\n\t\t\t\t\t\t\tif (started) str += ',';\n\t\t\t\t\t\t\tstarted = true;\n\t\t\t\t\t\t\tkeys.push(stringify_key(key));\n\t\t\t\t\t\t\tstr += `${stringify_string(key)}:${flatten(thing[key])}`;\n\t\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += '}';\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstringified[index] = str;\n\t\treturn index;\n\t}\n\n\tconst index = flatten(value);\n\n\t// special case \u2014\u00A0value is represented as a negative index\n\tif (index < 0) return `${index}`;\n\n\treturn `[${stringified.join(',')}]`;\n}\n\n/**\n * @param {any} thing\n * @returns {string}\n */\nfunction stringify_primitive(thing) {\n\tconst type = typeof thing;\n\tif (type === 'string') return stringify_string(thing);\n\tif (thing instanceof String) return stringify_string(thing.toString());\n\tif (thing === void 0) return UNDEFINED.toString();\n\tif (thing === 0 && 1 / thing < 0) return NEGATIVE_ZERO.toString();\n\tif (type === 'bigint') return `[\"BigInt\",\"${thing}\"]`;\n\treturn String(thing);\n}\n", "import { H as HYDRATION_ERROR, C as COMMENT_NODE, a as HYDRATION_END, g as get_next_sibling, b as HYDRATION_START, c as HYDRATION_START_ELSE, e as effect_tracking, d as get, s as source, r as render_effect, u as untrack, i as increment, q as queue_micro_task, f as internal_set, h as active_effect, j as block, k as branch, B as Batch, p as pause_effect, l as create_text, m as set_active_effect, n as set_active_reaction, o as set_component_context, t as handle_error, v as active_reaction, w as component_context, x as move_effect, y as effect_pending_updates, z as destroy_effect, A as invoke_error_boundary, D as svelte_boundary_reset_onerror, E as EFFECT_TRANSPARENT, F as EFFECT_PRESERVED, G as BOUNDARY_EFFECT, I as define_property, J as init_operations, K as get_first_child, L as hydration_failed, M as clear_text_content, N as array_from, O as component_root, P as push, Q as pop, R as set, S as LEGACY_PROPS, T as flushSync, U as mutable_source, V as setContext } from \"./context.js\";\nimport { i as is_passive_event, r as render } from \"./index2.js\";\nimport \"clsx\";\nimport \"./environment.js\";\nlet public_env = {};\nfunction set_private_env(environment) {\n}\nfunction set_public_env(environment) {\n  public_env = environment;\n}\nfunction hydration_mismatch(location) {\n  {\n    console.warn(`https://svelte.dev/e/hydration_mismatch`);\n  }\n}\nfunction svelte_boundary_reset_noop() {\n  {\n    console.warn(`https://svelte.dev/e/svelte_boundary_reset_noop`);\n  }\n}\nlet hydrating = false;\nfunction set_hydrating(value) {\n  hydrating = value;\n}\nlet hydrate_node;\nfunction set_hydrate_node(node) {\n  if (node === null) {\n    hydration_mismatch();\n    throw HYDRATION_ERROR;\n  }\n  return hydrate_node = node;\n}\nfunction hydrate_next() {\n  return set_hydrate_node(\n    /** @type {TemplateNode} */\n    get_next_sibling(hydrate_node)\n  );\n}\nfunction next(count = 1) {\n  if (hydrating) {\n    var i = count;\n    var node = hydrate_node;\n    while (i--) {\n      node = /** @type {TemplateNode} */\n      get_next_sibling(node);\n    }\n    hydrate_node = node;\n  }\n}\nfunction skip_nodes(remove = true) {\n  var depth = 0;\n  var node = hydrate_node;\n  while (true) {\n    if (node.nodeType === COMMENT_NODE) {\n      var data = (\n        /** @type {Comment} */\n        node.data\n      );\n      if (data === HYDRATION_END) {\n        if (depth === 0) return node;\n        depth -= 1;\n      } else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n        depth += 1;\n      }\n    }\n    var next2 = (\n      /** @type {TemplateNode} */\n      get_next_sibling(node)\n    );\n    if (remove) node.remove();\n    node = next2;\n  }\n}\nfunction createSubscriber(start) {\n  let subscribers = 0;\n  let version = source(0);\n  let stop;\n  return () => {\n    if (effect_tracking()) {\n      get(version);\n      render_effect(() => {\n        if (subscribers === 0) {\n          stop = untrack(() => start(() => increment(version)));\n        }\n        subscribers += 1;\n        return () => {\n          queue_micro_task(() => {\n            subscribers -= 1;\n            if (subscribers === 0) {\n              stop?.();\n              stop = void 0;\n              increment(version);\n            }\n          });\n        };\n      });\n    }\n  };\n}\nvar flags = EFFECT_TRANSPARENT | EFFECT_PRESERVED | BOUNDARY_EFFECT;\nfunction boundary(node, props, children) {\n  new Boundary(node, props, children);\n}\nclass Boundary {\n  /** @type {Boundary | null} */\n  parent;\n  #pending = false;\n  /** @type {TemplateNode} */\n  #anchor;\n  /** @type {TemplateNode | null} */\n  #hydrate_open = hydrating ? hydrate_node : null;\n  /** @type {BoundaryProps} */\n  #props;\n  /** @type {((anchor: Node) => void)} */\n  #children;\n  /** @type {Effect} */\n  #effect;\n  /** @type {Effect | null} */\n  #main_effect = null;\n  /** @type {Effect | null} */\n  #pending_effect = null;\n  /** @type {Effect | null} */\n  #failed_effect = null;\n  /** @type {DocumentFragment | null} */\n  #offscreen_fragment = null;\n  /** @type {TemplateNode | null} */\n  #pending_anchor = null;\n  #local_pending_count = 0;\n  #pending_count = 0;\n  #is_creating_fallback = false;\n  /**\n   * A source containing the number of pending async deriveds/expressions.\n   * Only created if `$effect.pending()` is used inside the boundary,\n   * otherwise updating the source results in needless `Batch.ensure()`\n   * calls followed by no-op flushes\n   * @type {Source<number> | null}\n   */\n  #effect_pending = null;\n  #effect_pending_update = () => {\n    if (this.#effect_pending) {\n      internal_set(this.#effect_pending, this.#local_pending_count);\n    }\n  };\n  #effect_pending_subscriber = createSubscriber(() => {\n    this.#effect_pending = source(this.#local_pending_count);\n    return () => {\n      this.#effect_pending = null;\n    };\n  });\n  /**\n   * @param {TemplateNode} node\n   * @param {BoundaryProps} props\n   * @param {((anchor: Node) => void)} children\n   */\n  constructor(node, props, children) {\n    this.#anchor = node;\n    this.#props = props;\n    this.#children = children;\n    this.parent = /** @type {Effect} */\n    active_effect.b;\n    this.#pending = !!this.#props.pending;\n    this.#effect = block(() => {\n      active_effect.b = this;\n      if (hydrating) {\n        const comment = this.#hydrate_open;\n        hydrate_next();\n        const server_rendered_pending = (\n          /** @type {Comment} */\n          comment.nodeType === COMMENT_NODE && /** @type {Comment} */\n          comment.data === HYDRATION_START_ELSE\n        );\n        if (server_rendered_pending) {\n          this.#hydrate_pending_content();\n        } else {\n          this.#hydrate_resolved_content();\n        }\n      } else {\n        var anchor = this.#get_anchor();\n        try {\n          this.#main_effect = branch(() => children(anchor));\n        } catch (error) {\n          this.error(error);\n        }\n        if (this.#pending_count > 0) {\n          this.#show_pending_snippet();\n        } else {\n          this.#pending = false;\n        }\n      }\n      return () => {\n        this.#pending_anchor?.remove();\n      };\n    }, flags);\n    if (hydrating) {\n      this.#anchor = hydrate_node;\n    }\n  }\n  #hydrate_resolved_content() {\n    try {\n      this.#main_effect = branch(() => this.#children(this.#anchor));\n    } catch (error) {\n      this.error(error);\n    }\n    this.#pending = false;\n  }\n  #hydrate_pending_content() {\n    const pending = this.#props.pending;\n    if (!pending) {\n      return;\n    }\n    this.#pending_effect = branch(() => pending(this.#anchor));\n    Batch.enqueue(() => {\n      var anchor = this.#get_anchor();\n      this.#main_effect = this.#run(() => {\n        Batch.ensure();\n        return branch(() => this.#children(anchor));\n      });\n      if (this.#pending_count > 0) {\n        this.#show_pending_snippet();\n      } else {\n        pause_effect(\n          /** @type {Effect} */\n          this.#pending_effect,\n          () => {\n            this.#pending_effect = null;\n          }\n        );\n        this.#pending = false;\n      }\n    });\n  }\n  #get_anchor() {\n    var anchor = this.#anchor;\n    if (this.#pending) {\n      this.#pending_anchor = create_text();\n      this.#anchor.before(this.#pending_anchor);\n      anchor = this.#pending_anchor;\n    }\n    return anchor;\n  }\n  /**\n   * Returns `true` if the effect exists inside a boundary whose pending snippet is shown\n   * @returns {boolean}\n   */\n  is_pending() {\n    return this.#pending || !!this.parent && this.parent.is_pending();\n  }\n  has_pending_snippet() {\n    return !!this.#props.pending;\n  }\n  /**\n   * @param {() => Effect | null} fn\n   */\n  #run(fn) {\n    var previous_effect = active_effect;\n    var previous_reaction = active_reaction;\n    var previous_ctx = component_context;\n    set_active_effect(this.#effect);\n    set_active_reaction(this.#effect);\n    set_component_context(this.#effect.ctx);\n    try {\n      return fn();\n    } catch (e) {\n      handle_error(e);\n      return null;\n    } finally {\n      set_active_effect(previous_effect);\n      set_active_reaction(previous_reaction);\n      set_component_context(previous_ctx);\n    }\n  }\n  #show_pending_snippet() {\n    const pending = (\n      /** @type {(anchor: Node) => void} */\n      this.#props.pending\n    );\n    if (this.#main_effect !== null) {\n      this.#offscreen_fragment = document.createDocumentFragment();\n      this.#offscreen_fragment.append(\n        /** @type {TemplateNode} */\n        this.#pending_anchor\n      );\n      move_effect(this.#main_effect, this.#offscreen_fragment);\n    }\n    if (this.#pending_effect === null) {\n      this.#pending_effect = branch(() => pending(this.#anchor));\n    }\n  }\n  /**\n   * Updates the pending count associated with the currently visible pending snippet,\n   * if any, such that we can replace the snippet with content once work is done\n   * @param {1 | -1} d\n   */\n  #update_pending_count(d) {\n    if (!this.has_pending_snippet()) {\n      if (this.parent) {\n        this.parent.#update_pending_count(d);\n      }\n      return;\n    }\n    this.#pending_count += d;\n    if (this.#pending_count === 0) {\n      this.#pending = false;\n      if (this.#pending_effect) {\n        pause_effect(this.#pending_effect, () => {\n          this.#pending_effect = null;\n        });\n      }\n      if (this.#offscreen_fragment) {\n        this.#anchor.before(this.#offscreen_fragment);\n        this.#offscreen_fragment = null;\n      }\n    }\n  }\n  /**\n   * Update the source that powers `$effect.pending()` inside this boundary,\n   * and controls when the current `pending` snippet (if any) is removed.\n   * Do not call from inside the class\n   * @param {1 | -1} d\n   */\n  update_pending_count(d) {\n    this.#update_pending_count(d);\n    this.#local_pending_count += d;\n    effect_pending_updates.add(this.#effect_pending_update);\n  }\n  get_effect_pending() {\n    this.#effect_pending_subscriber();\n    return get(\n      /** @type {Source<number>} */\n      this.#effect_pending\n    );\n  }\n  /** @param {unknown} error */\n  error(error) {\n    var onerror = this.#props.onerror;\n    let failed = this.#props.failed;\n    if (this.#is_creating_fallback || !onerror && !failed) {\n      throw error;\n    }\n    if (this.#main_effect) {\n      destroy_effect(this.#main_effect);\n      this.#main_effect = null;\n    }\n    if (this.#pending_effect) {\n      destroy_effect(this.#pending_effect);\n      this.#pending_effect = null;\n    }\n    if (this.#failed_effect) {\n      destroy_effect(this.#failed_effect);\n      this.#failed_effect = null;\n    }\n    if (hydrating) {\n      set_hydrate_node(\n        /** @type {TemplateNode} */\n        this.#hydrate_open\n      );\n      next();\n      set_hydrate_node(skip_nodes());\n    }\n    var did_reset = false;\n    var calling_on_error = false;\n    const reset = () => {\n      if (did_reset) {\n        svelte_boundary_reset_noop();\n        return;\n      }\n      did_reset = true;\n      if (calling_on_error) {\n        svelte_boundary_reset_onerror();\n      }\n      Batch.ensure();\n      this.#local_pending_count = 0;\n      if (this.#failed_effect !== null) {\n        pause_effect(this.#failed_effect, () => {\n          this.#failed_effect = null;\n        });\n      }\n      this.#pending = this.has_pending_snippet();\n      this.#main_effect = this.#run(() => {\n        this.#is_creating_fallback = false;\n        return branch(() => this.#children(this.#anchor));\n      });\n      if (this.#pending_count > 0) {\n        this.#show_pending_snippet();\n      } else {\n        this.#pending = false;\n      }\n    };\n    var previous_reaction = active_reaction;\n    try {\n      set_active_reaction(null);\n      calling_on_error = true;\n      onerror?.(error, reset);\n      calling_on_error = false;\n    } catch (error2) {\n      invoke_error_boundary(error2, this.#effect && this.#effect.parent);\n    } finally {\n      set_active_reaction(previous_reaction);\n    }\n    if (failed) {\n      queue_micro_task(() => {\n        this.#failed_effect = this.#run(() => {\n          Batch.ensure();\n          this.#is_creating_fallback = true;\n          try {\n            return branch(() => {\n              failed(\n                this.#anchor,\n                () => error,\n                () => reset\n              );\n            });\n          } catch (error2) {\n            invoke_error_boundary(\n              error2,\n              /** @type {Effect} */\n              this.#effect.parent\n            );\n            return null;\n          } finally {\n            this.#is_creating_fallback = false;\n          }\n        });\n      });\n    }\n  }\n}\nconst all_registered_events = /* @__PURE__ */ new Set();\nconst root_event_handles = /* @__PURE__ */ new Set();\nlet last_propagated_event = null;\nfunction handle_event_propagation(event) {\n  var handler_element = this;\n  var owner_document = (\n    /** @type {Node} */\n    handler_element.ownerDocument\n  );\n  var event_name = event.type;\n  var path = event.composedPath?.() || [];\n  var current_target = (\n    /** @type {null | Element} */\n    path[0] || event.target\n  );\n  last_propagated_event = event;\n  var path_idx = 0;\n  var handled_at = last_propagated_event === event && event.__root;\n  if (handled_at) {\n    var at_idx = path.indexOf(handled_at);\n    if (at_idx !== -1 && (handler_element === document || handler_element === /** @type {any} */\n    window)) {\n      event.__root = handler_element;\n      return;\n    }\n    var handler_idx = path.indexOf(handler_element);\n    if (handler_idx === -1) {\n      return;\n    }\n    if (at_idx <= handler_idx) {\n      path_idx = at_idx;\n    }\n  }\n  current_target = /** @type {Element} */\n  path[path_idx] || event.target;\n  if (current_target === handler_element) return;\n  define_property(event, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return current_target || owner_document;\n    }\n  });\n  var previous_reaction = active_reaction;\n  var previous_effect = active_effect;\n  set_active_reaction(null);\n  set_active_effect(null);\n  try {\n    var throw_error;\n    var other_errors = [];\n    while (current_target !== null) {\n      var parent_element = current_target.assignedSlot || current_target.parentNode || /** @type {any} */\n      current_target.host || null;\n      try {\n        var delegated = current_target[\"__\" + event_name];\n        if (delegated != null && (!/** @type {any} */\n        current_target.disabled || // DOM could've been updated already by the time this is reached, so we check this as well\n        // -> the target could not have been disabled because it emits the event in the first place\n        event.target === current_target)) {\n          delegated.call(current_target, event);\n        }\n      } catch (error) {\n        if (throw_error) {\n          other_errors.push(error);\n        } else {\n          throw_error = error;\n        }\n      }\n      if (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n        break;\n      }\n      current_target = parent_element;\n    }\n    if (throw_error) {\n      for (let error of other_errors) {\n        queueMicrotask(() => {\n          throw error;\n        });\n      }\n      throw throw_error;\n    }\n  } finally {\n    event.__root = handler_element;\n    delete event.currentTarget;\n    set_active_reaction(previous_reaction);\n    set_active_effect(previous_effect);\n  }\n}\nfunction assign_nodes(start, end) {\n  var effect = (\n    /** @type {Effect} */\n    active_effect\n  );\n  if (effect.nodes_start === null) {\n    effect.nodes_start = start;\n    effect.nodes_end = end;\n  }\n}\nfunction mount(component, options2) {\n  return _mount(component, options2);\n}\nfunction hydrate(component, options2) {\n  init_operations();\n  options2.intro = options2.intro ?? false;\n  const target = options2.target;\n  const was_hydrating = hydrating;\n  const previous_hydrate_node = hydrate_node;\n  try {\n    var anchor = (\n      /** @type {TemplateNode} */\n      get_first_child(target)\n    );\n    while (anchor && (anchor.nodeType !== COMMENT_NODE || /** @type {Comment} */\n    anchor.data !== HYDRATION_START)) {\n      anchor = /** @type {TemplateNode} */\n      get_next_sibling(anchor);\n    }\n    if (!anchor) {\n      throw HYDRATION_ERROR;\n    }\n    set_hydrating(true);\n    set_hydrate_node(\n      /** @type {Comment} */\n      anchor\n    );\n    const instance = _mount(component, { ...options2, anchor });\n    set_hydrating(false);\n    return (\n      /**  @type {Exports} */\n      instance\n    );\n  } catch (error) {\n    if (error instanceof Error && error.message.split(\"\\n\").some((line) => line.startsWith(\"https://svelte.dev/e/\"))) {\n      throw error;\n    }\n    if (error !== HYDRATION_ERROR) {\n      console.warn(\"Failed to hydrate: \", error);\n    }\n    if (options2.recover === false) {\n      hydration_failed();\n    }\n    init_operations();\n    clear_text_content(target);\n    set_hydrating(false);\n    return mount(component, options2);\n  } finally {\n    set_hydrating(was_hydrating);\n    set_hydrate_node(previous_hydrate_node);\n  }\n}\nconst document_listeners = /* @__PURE__ */ new Map();\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n  init_operations();\n  var registered_events = /* @__PURE__ */ new Set();\n  var event_handle = (events2) => {\n    for (var i = 0; i < events2.length; i++) {\n      var event_name = events2[i];\n      if (registered_events.has(event_name)) continue;\n      registered_events.add(event_name);\n      var passive = is_passive_event(event_name);\n      target.addEventListener(event_name, handle_event_propagation, { passive });\n      var n = document_listeners.get(event_name);\n      if (n === void 0) {\n        document.addEventListener(event_name, handle_event_propagation, { passive });\n        document_listeners.set(event_name, 1);\n      } else {\n        document_listeners.set(event_name, n + 1);\n      }\n    }\n  };\n  event_handle(array_from(all_registered_events));\n  root_event_handles.add(event_handle);\n  var component = void 0;\n  var unmount2 = component_root(() => {\n    var anchor_node = anchor ?? target.appendChild(create_text());\n    boundary(\n      /** @type {TemplateNode} */\n      anchor_node,\n      {\n        pending: () => {\n        }\n      },\n      (anchor_node2) => {\n        if (context) {\n          push({});\n          var ctx = (\n            /** @type {ComponentContext} */\n            component_context\n          );\n          ctx.c = context;\n        }\n        if (events) {\n          props.$$events = events;\n        }\n        if (hydrating) {\n          assign_nodes(\n            /** @type {TemplateNode} */\n            anchor_node2,\n            null\n          );\n        }\n        component = Component(anchor_node2, props) || {};\n        if (hydrating) {\n          active_effect.nodes_end = hydrate_node;\n          if (hydrate_node === null || hydrate_node.nodeType !== COMMENT_NODE || /** @type {Comment} */\n          hydrate_node.data !== HYDRATION_END) {\n            hydration_mismatch();\n            throw HYDRATION_ERROR;\n          }\n        }\n        if (context) {\n          pop();\n        }\n      }\n    );\n    return () => {\n      for (var event_name of registered_events) {\n        target.removeEventListener(event_name, handle_event_propagation);\n        var n = (\n          /** @type {number} */\n          document_listeners.get(event_name)\n        );\n        if (--n === 0) {\n          document.removeEventListener(event_name, handle_event_propagation);\n          document_listeners.delete(event_name);\n        } else {\n          document_listeners.set(event_name, n);\n        }\n      }\n      root_event_handles.delete(event_handle);\n      if (anchor_node !== anchor) {\n        anchor_node.parentNode?.removeChild(anchor_node);\n      }\n    };\n  });\n  mounted_components.set(component, unmount2);\n  return component;\n}\nlet mounted_components = /* @__PURE__ */ new WeakMap();\nfunction unmount(component, options2) {\n  const fn = mounted_components.get(component);\n  if (fn) {\n    mounted_components.delete(component);\n    return fn(options2);\n  }\n  return Promise.resolve();\n}\nfunction asClassComponent$1(component) {\n  return class extends Svelte4Component {\n    /** @param {any} options */\n    constructor(options2) {\n      super({\n        component,\n        ...options2\n      });\n    }\n  };\n}\nclass Svelte4Component {\n  /** @type {any} */\n  #events;\n  /** @type {Record<string, any>} */\n  #instance;\n  /**\n   * @param {ComponentConstructorOptions & {\n   *  component: any;\n   * }} options\n   */\n  constructor(options2) {\n    var sources = /* @__PURE__ */ new Map();\n    var add_source = (key, value) => {\n      var s = mutable_source(value, false, false);\n      sources.set(key, s);\n      return s;\n    };\n    const props = new Proxy(\n      { ...options2.props || {}, $$events: {} },\n      {\n        get(target, prop) {\n          return get(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n        },\n        has(target, prop) {\n          if (prop === LEGACY_PROPS) return true;\n          get(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n          return Reflect.has(target, prop);\n        },\n        set(target, prop, value) {\n          set(sources.get(prop) ?? add_source(prop, value), value);\n          return Reflect.set(target, prop, value);\n        }\n      }\n    );\n    this.#instance = (options2.hydrate ? hydrate : mount)(options2.component, {\n      target: options2.target,\n      anchor: options2.anchor,\n      props,\n      context: options2.context,\n      intro: options2.intro ?? false,\n      recover: options2.recover\n    });\n    if (!options2?.props?.$$host || options2.sync === false) {\n      flushSync();\n    }\n    this.#events = props.$$events;\n    for (const key of Object.keys(this.#instance)) {\n      if (key === \"$set\" || key === \"$destroy\" || key === \"$on\") continue;\n      define_property(this, key, {\n        get() {\n          return this.#instance[key];\n        },\n        /** @param {any} value */\n        set(value) {\n          this.#instance[key] = value;\n        },\n        enumerable: true\n      });\n    }\n    this.#instance.$set = /** @param {Record<string, any>} next */\n    (next2) => {\n      Object.assign(props, next2);\n    };\n    this.#instance.$destroy = () => {\n      unmount(this.#instance);\n    };\n  }\n  /** @param {Record<string, any>} props */\n  $set(props) {\n    this.#instance.$set(props);\n  }\n  /**\n   * @param {string} event\n   * @param {(...args: any[]) => any} callback\n   * @returns {any}\n   */\n  $on(event, callback) {\n    this.#events[event] = this.#events[event] || [];\n    const cb = (...args) => callback.call(this, ...args);\n    this.#events[event].push(cb);\n    return () => {\n      this.#events[event] = this.#events[event].filter(\n        /** @param {any} fn */\n        (fn) => fn !== cb\n      );\n    };\n  }\n  $destroy() {\n    this.#instance.$destroy();\n  }\n}\nlet read_implementation = null;\nfunction set_read_implementation(fn) {\n  read_implementation = fn;\n}\nfunction set_manifest(_) {\n}\nfunction asClassComponent(component) {\n  const component_constructor = asClassComponent$1(component);\n  const _render = (props, { context } = {}) => {\n    const result = render(component, { props, context });\n    const munged = Object.defineProperties(\n      /** @type {LegacyRenderResult & PromiseLike<LegacyRenderResult>} */\n      {},\n      {\n        css: {\n          value: { code: \"\", map: null }\n        },\n        head: {\n          get: () => result.head\n        },\n        html: {\n          get: () => result.body\n        },\n        then: {\n          /**\n           * this is not type-safe, but honestly it's the best I can do right now, and it's a straightforward function.\n           *\n           * @template TResult1\n           * @template [TResult2=never]\n           * @param { (value: LegacyRenderResult) => TResult1 } onfulfilled\n           * @param { (reason: unknown) => TResult2 } onrejected\n           */\n          value: (onfulfilled, onrejected) => {\n            {\n              const user_result = onfulfilled({\n                css: munged.css,\n                head: munged.head,\n                html: munged.html\n              });\n              return Promise.resolve(user_result);\n            }\n          }\n        }\n      }\n    );\n    return munged;\n  };\n  component_constructor.render = _render;\n  return component_constructor;\n}\nfunction Root($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    let {\n      stores,\n      page,\n      constructors,\n      components = [],\n      form,\n      data_0 = null,\n      data_1 = null,\n      data_2 = null\n    } = $$props;\n    {\n      setContext(\"__svelte__\", stores);\n    }\n    {\n      stores.page.set(page);\n    }\n    const Pyramid_2 = constructors[2];\n    if (constructors[1]) {\n      $$renderer2.push(\"<!--[-->\");\n      const Pyramid_0 = constructors[0];\n      $$renderer2.push(`<!---->`);\n      Pyramid_0($$renderer2, {\n        data: data_0,\n        form,\n        params: page.params,\n        children: ($$renderer3) => {\n          if (constructors[2]) {\n            $$renderer3.push(\"<!--[-->\");\n            const Pyramid_1 = constructors[1];\n            $$renderer3.push(`<!---->`);\n            Pyramid_1($$renderer3, {\n              data: data_1,\n              form,\n              params: page.params,\n              children: ($$renderer4) => {\n                $$renderer4.push(`<!---->`);\n                Pyramid_2($$renderer4, { data: data_2, form, params: page.params });\n                $$renderer4.push(`<!---->`);\n              },\n              $$slots: { default: true }\n            });\n            $$renderer3.push(`<!---->`);\n          } else {\n            $$renderer3.push(\"<!--[!-->\");\n            const Pyramid_1 = constructors[1];\n            $$renderer3.push(`<!---->`);\n            Pyramid_1($$renderer3, { data: data_1, form, params: page.params });\n            $$renderer3.push(`<!---->`);\n          }\n          $$renderer3.push(`<!--]-->`);\n        },\n        $$slots: { default: true }\n      });\n      $$renderer2.push(`<!---->`);\n    } else {\n      $$renderer2.push(\"<!--[!-->\");\n      const Pyramid_0 = constructors[0];\n      $$renderer2.push(`<!---->`);\n      Pyramid_0($$renderer2, { data: data_0, form, params: page.params });\n      $$renderer2.push(`<!---->`);\n    }\n    $$renderer2.push(`<!--]--> `);\n    {\n      $$renderer2.push(\"<!--[!-->\");\n    }\n    $$renderer2.push(`<!--]-->`);\n  });\n}\nconst root = asClassComponent(Root);\nconst options = {\n  app_template_contains_nonce: false,\n  async: false,\n  csp: { \"mode\": \"auto\", \"directives\": { \"upgrade-insecure-requests\": false, \"block-all-mixed-content\": false }, \"reportOnly\": { \"upgrade-insecure-requests\": false, \"block-all-mixed-content\": false } },\n  csrf_check_origin: true,\n  csrf_trusted_origins: [],\n  embedded: false,\n  env_public_prefix: \"PUBLIC_\",\n  env_private_prefix: \"\",\n  hash_routing: false,\n  hooks: null,\n  // added lazily, via `get_hooks`\n  preload_strategy: \"modulepreload\",\n  root,\n  service_worker: false,\n  service_worker_options: void 0,\n  templates: {\n    app: ({ head, body, assets, nonce, env }) => '<!doctype html>\\n<html lang=\"en\">\\n\t<head>\\n\t\t<meta charset=\"utf-8\" />\\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\\n\t\t' + head + '\\n\t</head>\\n\t<body data-sveltekit-preload-data=\"hover\">\\n\t\t<div style=\"display: contents\">' + body + \"</div>\\n\t</body>\\n</html>\\n\",\n    error: ({ status, message }) => '<!doctype html>\\n<html lang=\"en\">\\n\t<head>\\n\t\t<meta charset=\"utf-8\" />\\n\t\t<title>' + message + `</title>\n\n\t\t<style>\n\t\t\tbody {\n\t\t\t\t--bg: white;\n\t\t\t\t--fg: #222;\n\t\t\t\t--divider: #ccc;\n\t\t\t\tbackground: var(--bg);\n\t\t\t\tcolor: var(--fg);\n\t\t\t\tfont-family:\n\t\t\t\t\tsystem-ui,\n\t\t\t\t\t-apple-system,\n\t\t\t\t\tBlinkMacSystemFont,\n\t\t\t\t\t'Segoe UI',\n\t\t\t\t\tRoboto,\n\t\t\t\t\tOxygen,\n\t\t\t\t\tUbuntu,\n\t\t\t\t\tCantarell,\n\t\t\t\t\t'Open Sans',\n\t\t\t\t\t'Helvetica Neue',\n\t\t\t\t\tsans-serif;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\theight: 100vh;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\n\t\t\t.error {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tmax-width: 32rem;\n\t\t\t\tmargin: 0 1rem;\n\t\t\t}\n\n\t\t\t.status {\n\t\t\t\tfont-weight: 200;\n\t\t\t\tfont-size: 3rem;\n\t\t\t\tline-height: 1;\n\t\t\t\tposition: relative;\n\t\t\t\ttop: -0.05rem;\n\t\t\t}\n\n\t\t\t.message {\n\t\t\t\tborder-left: 1px solid var(--divider);\n\t\t\t\tpadding: 0 0 0 1rem;\n\t\t\t\tmargin: 0 0 0 1rem;\n\t\t\t\tmin-height: 2.5rem;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t}\n\n\t\t\t.message h1 {\n\t\t\t\tfont-weight: 400;\n\t\t\t\tfont-size: 1em;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\n\t\t\t@media (prefers-color-scheme: dark) {\n\t\t\t\tbody {\n\t\t\t\t\t--bg: #222;\n\t\t\t\t\t--fg: #ddd;\n\t\t\t\t\t--divider: #666;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"error\">\n\t\t\t<span class=\"status\">` + status + '</span>\\n\t\t\t<div class=\"message\">\\n\t\t\t\t<h1>' + message + \"</h1>\\n\t\t\t</div>\\n\t\t</div>\\n\t</body>\\n</html>\\n\"\n  },\n  version_hash: \"gz84tb\"\n};\nasync function get_hooks() {\n  let handle;\n  let handleFetch;\n  let handleError;\n  let handleValidationError;\n  let init;\n  let reroute;\n  let transport;\n  return {\n    handle,\n    handleFetch,\n    handleError,\n    handleValidationError,\n    init,\n    reroute,\n    transport\n  };\n}\nexport {\n  set_public_env as a,\n  set_read_implementation as b,\n  set_manifest as c,\n  get_hooks as g,\n  options as o,\n  public_env as p,\n  read_implementation as r,\n  set_private_env as s\n};\n", "import * as devalue from \"devalue\";\nimport { b as base64_encode, t as text_decoder, c as base64_decode } from \"./utils.js\";\nconst INVALIDATED_PARAM = \"x-sveltekit-invalidated\";\nconst TRAILING_SLASH_PARAM = \"x-sveltekit-trailing-slash\";\nfunction stringify(data, transport) {\n  const encoders = Object.fromEntries(Object.entries(transport).map(([k, v]) => [k, v.encode]));\n  return devalue.stringify(data, encoders);\n}\nfunction stringify_remote_arg(value, transport) {\n  if (value === void 0) return \"\";\n  const json_string = stringify(value, transport);\n  const bytes = new TextEncoder().encode(json_string);\n  return base64_encode(bytes).replaceAll(\"=\", \"\").replaceAll(\"+\", \"-\").replaceAll(\"/\", \"_\");\n}\nfunction parse_remote_arg(string, transport) {\n  if (!string) return void 0;\n  const json_string = text_decoder.decode(\n    // no need to add back `=` characters, atob can handle it\n    base64_decode(string.replaceAll(\"-\", \"+\").replaceAll(\"_\", \"/\"))\n  );\n  const decoders = Object.fromEntries(Object.entries(transport).map(([k, v]) => [k, v.decode]));\n  return devalue.parse(json_string, decoders);\n}\nfunction create_remote_cache_key(id, payload) {\n  return id + \"/\" + payload;\n}\nexport {\n  INVALIDATED_PARAM as I,\n  TRAILING_SLASH_PARAM as T,\n  stringify_remote_arg as a,\n  create_remote_cache_key as c,\n  parse_remote_arg as p,\n  stringify as s\n};\n", "export const manifest = (() => {\nfunction __memo(fn) {\n\tlet value;\n\treturn () => value ??= (value = fn());\n}\n\nreturn {\n\tappDir: \"_app\",\n\tappPath: \"_app\",\n\tassets: new Set([\"robots.txt\"]),\n\tmimeTypes: {\".txt\":\"text/plain\"},\n\t_: {\n\t\tclient: {start:\"_app/immutable/entry/start.C79mKIp-.js\",app:\"_app/immutable/entry/app.A0HmRYif.js\",imports:[\"_app/immutable/entry/start.C79mKIp-.js\",\"_app/immutable/chunks/D-pHkSQu.js\",\"_app/immutable/chunks/Ch_7xMJZ.js\",\"_app/immutable/chunks/DmKfOTeo.js\",\"_app/immutable/entry/app.A0HmRYif.js\",\"_app/immutable/chunks/DmKfOTeo.js\",\"_app/immutable/chunks/Ch_7xMJZ.js\",\"_app/immutable/chunks/DsnmJJEf.js\",\"_app/immutable/chunks/DlFo6P2L.js\",\"_app/immutable/chunks/B7pDVb1P.js\",\"_app/immutable/chunks/CcWUXD1I.js\"],stylesheets:[],fonts:[],uses_env_dynamic_public:false},\n\t\tnodes: [\n\t\t\t__memo(() => import('../output/server/nodes/0.js')),\n\t\t\t__memo(() => import('../output/server/nodes/1.js')),\n\t\t\t__memo(() => import('../output/server/nodes/2.js')),\n\t\t\t__memo(() => import('../output/server/nodes/3.js')),\n\t\t\t__memo(() => import('../output/server/nodes/4.js')),\n\t\t\t__memo(() => import('../output/server/nodes/5.js')),\n\t\t\t__memo(() => import('../output/server/nodes/6.js'))\n\t\t],\n\t\tremotes: {\n\t\t\t\n\t\t},\n\t\troutes: [\n\t\t\t{\n\t\t\t\tid: \"/\",\n\t\t\t\tpattern: /^\\/$/,\n\t\t\t\tparams: [],\n\t\t\t\tpage: { layouts: [0,], errors: [1,], leaf: 4 },\n\t\t\t\tendpoint: null\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"/create\",\n\t\t\t\tpattern: /^\\/create\\/?$/,\n\t\t\t\tparams: [],\n\t\t\t\tpage: { layouts: [0,2,], errors: [1,,], leaf: 5 },\n\t\t\t\tendpoint: null\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"/view\",\n\t\t\t\tpattern: /^\\/view\\/?$/,\n\t\t\t\tparams: [],\n\t\t\t\tpage: { layouts: [0,3,], errors: [1,,], leaf: 6 },\n\t\t\t\tendpoint: null\n\t\t\t}\n\t\t],\n\t\tprerendered_routes: new Set([]),\n\t\tmatchers: async () => {\n\t\t\t\n\t\t\treturn {  };\n\t\t},\n\t\tserver_assets: {}\n\t}\n}\n})();\n\nexport const prerendered = new Set([]);\n\nexport const base_path = \"\";\n", "// src/worker.js\nimport { Server } from \"../output/server/index.js\";\nimport { manifest, prerendered, base_path } from \"./manifest.js\";\n\n// ../../node_modules/.pnpm/worktop@0.8.0-next.18/node_modules/worktop/cache/index.mjs\nasync function e(e3, t2) {\n  let n2 = \"string\" != typeof t2 && \"HEAD\" === t2.method;\n  n2 && (t2 = new Request(t2, { method: \"GET\" }));\n  let r3 = await e3.match(t2);\n  return n2 && r3 && (r3 = new Response(null, r3)), r3;\n}\nfunction t(e3, t2, n2, o2) {\n  return (\"string\" == typeof t2 || \"GET\" === t2.method) && r(n2) && (n2.headers.has(\"Set-Cookie\") && (n2 = new Response(n2.body, n2)).headers.append(\"Cache-Control\", \"private=Set-Cookie\"), o2.waitUntil(e3.put(t2, n2.clone()))), n2;\n}\nvar n = /* @__PURE__ */ new Set([200, 203, 204, 300, 301, 404, 405, 410, 414, 501]);\nfunction r(e3) {\n  if (!n.has(e3.status)) return false;\n  if (~(e3.headers.get(\"Vary\") || \"\").indexOf(\"*\")) return false;\n  let t2 = e3.headers.get(\"Cache-Control\") || \"\";\n  return !/(private|no-cache|no-store)/i.test(t2);\n}\nfunction o(n2) {\n  return async function(r3, o2) {\n    let a = await e(n2, r3);\n    if (a) return a;\n    o2.defer((e3) => {\n      t(n2, r3, e3, o2);\n    });\n  };\n}\n\n// ../../node_modules/.pnpm/worktop@0.8.0-next.18/node_modules/worktop/cfw.cache/index.mjs\nvar s = caches.default;\nvar c = t.bind(0, s);\nvar r2 = e.bind(0, s);\nvar e2 = o.bind(0, s);\n\n// src/worker.js\nvar server = new Server(manifest);\nvar app_path = `/${manifest.appPath}`;\nvar immutable = `${app_path}/immutable/`;\nvar version_file = `${app_path}/version.json`;\nvar worker = {\n  async fetch(req, env, context) {\n    await server.init({ env });\n    let pragma = req.headers.get(\"cache-control\") || \"\";\n    let res = !pragma.includes(\"no-cache\") && await r2(req);\n    if (res) return res;\n    let { pathname, search } = new URL(req.url);\n    try {\n      pathname = decodeURIComponent(pathname);\n    } catch {\n    }\n    const stripped_pathname = pathname.replace(/\\/$/, \"\");\n    let is_static_asset = false;\n    const filename = stripped_pathname.slice(base_path.length + 1);\n    if (filename) {\n      is_static_asset = manifest.assets.has(filename) || manifest.assets.has(filename + \"/index.html\") || filename in manifest._.server_assets || filename + \"/index.html\" in manifest._.server_assets;\n    }\n    let location = pathname.at(-1) === \"/\" ? stripped_pathname : pathname + \"/\";\n    if (is_static_asset || prerendered.has(pathname) || pathname === version_file || pathname.startsWith(immutable)) {\n      res = await env.ASSETS.fetch(req);\n    } else if (location && prerendered.has(location)) {\n      if (search) location += search;\n      res = new Response(\"\", {\n        status: 308,\n        headers: {\n          location\n        }\n      });\n    } else {\n      res = await server.respond(req, {\n        // @ts-ignore\n        platform: { env, context, caches, cf: req.cf },\n        getClientAddress() {\n          return req.headers.get(\"cf-connecting-ip\");\n        }\n      });\n    }\n    pragma = res.headers.get(\"cache-control\") || \"\";\n    return pragma && res.status < 400 ? c(req, res, context) : res;\n  }\n};\nvar worker_default = worker;\nexport {\n  worker_default as default\n};\n"],
  "mappings": "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;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,aAAa;AAAA,QACX,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,aAAa;AAAA,QACX,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW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WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,aAAa;AAAA,QACX,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,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",
  "names": ["body", "text", "current", "base", "params", "key", "text_encoder", "text_decoder", "e", "t", "n", "o", "resolve", "context", "component", "error", "e", "e2", "flags", "derived", "v", "s", "immutable", "s2", "n", "key2", "key", "options", "controller", "next", "transparent", "root", "index", "pattern", "escaped", "start", "set", "stores", "clsx", "hash", "key", "c", "error", "component", "options", "flags", "v", "body", "body2", "r", "mode", "current", "parse", "serialize", "options", "decode", "index", "key", "encode", "e", "parseString", "options", "e", "key", "value", "parse", "cookies", "splitCookiesString", "start", "set", "__exports", "component", "fonts", "imports", "index", "stylesheets", "component_cache", "init__", "page", "set", "set", "layout_svelte_exports", "_layout", "page", "init_layout_svelte", "__exports", "component", "fonts", "imports", "index", "stylesheets", "component_cache", "init__", "layout_svelte_exports", "_layout", "page", "init_layout_svelte", "__exports", "component", "fonts", "imports", "index", "stylesheets", "component_cache", "init__", "clsx", "wrap", "resolve", "__exports", "component", "fonts", "imports", "index", "stylesheets", "component_cache", "init__", "coordinates", "equals", "start", "intersects", "t", "n", "r", "equals", "options", "RADIUS", "EXTENT", "METERS_PER_UNIT", "PROJECTIONS", "get", "add", "isEmpty", "add", "source", "get", "n", "r", "c", "c2", "match", "transformer", "disable", "add", "get", "makeProjection", "projection", "toEPSG4326", "source", "fromLonLat", "makeTransforms", "equals", "PROJECTIONS", "n", "extend", "equals", "index", "equals", "index", "once", "key", "key", "key", "source", "isEmpty", "transform", "source", "c", "e", "equivalent", "transform", "rotate", "init_transform", "init_transform", "transform", "extent", "source", "get", "scale", "init_transform", "coordinates", "rotate", "coordinates", "r", "o", "t", "n", "index", "n", "index", "squaredDistance", "linearRingss", "t", "isRing", "tmpPoint", "squaredDistance", "index", "coordinates", "coordinates", "coordinates", "extend", "coordinates", "ends", "extend", "layout", "index", "start", "coordinates", "squaredDistance", "coordinates", "extend", "squaredDistance", "index", "n", "coordinates", "linearRing", "extend", "index", "linearRings", "coordinates", "extend", "linearRingss", "index", "tmpTransform", "Feature_default", "init_Feature", "init_transform", "key", "extend", "transform", "get", "scale", "options", "get", "transform", "coordinates", "geometry", "Feature_default", "Geometry", "init_Feature", "source", "source", "init_Feature", "Feature_default", "options", "options", "coordinates", "geometry", "init_Feature", "get", "Feature_default", "isEmpty", "init_dist", "current", "shades", "index", "key", "current", "init_dist", "init_events", "init_dist", "init_util", "util", "e", "key", "array", "objectUtil", "t", "init_util", "json", "error", "init_util", "DIRTY", "params", "s", "key", "errorUtil", "params", "errorMap", "key", "index", "r", "init_types", "init_util", "error", "transform", "ctx", "options", "result", "issues", "elements", "element", "e", "processed", "DIRTY", "base", "ZodFirstPartyTypeKind", "DIRTY", "init_util", "init_types", "SvgSelectorSchema", "TargetSchema", "FeaturePropertiesSchema", "BodySchema", "AnnotationSchema", "AnnotationPageSchema", "AnnotationSchema", "AnnotationPageSchema", "FeaturePropertiesSchema", "GCPSchema", "GeoreferencedMapSchema", "GeoreferencedMapsSchema", "GeoreferencedMapSchema", "GeoreferencedMapsSchema", "GCPSchema", "init_dist", "defs", "key", "self", "v", "params", "unit", "root", "text", "parseString", "whitespace", "init_parser", "key", "v", "D2R", "init_util", "key", "init_util", "params", "key", "init_parser", "init_util", "v", "parse", "source", "init", "init", "names", "add", "n", "names", "get", "init_projections", "e", "sphere", "datum", "key", "key", "options", "nadgrid", "degreesToRadians", "index", "start", "r", "Projection", "error", "json", "init_projections", "source", "Z", "source", "inverse", "epsilon", "t", "v", "t", "array", "source", "transform", "wgs84", "init_transform", "transform", "key", "init_transform", "forward", "encode", "inverse", "A", "M", "C1", "D", "index", "set", "e", "n", "Point", "Point_default", "init_Point", "forward", "t", "s", "t", "init", "forward", "als", "c", "t", "inverse", "names", "r", "B", "r", "r", "r", "init", "n", "Z", "forward", "inverse", "names", "init", "names", "init_utm", "init", "forward", "inverse", "MAX_ITER", "names", "init", "forward", "inverse", "c", "names", "init", "forward", "A", "inverse", "ce", "c", "names", "init", "e2", "e", "forward", "I", "inverse", "names", "init", "D", "forward", "V", "u", "v", "inverse", "names", "init_projections", "init", "forward", "inverse", "names", "init", "forward", "u", "s", "inverse", "names", "e2", "e", "e2", "init", "forward", "inverse", "names", "init", "t", "forward", "inverse", "ab", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "c", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "MAX_ITER", "names", "init", "forward", "n", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "MAX_ITER", "V", "s", "c", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "A", "B", "s", "init", "forward", "e2", "c", "inverse", "M", "names", "init", "forward", "inverse", "names", "init", "forward", "t", "r", "s", "inverse", "names", "start", "init", "forward", "inverse", "t", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "r", "names", "init", "forward", "r", "inverse", "names", "init", "forward", "inverse", "names", "init", "c", "E", "s", "names", "proj4", "init_utm", "proj4", "init_Point", "init_transform", "Point_default", "transform", "init_dist", "init_dist", "init_dist", "e", "c", "scale", "sum", "n", "init_util", "c", "u3", "C1", "init_util", "u", "init_util", "fin", "fin2", "c", "u3", "bc", "ca", "ab", "scale", "_8", "_16", "u", "bct", "cat", "abt", "init_util", "ab", "bc", "_8", "_8b", "_16", "_48", "fin", "init_util", "init_shared", "e", "v", "start", "edg", "init_dist", "init_shared", "init_shared", "init_shared", "init_shared", "init_shared", "init_shared", "ImageServiceSchema", "ensureArray", "init_convert", "init_shared", "init_convert", "ensureArray", "ImageServiceSchema", "Canvas3Schema", "init_shared", "init_convert", "ensureArray", "ImageServiceSchema", "ImageSchema", "Canvas3Schema", "init_tiles", "init_tiles", "init_tiles", "init_convert", "init_convert", "init_convert", "init_iiif", "init_dist", "init_iiif", "init_vertex_shader_glsl", "init_fragment_shader_glsl", "init_vertex_shader_glsl", "init_fragment_shader_glsl", "c", "init_webgl2", "init_dist", "init_events", "init_dist", "t", "state", "options", "start", "options", "canvasPool", "context", "options", "state", "self", "error", "error", "resolve", "e", "state", "options", "element", "createOrUpdate", "u2", "render", "context", "width", "height", "xPos", "yPos", "source", "c", "key", "bc", "da", "ab", "cd", "Tile_default", "init_Tile", "options", "source", "render", "state", "e", "scale", "key", "options", "createOrUpdate", "hash", "s", "context", "toString", "fromString", "cache", "key", "c", "r", "init_color", "Event_default", "init_Event", "context", "EventType_default", "init_EventType", "index", "render", "context", "key", "Layer_default", "init_Layer", "init_color", "init_Event", "init_EventType", "transform", "context", "equals", "equivalent", "Event_default", "EventType_default", "source", "set", "init_Tile", "init_Layer", "Layer_default", "options", "createOrUpdate", "cacheSize", "Tile_default", "viewport", "context", "dx", "dy", "i", "equals", "frameState", "none", "n", "t", "init_common", "options", "none", "equals", "init_common", "key", "state", "start", "userProjection", "options", "state", "array", "Layer_default", "init_Layer", "init_EventType", "options", "source", "array", "layerState", "EventType_default", "init_Layer", "Layer_default", "options", "cacheSize", "Tile_default", "init_Tile", "options", "init_common", "options", "createOrUpdate", "scale", "viewport", "wrapX", "options", "get", "init_common", "match", "hash", "index", "options", "get", "self", "resolve", "state", "Tile_default", "init_Tile", "options", "key", "scale", "wrapX", "init_Tile", "Tile_default", "options", "key", "init_Tile", "options", "key", "Tile_default", "z", "x", "y", "pixelRatio", "render", "get", "options", "getCacheKey", "init_color", "key", "pattern", "get", "pattern", "init_color", "context", "resolve", "toString", "pattern", "get", "init_color", "init_canvas", "init_Image", "options", "scale", "init_color", "init_canvas", "init_Image", "options", "scale", "context", "r2", "e", "aa", "bb", "add", "options", "scale", "init_color", "options", "get", "options", "options", "text", "noop", "initialMode", "fromLonLat", "error", "params", "key", "base", "init_dist", "init_Tile", "Tile_default", "page_svelte_exports", "_page", "init_page_svelte", "__exports", "component", "fonts", "imports", "index", "stylesheets", "component_cache", "init__", "page_svelte_exports", "_page", "init_page_svelte", "__exports", "component", "fonts", "imports", "index", "stylesheets", "component_cache", "init__", "body", "init", "body", "headers", "key", "custom", "str", "value", "key", "names", "stringify", "v", "array", "keys", "params", "c", "hydrate", "index", "set", "array", "n", "key", "custom", "key", "index", "value", "stringify_primitive", "source", "flags", "start", "error", "e", "reset", "error2", "component", "context", "n", "key", "s", "component", "context", "stores", "page", "head", "body", "assets", "init", "stringify", "v", "text_decoder", "v", "IN_WEBCONTAINER", "match", "escape_html", "page", "state", "manifest", "e", "has_data_suffix", "add_data_suffix", "strip_data_suffix", "has_resolution_suffix", "add_resolution_suffix", "strip_resolution_suffix", "attributes", "server", "init2", "current2", "e", "deferred", "transform", "next", "index", "state", "load", "current2", "init2", "mode", "proxy", "get", "text_decoder", "hash2", "replacements", "match", "escape_html", "c", "text_encoder", "source", "v", "params", "s2", "manifest", "n", "branch", "stylesheets", "fonts", "r", "head2", "head", "attributes", "add_resolution_suffix", "hydrate", "cache", "controller", "page", "stringify", "add_data_suffix", "init3", "manifest", "state", "has_resolution_suffix", "has_data_suffix", "strip_resolution_suffix", "strip_data_suffix", "add_data_suffix", "add_resolution_suffix", "match", "e", "v", "page", "n", "IN_WEBCONTAINER", "controller", "r", "s", "r2", "context"]
}
