import type { Point, LineString, Ring, TypedLine, TypedLineString, TypedRing, Bbox } from '@allmaps/types';
import type { GeneralGcp, RefinementOptions } from './types.js';
export declare const defaultRefinementOptions: RefinementOptions;
export declare function refineLineString(lineString: LineString, refinementFunction: (p: Point) => Point, refinementOptions: RefinementOptions): TypedLineString<GeneralGcp>;
export declare function refineRing(ring: Ring, refinementFunction: (p: Point) => Point, refinementOptions: RefinementOptions): TypedRing<GeneralGcp>;
export declare function newMidGcpIfShouldSplitGcpLine(gcpLine: TypedLine<GeneralGcp>, refinementFunction: (p: Point) => Point, refinementOptions: RefinementOptions, depth: number): GeneralGcp | undefined;
export declare function getSourceRefinementResolution(sourceBbox: Bbox, refinementFunction: (p: Point) => Point, refinementOptions: RefinementOptions): number | undefined;
export declare function gcpsToGcpLines(gcps: GeneralGcp[], close?: boolean): TypedLine<GeneralGcp>[];
export declare function gcpLinesToGcps(lines: TypedLine<GeneralGcp>[], close?: boolean): GeneralGcp[];
