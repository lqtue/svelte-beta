import { BaseTransformation } from './BaseTransformation.js';
import type { Point } from '@allmaps/types';
export declare class Straight extends BaseTransformation {
    weightsArrays?: {
        scale: number;
        sourcePointsCenter: Point;
        destinationPointsCenter: Point;
        translation: Point;
    };
    constructor(sourcePoints: Point[], destinationPoints: Point[]);
    /** Solve the x and y components jointly.
     *
     * This computes the corresponding Helmert transform and get the scale from it.
     */
    solve(): void;
    evaluateFunction(newSourcePoint: Point): Point;
    evaluatePartialDerivativeX(_newSourcePoint: Point): Point;
    evaluatePartialDerivativeY(_newSourcePoint: Point): Point;
}
