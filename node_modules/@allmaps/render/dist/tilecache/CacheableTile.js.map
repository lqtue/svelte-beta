{"version":3,"file":"CacheableTile.js","sources":["../../src/tilecache/CacheableTile.ts"],"sourcesContent":["import { FetchableTile } from './FetchableTile.js'\n\nimport type { Tile, ImageRequest, FetchFn } from '@allmaps/types'\n\n/**\n * Class for tiles that can be cached.\n */\nexport abstract class CacheableTile<D> extends EventTarget {\n  readonly tile: Tile\n  readonly imageRequest: ImageRequest\n  readonly tileUrl: string\n  readonly tileKey: string\n  readonly fetchFn?: FetchFn\n\n  protected abortController: AbortController\n\n  protected data?: D\n\n  /**\n   * Creates an instance of CacheableTile.\n   *\n   * @constructor\n   * @param fetchableTile\n   * @param fetchFn - Optional fetch function to use\n   */\n  constructor(fetchableTile: FetchableTile, fetchFn?: FetchFn) {\n    super()\n\n    this.tile = fetchableTile.tile\n    this.imageRequest = fetchableTile.imageRequest\n    this.tileUrl = fetchableTile.tileUrl\n    this.tileKey = fetchableTile.tileKey\n    this.fetchFn = fetchFn\n\n    this.abortController = new AbortController()\n  }\n\n  abstract fetch(): Promise<D | undefined>\n\n  /**\n   * Whether a tile has fetched its data\n   *\n   * @returns\n   */\n  isCachedTile(): this is CachedTile<D> {\n    return this.data !== undefined\n  }\n\n  /**\n   * Abort the fetch\n   */\n  abort() {\n    if (!this.abortController.signal.aborted) {\n      this.abortController.abort()\n    }\n  }\n}\n\n/**\n * Class for tiles that are cached, i.e. their data has been fetched and processed\n */\nexport abstract class CachedTile<D> extends CacheableTile<D> {\n  declare data: D\n}\n"],"names":[],"mappings":"AAOO,MAAe,sBAAyB,YAAY;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEC;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASV,YAAY,eAA8B,SAAmB;AAC3D,UAAA;AAEA,SAAK,OAAO,cAAc;AAC1B,SAAK,eAAe,cAAc;AAClC,SAAK,UAAU,cAAc;AAC7B,SAAK,UAAU,cAAc;AAC7B,SAAK,UAAU;AAEf,SAAK,kBAAkB,IAAI,gBAAA;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,eAAsC;AACpC,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ;AACN,QAAI,CAAC,KAAK,gBAAgB,OAAO,SAAS;AACxC,WAAK,gBAAgB,MAAA;AAAA,IACvB;AAAA,EACF;AACF;"}