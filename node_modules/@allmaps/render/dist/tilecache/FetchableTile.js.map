{"version":3,"file":"FetchableTile.js","sources":["../../src/tilecache/FetchableTile.ts"],"sourcesContent":["import { WarpedMapWithImageInfo } from '../maps/WarpedMap.js'\nimport { fetchableTileKey, tileKey } from '../shared/tiles.js'\n\nimport type { Tile, ImageRequest } from '@allmaps/types'\n\n/**\n * Class for tiles that can be fetched.\n */\nexport class FetchableTile {\n  readonly mapId: string\n  readonly tile: Tile\n  readonly imageRequest: ImageRequest\n  readonly tileUrl: string\n  readonly tileKey: string\n  readonly fetchableTileKey: string\n\n  /**\n   * Creates an instance of FetchableTile.\n   *\n   * @constructor\n   * @param tile - the tile\n   * @param warpedMap - A WarpedMap with fetched image information\n   */\n  constructor(tile: Tile, warpedMap: WarpedMapWithImageInfo) {\n    this.mapId = warpedMap.mapId\n    this.tile = tile\n\n    const imageRequest = warpedMap.parsedImage.getTileImageRequest(\n      tile.tileZoomLevel,\n      tile.column,\n      tile.row\n    )\n    this.imageRequest = imageRequest\n    this.tileUrl = warpedMap.parsedImage.getImageUrl(imageRequest)\n    this.tileKey = tileKey(tile)\n    this.fetchableTileKey = fetchableTileKey(this)\n  }\n}\n"],"names":[],"mappings":";AAQO,MAAM,cAAc;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAST,YAAY,MAAY,WAAmC;AACzD,SAAK,QAAQ,UAAU;AACvB,SAAK,OAAO;AAEZ,UAAM,eAAe,UAAU,YAAY;AAAA,MACzC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IAAA;AAEP,SAAK,eAAe;AACpB,SAAK,UAAU,UAAU,YAAY,YAAY,YAAY;AAC7D,SAAK,UAAU,QAAQ,IAAI;AAC3B,SAAK,mBAAmB,iBAAiB,IAAI;AAAA,EAC/C;AACF;"}