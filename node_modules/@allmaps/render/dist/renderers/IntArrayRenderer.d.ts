import { BaseRenderer } from './BaseRenderer.js';
import { Viewport } from '../viewport/Viewport.js';
import { Renderer, GetImageData, GetImageDataValue, GetImageDataSize, IntArrayRendererOptions } from '../shared/types.js';
import { WarpedMap } from '../maps/WarpedMap.js';

/**
 * Class that renders WarpedMaps to an IntArray
 */
export declare class IntArrayRenderer<D> extends BaseRenderer<WarpedMap, D> implements Renderer {
    getImageDataValue: GetImageDataValue<D>;
    getImageDataSize: GetImageDataSize<D>;
    constructor(getImageData: GetImageData<D>, getImageDataValue: GetImageDataValue<D>, getImageDataSize: GetImageDataSize<D>, options?: Partial<IntArrayRendererOptions>);
    /**
     * Render the map for a given viewport.
     *
     * @param viewport - the viewport to render
     */
    render(viewport: Viewport): Promise<Uint8ClampedArray>;
}
