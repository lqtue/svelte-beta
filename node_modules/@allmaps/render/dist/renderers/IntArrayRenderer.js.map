{"version":3,"file":"IntArrayRenderer.js","sources":["../../src/renderers/IntArrayRenderer.ts"],"sourcesContent":["import { BaseRenderer } from './BaseRenderer.js'\nimport { Viewport } from '../viewport/Viewport.js'\nimport { createWarpedMapFactory } from '../maps/WarpedMap.js'\nimport { CacheableIntArrayTile } from '../tilecache/CacheableIntArrayTile.js'\n\nimport type {\n  Renderer,\n  GetImageData,\n  GetImageDataValue,\n  GetImageDataSize,\n  IntArrayRendererOptions\n} from '../shared/types.js'\n\nimport type { WarpedMap } from '../maps/WarpedMap.js'\n\nimport { renderToIntArray } from '../shared/render-to-int-array.js'\n\nconst CHANNELS = 4\n\n/**\n * Class that renders WarpedMaps to an IntArray\n */\nexport class IntArrayRenderer<D>\n  extends BaseRenderer<WarpedMap, D>\n  implements Renderer\n{\n  getImageDataValue: GetImageDataValue<D>\n  getImageDataSize: GetImageDataSize<D>\n\n  constructor(\n    getImageData: GetImageData<D>,\n    getImageDataValue: GetImageDataValue<D>,\n    getImageDataSize: GetImageDataSize<D>,\n    options?: Partial<IntArrayRendererOptions>\n  ) {\n    super(\n      CacheableIntArrayTile.createFactory(getImageData),\n      createWarpedMapFactory(),\n      options\n    )\n    this.getImageDataValue = getImageDataValue\n    this.getImageDataSize = getImageDataSize\n  }\n\n  /**\n   * Render the map for a given viewport.\n   *\n   * @param viewport - the viewport to render\n   */\n  async render(viewport: Viewport): Promise<Uint8ClampedArray> {\n    this.viewport = viewport\n\n    await Promise.allSettled(this.loadMissingImageInfosInViewport())\n\n    this.assureProjection()\n\n    this.requestFetchableTiles()\n    await this.tileCache.allRequestedTilesLoaded()\n\n    const intArray = new Uint8ClampedArray(\n      this.viewport.canvasSize[0] * this.viewport.canvasSize[1] * CHANNELS\n    )\n\n    await renderToIntArray(\n      this.warpedMapList,\n      this.tileCache,\n      this.viewport,\n      this.getImageDataValue,\n      this.getImageDataSize,\n      intArray\n    )\n\n    return intArray\n  }\n}\n"],"names":[],"mappings":";;;;AAiBA,MAAM,WAAW;AAKV,MAAM,yBACH,aAEV;AAAA,EACE;AAAA,EACA;AAAA,EAEA,YACE,cACA,mBACA,kBACA,SACA;AACA;AAAA,MACE,sBAAsB,cAAc,YAAY;AAAA,MAChD,uBAAA;AAAA,MACA;AAAA,IAAA;AAEF,SAAK,oBAAoB;AACzB,SAAK,mBAAmB;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,OAAO,UAAgD;AAC3D,SAAK,WAAW;AAEhB,UAAM,QAAQ,WAAW,KAAK,gCAAA,CAAiC;AAE/D,SAAK,iBAAA;AAEL,SAAK,sBAAA;AACL,UAAM,KAAK,UAAU,wBAAA;AAErB,UAAM,WAAW,IAAI;AAAA,MACnB,KAAK,SAAS,WAAW,CAAC,IAAI,KAAK,SAAS,WAAW,CAAC,IAAI;AAAA,IAAA;AAG9D,UAAM;AAAA,MACJ,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,IAAA;AAGF,WAAO;AAAA,EACT;AACF;"}