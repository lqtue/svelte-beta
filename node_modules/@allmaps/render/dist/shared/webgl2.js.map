{"version":3,"file":"webgl2.js","sources":["../../src/shared/webgl2.ts"],"sourcesContent":["export function createShader(\n  gl: WebGL2RenderingContext,\n  type:\n    | WebGLRenderingContextBase['VERTEX_SHADER']\n    | WebGLRenderingContextBase['FRAGMENT_SHADER'],\n  source: string\n): WebGLShader {\n  // TODO: are all unneeded webgl objects properly deleted?\n\n  const shader = gl.createShader(type)\n  if (shader) {\n    gl.shaderSource(shader, source)\n    gl.compileShader(shader)\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS)\n    if (success) {\n      return shader\n    } else {\n      const message = gl.getShaderInfoLog(shader)\n      gl.deleteShader(shader)\n      throw new Error('Failed to compile shader: ' + message)\n    }\n  } else {\n    throw new Error('Failed to create shader')\n  }\n}\n\nexport function createProgram(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  fragmentShader: WebGLShader\n): WebGLProgram {\n  // TODO: are all unneeded webgl objects properly deleted?\n\n  const program = gl.createProgram()\n  if (program) {\n    gl.attachShader(program, vertexShader)\n    gl.attachShader(program, fragmentShader)\n    gl.linkProgram(program)\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS)\n    if (success) {\n      return program\n    } else {\n      const message = gl.getProgramInfoLog(program)\n      gl.deleteProgram(program)\n      throw new Error('Failed to link program: ' + message)\n    }\n  } else {\n    throw new Error('Failed to create program')\n  }\n}\n\nexport function createBuffer(\n  gl: WebGL2RenderingContext,\n  program: WebGLProgram,\n  data: Float32Array,\n  size: number,\n  name: string\n) {\n  const buffer = gl.createBuffer()\n\n  if (!buffer) {\n    throw new Error('Failed to create buffer')\n  }\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW)\n\n  const type = gl.FLOAT\n  const normalize = false\n  const stride = 0\n  const offset = 0\n\n  const positionAttributeLocation = gl.getAttribLocation(program, name)\n  gl.vertexAttribPointer(\n    positionAttributeLocation,\n    size,\n    type,\n    normalize,\n    stride,\n    offset\n  )\n  gl.enableVertexAttribArray(positionAttributeLocation)\n\n  return buffer\n}\n"],"names":[],"mappings":"AAAO,SAAS,aACd,IACA,MAGA,QACa;AAGb,QAAM,SAAS,GAAG,aAAa,IAAI;AACnC,MAAI,QAAQ;AACV,OAAG,aAAa,QAAQ,MAAM;AAC9B,OAAG,cAAc,MAAM;AACvB,UAAM,UAAU,GAAG,mBAAmB,QAAQ,GAAG,cAAc;AAC/D,QAAI,SAAS;AACX,aAAO;AAAA,IACT,OAAO;AACL,YAAM,UAAU,GAAG,iBAAiB,MAAM;AAC1C,SAAG,aAAa,MAAM;AACtB,YAAM,IAAI,MAAM,+BAA+B,OAAO;AAAA,IACxD;AAAA,EACF,OAAO;AACL,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AACF;AAEO,SAAS,cACd,IACA,cACA,gBACc;AAGd,QAAM,UAAU,GAAG,cAAA;AACnB,MAAI,SAAS;AACX,OAAG,aAAa,SAAS,YAAY;AACrC,OAAG,aAAa,SAAS,cAAc;AACvC,OAAG,YAAY,OAAO;AACtB,UAAM,UAAU,GAAG,oBAAoB,SAAS,GAAG,WAAW;AAC9D,QAAI,SAAS;AACX,aAAO;AAAA,IACT,OAAO;AACL,YAAM,UAAU,GAAG,kBAAkB,OAAO;AAC5C,SAAG,cAAc,OAAO;AACxB,YAAM,IAAI,MAAM,6BAA6B,OAAO;AAAA,IACtD;AAAA,EACF,OAAO;AACL,UAAM,IAAI,MAAM,0BAA0B;AAAA,EAC5C;AACF;AAEO,SAAS,aACd,IACA,SACA,MACA,MACA,MACA;AACA,QAAM,SAAS,GAAG,aAAA;AAElB,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AAEA,KAAG,WAAW,GAAG,cAAc,MAAM;AACrC,KAAG,WAAW,GAAG,cAAc,MAAM,GAAG,WAAW;AAEnD,QAAM,OAAO,GAAG;AAChB,QAAM,YAAY;AAClB,QAAM,SAAS;AACf,QAAM,SAAS;AAEf,QAAM,4BAA4B,GAAG,kBAAkB,SAAS,IAAI;AACpE,KAAG;AAAA,IACD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEF,KAAG,wBAAwB,yBAAyB;AAEpD,SAAO;AACT;"}