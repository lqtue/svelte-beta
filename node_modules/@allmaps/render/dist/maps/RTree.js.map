{"version":3,"file":"RTree.js","sources":["../../src/maps/RTree.ts"],"sourcesContent":["// TODO: consider using\n// https://github.com/mourner/flatbush\nimport RBush from 'rbush'\n\nimport inside from 'point-in-polygon-hao'\n\nimport { computeBbox } from '@allmaps/stdlib'\n\nimport type { Bbox, Point, Polygon } from '@allmaps/types'\n\nconst DEFAULT_FILTER_INSIDE_POLYGON = true\n\ntype RTreeItem = {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n  id: string\n}\n/**\n * 2D spatial index for polygons\n */\nexport class RTree {\n  rbush: RBush<RTreeItem> = new RBush()\n\n  polygonsById: Map<string, Polygon> = new Map()\n  bboxesById: Map<string, Bbox> = new Map()\n  itemsById: Map<string, RTreeItem> = new Map()\n\n  addItem(id: string, polygon: Polygon) {\n    this.removeItem(id)\n\n    const bbox = computeBbox(polygon)\n\n    const item = {\n      minX: bbox[0],\n      minY: bbox[1],\n      maxX: bbox[2],\n      maxY: bbox[3],\n      id\n    }\n\n    this.polygonsById.set(id, polygon)\n    this.bboxesById.set(id, bbox)\n    this.itemsById.set(id, item)\n\n    this.rbush.insert(item)\n  }\n\n  removeItem(id: string) {\n    const item = this.itemsById.get(id)\n\n    if (item) {\n      this.rbush.remove(item)\n\n      this.polygonsById.delete(id)\n      this.bboxesById.delete(id)\n      this.itemsById.delete(id)\n    }\n  }\n\n  clear() {\n    this.polygonsById.clear()\n    this.bboxesById.clear()\n    this.itemsById.clear()\n\n    this.rbush.clear()\n  }\n\n  private search(\n    minX: number,\n    minY: number,\n    maxX: number,\n    maxY: number\n  ): RTreeItem[] {\n    return this.rbush.search({\n      minX,\n      minY,\n      maxX,\n      maxY\n    })\n  }\n\n  getBbox(id: string) {\n    return this.bboxesById.get(id)\n  }\n\n  getPolygon(id: string) {\n    return this.polygonsById.get(id)\n  }\n\n  searchFromBbox(bbox: Bbox): string[] {\n    const [minX, minY, maxX, maxY] = bbox\n    return this.search(minX, minY, maxX, maxY).map((item) => item.id)\n  }\n\n  searchFromPoint(\n    point: Point,\n    filterInsidePolygon = DEFAULT_FILTER_INSIDE_POLYGON\n  ): string[] {\n    const [minX, minY, maxX, maxY] = [point[0], point[1], point[0], point[1]]\n\n    const rtreeResults = this.search(minX, minY, maxX, maxY)\n\n    if (filterInsidePolygon) {\n      return rtreeResults\n        .filter((item) => {\n          const polygon = this.polygonsById.get(item.id)\n\n          if (polygon) {\n            return inside(point, polygon)\n          } else {\n            return false\n          }\n        })\n        .map((item) => item.id)\n    } else {\n      return rtreeResults.map((item) => item.id)\n    }\n  }\n}\n"],"names":[],"mappings":";;;AAUA,MAAM,gCAAgC;AAY/B,MAAM,MAAM;AAAA,EACjB,QAA0B,IAAI,MAAA;AAAA,EAE9B,mCAAyC,IAAA;AAAA,EACzC,iCAAoC,IAAA;AAAA,EACpC,gCAAwC,IAAA;AAAA,EAExC,QAAQ,IAAY,SAAkB;AACpC,SAAK,WAAW,EAAE;AAElB,UAAM,OAAO,YAAY,OAAO;AAEhC,UAAM,OAAO;AAAA,MACX,MAAM,KAAK,CAAC;AAAA,MACZ,MAAM,KAAK,CAAC;AAAA,MACZ,MAAM,KAAK,CAAC;AAAA,MACZ,MAAM,KAAK,CAAC;AAAA,MACZ;AAAA,IAAA;AAGF,SAAK,aAAa,IAAI,IAAI,OAAO;AACjC,SAAK,WAAW,IAAI,IAAI,IAAI;AAC5B,SAAK,UAAU,IAAI,IAAI,IAAI;AAE3B,SAAK,MAAM,OAAO,IAAI;AAAA,EACxB;AAAA,EAEA,WAAW,IAAY;AACrB,UAAM,OAAO,KAAK,UAAU,IAAI,EAAE;AAElC,QAAI,MAAM;AACR,WAAK,MAAM,OAAO,IAAI;AAEtB,WAAK,aAAa,OAAO,EAAE;AAC3B,WAAK,WAAW,OAAO,EAAE;AACzB,WAAK,UAAU,OAAO,EAAE;AAAA,IAC1B;AAAA,EACF;AAAA,EAEA,QAAQ;AACN,SAAK,aAAa,MAAA;AAClB,SAAK,WAAW,MAAA;AAChB,SAAK,UAAU,MAAA;AAEf,SAAK,MAAM,MAAA;AAAA,EACb;AAAA,EAEQ,OACN,MACA,MACA,MACA,MACa;AACb,WAAO,KAAK,MAAM,OAAO;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA,CACD;AAAA,EACH;AAAA,EAEA,QAAQ,IAAY;AAClB,WAAO,KAAK,WAAW,IAAI,EAAE;AAAA,EAC/B;AAAA,EAEA,WAAW,IAAY;AACrB,WAAO,KAAK,aAAa,IAAI,EAAE;AAAA,EACjC;AAAA,EAEA,eAAe,MAAsB;AACnC,UAAM,CAAC,MAAM,MAAM,MAAM,IAAI,IAAI;AACjC,WAAO,KAAK,OAAO,MAAM,MAAM,MAAM,IAAI,EAAE,IAAI,CAAC,SAAS,KAAK,EAAE;AAAA,EAClE;AAAA,EAEA,gBACE,OACA,sBAAsB,+BACZ;AACV,UAAM,CAAC,MAAM,MAAM,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAExE,UAAM,eAAe,KAAK,OAAO,MAAM,MAAM,MAAM,IAAI;AAEvD,QAAI,qBAAqB;AACvB,aAAO,aACJ,OAAO,CAAC,SAAS;AAChB,cAAM,UAAU,KAAK,aAAa,IAAI,KAAK,EAAE;AAE7C,YAAI,SAAS;AACX,iBAAO,OAAO,OAAO,OAAO;AAAA,QAC9B,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF,CAAC,EACA,IAAI,CAAC,SAAS,KAAK,EAAE;AAAA,IAC1B,OAAO;AACL,aAAO,aAAa,IAAI,CAAC,SAAS,KAAK,EAAE;AAAA,IAC3C;AAAA,EACF;AACF;"}